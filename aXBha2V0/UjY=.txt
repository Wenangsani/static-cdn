 [
  {
    "number": "91",
    "type": "reading",
    "direction": "<b>SECTION 3</b>\r\n<b>READING COMPREHENSION</b>\r\n\r\nThis section is designed to measure your ability to read and understand short passages similar in\r\ntopic and style to those that students are likely to encounter in North American universities and\r\ncolleges. This section contains reading passages and questions about the passages.\r\n\r\n<b><u>Directions</u></b>: In this section you will read several passages. Each one is followed by a number of\r\nquestions about it. You are to choose the one best answer, (A), (B), (C), or (D), to each question. Then,\r\non your answer sheet, find the number of the question and fill in the space that corresponds to the\r\nletter of the answer you have chosen.\r\n\r\nAnswer all questions about the information in a passage on the basis of what is stated or implied\r\nin that passage.\r\n\r\nRead the following passage:\r\n\r\nJohn Quincy Adams, who served as the sixth president of the United States from 1825\r\nto 1829, is today recognized for his masterful statesmanship and diplomacy. He dedicated his\r\nlife to public service, both in the presidency and in the various other political offices that he\r\nheld. Throughout his political career he demonstrated his unswerving belief in freedom of\r\n\r\n<span style=\"color:red\">(5)</span> speech, the antislavery cause, and the right of Americans to be free from European and Asian\r\ndomination.\r\n\r\n<b>Example I</b>\r\n\r\nTo what did John Quincy Adams devote his life?\r\n(A) Improving his personal life\r\n(B) Serving the public\r\n(C) Increasing his fortune\r\n(D) Working on his private business\r\n\r\nAccording to the passage, John Quincy Adams “dedicated his life to public service.” Therefore, you\r\nshould choose answer (B).\r\n\r\n<b>Example II</b>\r\nIn line 4, the word “unswerving” is closest in meaning to\r\n\r\n(A) moveable\r\n(B) insignificant\r\n(C) unchanging\r\n(D) diplomatic\r\n\r\nThe passage states that John Quincy Adams demonstrated his unswerving belief “throughout his\r\ncareer.” This implies that the belief did not change. Therefore, you should choose answer (C).\r\n",
    "question": "All of the following languages were written on the Rosetta stone EXCEPT",
    "text": "<b>Questions 91-100</b>\r\n\r\nNapoleon Bonaparte's ambition to control all the area\r\naround the Mediterranean Sea led him and his French\r\nsoldiers to Egypt. After losing a naval battle, they were\r\nforced to remain there for three years. In 1799, while \r\n<span style=\"color:red\">(5)</span> constructing a fort, a soldier discovered a piece of stele (a\r\nstone pillar bearing an inscription) known as the Rosetta \r\nstone, in commemoration of the town near the fort. This\r\nfamous stone, which would eventually lead to the deciphering\r\nof ancient Egyptian hieroglyphics dating to 3100 B.C.,\r\n<span style=\"color:red\">(10)</span> was written in three languages: hieroglyphics (picture writing),\r\ndemotic (a shorthand version of Egyptian hieroglyphics),\r\nand Greek. Scientists discovered that the characters,\r\nunlike those in English, could be written from right to left\r\nand in other directions as well. The direction in which they \r\n<span style=\"color:red\">(15)</span> were read depended on how the characters were arranged.\r\nLiving elements (animals, people, and body parts) were\r\noften the first symbols, and the direction that they faced\r\nindicated the direction for reading them.\r\n\r\nTwenty - three years after the discovery of the Rosetta\r\n<span style=\"color:red\">(20)</span> stone, Jean François Champollion, a French philologist\r\nfluent in several languages, was able to decipher the first\r\nword-Ptolemy-the name of an Egyptian ruler. This name\r\nwas written inside an oval called a “cartouche”. Further\r\ninvestigation revealed that cartouches contained names of \r\n<span style=\"color:red\">(25)</span> important people of that period. Champollion painstakingly\r\ncontinued his search and was able to increase his growing\r\nlist of known phonetic signs. He and an Englishman,\r\nThomas Young, worked independently of each other to\r\nunravel the deeply hidden mysteries of this strange language.\r\n<span style=\"color:red\">(30)</span> Young believed that sound values could be assigned\r\nto the symbols, while Champollion insisted that the pictures\r\nrepresented words. ",
    "ans_a": "French",
    "ans_b": "demotic",
    "ans_c": "Greek",
    "ans_d": "hieroglyphics",
    "answer": "A"
  },
  {
    "number": "92",
    "type": "reading",
    "question": "All of the following statements are true EXCEPT",
    "text": "<b>Questions 91-100</b>\r\n\r\nNapoleon Bonaparte's ambition to control all the area\r\naround the Mediterranean Sea led him and his French\r\nsoldiers to Egypt. After losing a naval battle, they were\r\nforced to remain there for three years. In 1799, while \r\n<span style=\"color:red\">(5)</span> constructing a fort, a soldier discovered a piece of stele (a\r\nstone pillar bearing an inscription) known as the Rosetta \r\nstone, in commemoration of the town near the fort. This\r\nfamous stone, which would eventually lead to the deciphering\r\nof ancient Egyptian hieroglyphics dating to 3100 B.C.,\r\n<span style=\"color:red\">(10)</span> was written in three languages: hieroglyphics (picture writing),\r\ndemotic (a shorthand version of Egyptian hieroglyphics),\r\nand Greek. Scientists discovered that the characters,\r\nunlike those in English, could be written from right to left\r\nand in other directions as well. The direction in which they \r\n<span style=\"color:red\">(15)</span> were read depended on how the characters were arranged.\r\nLiving elements (animals, people, and body parts) were\r\noften the first symbols, and the direction that they faced\r\nindicated the direction for reading them.\r\n\r\nTwenty - three years after the discovery of the Rosetta\r\n<span style=\"color:red\">(20)</span> stone, Jean François Champollion, a French philologist\r\nfluent in several languages, was able to decipher the first\r\nword-Ptolemy-the name of an Egyptian ruler. This name\r\nwas written inside an oval called a “cartouche”. Further\r\ninvestigation revealed that cartouches contained names of \r\n<span style=\"color:red\">(25)</span> important people of that period. Champollion painstakingly\r\ncontinued his search and was able to increase his growing\r\nlist of known phonetic signs. He and an Englishman,\r\nThomas Young, worked independently of each other to\r\nunravel the deeply hidden mysteries of this strange language.\r\n<span style=\"color:red\">(30)</span> Young believed that sound values could be assigned\r\nto the symbols, while Champollion insisted that the pictures\r\nrepresented words. ",
    "ans_a": "cartouches contained names of prominent people of the period",
    "ans_b": "Champollion and Young worked together in an attempt to decipher the hieroglyphics",
    "ans_c": "one of Napoleon's soldiers discovered the Rosetta stone",
    "ans_d": "Thomas Young believed that sound values could be assigned to the symbols",
    "answer": "B"
  },
  {
    "number": "93",
    "type": "reading",
    "question": "The word “deciphering” in line 8 is closest in meaning to",
    "text": "<b>Questions 91-100</b>\r\n\r\nNapoleon Bonaparte's ambition to control all the area\r\naround the Mediterranean Sea led him and his French\r\nsoldiers to Egypt. After losing a naval battle, they were\r\nforced to remain there for three years. In 1799, while \r\n<span style=\"color:red\">(5)</span> constructing a fort, a soldier discovered a piece of stele (a\r\nstone pillar bearing an inscription) known as the Rosetta \r\nstone, in commemoration of the town near the fort. This\r\nfamous stone, which would eventually lead to the deciphering\r\nof ancient Egyptian hieroglyphics dating to 3100 B.C.,\r\n<span style=\"color:red\">(10)</span> was written in three languages: hieroglyphics (picture writing),\r\ndemotic (a shorthand version of Egyptian hieroglyphics),\r\nand Greek. Scientists discovered that the characters,\r\nunlike those in English, could be written from right to left\r\nand in other directions as well. The direction in which they \r\n<span style=\"color:red\">(15)</span> were read depended on how the characters were arranged.\r\nLiving elements (animals, people, and body parts) were\r\noften the first symbols, and the direction that they faced\r\nindicated the direction for reading them.\r\n\r\nTwenty - three years after the discovery of the Rosetta\r\n<span style=\"color:red\">(20)</span> stone, Jean François Champollion, a French philologist\r\nfluent in several languages, was able to decipher the first\r\nword-Ptolemy-the name of an Egyptian ruler. This name\r\nwas written inside an oval called a “cartouche”. Further\r\ninvestigation revealed that cartouches contained names of \r\n<span style=\"color:red\">(25)</span> important people of that period. Champollion painstakingly\r\ncontinued his search and was able to increase his growing\r\nlist of known phonetic signs. He and an Englishman,\r\nThomas Young, worked independently of each other to\r\nunravel the deeply hidden mysteries of this strange language.\r\n<span style=\"color:red\">(30)</span> Young believed that sound values could be assigned\r\nto the symbols, while Champollion insisted that the pictures\r\nrepresented words. ",
    "ans_a": "decoding",
    "ans_b": "downfall",
    "ans_c": "discovery",
    "ans_d": "probing",
    "answer": "A"
  },
  {
    "number": "94",
    "type": "reading",
    "question": "The first word deciphered from the Rosetta stone was",
    "text": "<b>Questions 91-100</b>\r\n\r\nNapoleon Bonaparte's ambition to control all the area\r\naround the Mediterranean Sea led him and his French\r\nsoldiers to Egypt. After losing a naval battle, they were\r\nforced to remain there for three years. In 1799, while \r\n<span style=\"color:red\">(5)</span> constructing a fort, a soldier discovered a piece of stele (a\r\nstone pillar bearing an inscription) known as the Rosetta \r\nstone, in commemoration of the town near the fort. This\r\nfamous stone, which would eventually lead to the deciphering\r\nof ancient Egyptian hieroglyphics dating to 3100 B.C.,\r\n<span style=\"color:red\">(10)</span> was written in three languages: hieroglyphics (picture writing),\r\ndemotic (a shorthand version of Egyptian hieroglyphics),\r\nand Greek. Scientists discovered that the characters,\r\nunlike those in English, could be written from right to left\r\nand in other directions as well. The direction in which they \r\n<span style=\"color:red\">(15)</span> were read depended on how the characters were arranged.\r\nLiving elements (animals, people, and body parts) were\r\noften the first symbols, and the direction that they faced\r\nindicated the direction for reading them.\r\n\r\nTwenty - three years after the discovery of the Rosetta\r\n<span style=\"color:red\">(20)</span> stone, Jean François Champollion, a French philologist\r\nfluent in several languages, was able to decipher the first\r\nword-Ptolemy-the name of an Egyptian ruler. This name\r\nwas written inside an oval called a “cartouche”. Further\r\ninvestigation revealed that cartouches contained names of \r\n<span style=\"color:red\">(25)</span> important people of that period. Champollion painstakingly\r\ncontinued his search and was able to increase his growing\r\nlist of known phonetic signs. He and an Englishman,\r\nThomas Young, worked independently of each other to\r\nunravel the deeply hidden mysteries of this strange language.\r\n<span style=\"color:red\">(30)</span> Young believed that sound values could be assigned\r\nto the symbols, while Champollion insisted that the pictures\r\nrepresented words. ",
    "ans_a": "cartouche",
    "ans_b": "Ptolemy",
    "ans_c": "demotic",
    "ans_d": "Champollion",
    "answer": "B"
  },
  {
    "number": "95",
    "type": "reading",
    "question": "Napoleon's soldiers were in Egypt in 1799 because they were",
    "text": "<b>Questions 91-100</b>\r\n\r\nNapoleon Bonaparte's ambition to control all the area\r\naround the Mediterranean Sea led him and his French\r\nsoldiers to Egypt. After losing a naval battle, they were\r\nforced to remain there for three years. In 1799, while \r\n<span style=\"color:red\">(5)</span> constructing a fort, a soldier discovered a piece of stele (a\r\nstone pillar bearing an inscription) known as the Rosetta \r\nstone, in commemoration of the town near the fort. This\r\nfamous stone, which would eventually lead to the deciphering\r\nof ancient Egyptian hieroglyphics dating to 3100 B.C.,\r\n<span style=\"color:red\">(10)</span> was written in three languages: hieroglyphics (picture writing),\r\ndemotic (a shorthand version of Egyptian hieroglyphics),\r\nand Greek. Scientists discovered that the characters,\r\nunlike those in English, could be written from right to left\r\nand in other directions as well. The direction in which they \r\n<span style=\"color:red\">(15)</span> were read depended on how the characters were arranged.\r\nLiving elements (animals, people, and body parts) were\r\noften the first symbols, and the direction that they faced\r\nindicated the direction for reading them.\r\n\r\nTwenty - three years after the discovery of the Rosetta\r\n<span style=\"color:red\">(20)</span> stone, Jean François Champollion, a French philologist\r\nfluent in several languages, was able to decipher the first\r\nword-Ptolemy-the name of an Egyptian ruler. This name\r\nwas written inside an oval called a “cartouche”. Further\r\ninvestigation revealed that cartouches contained names of \r\n<span style=\"color:red\">(25)</span> important people of that period. Champollion painstakingly\r\ncontinued his search and was able to increase his growing\r\nlist of known phonetic signs. He and an Englishman,\r\nThomas Young, worked independently of each other to\r\nunravel the deeply hidden mysteries of this strange language.\r\n<span style=\"color:red\">(30)</span> Young believed that sound values could be assigned\r\nto the symbols, while Champollion insisted that the pictures\r\nrepresented words. ",
    "ans_a": "celebrating a naval victory",
    "ans_b": "looking for the Rosetta stone",
    "ans_c": "waiting to continue their campaign",
    "ans_d": "trying to decipher the hieroglyphics",
    "answer": "C"
  },
  {
    "number": "96",
    "type": "reading",
    "question": "The person responsible for deciphering the first word was",
    "text": "<b>Questions 91-100</b>\r\n\r\nNapoleon Bonaparte's ambition to control all the area\r\naround the Mediterranean Sea led him and his French\r\nsoldiers to Egypt. After losing a naval battle, they were\r\nforced to remain there for three years. In 1799, while \r\n<span style=\"color:red\">(5)</span> constructing a fort, a soldier discovered a piece of stele (a\r\nstone pillar bearing an inscription) known as the Rosetta \r\nstone, in commemoration of the town near the fort. This\r\nfamous stone, which would eventually lead to the deciphering\r\nof ancient Egyptian hieroglyphics dating to 3100 B.C.,\r\n<span style=\"color:red\">(10)</span> was written in three languages: hieroglyphics (picture writing),\r\ndemotic (a shorthand version of Egyptian hieroglyphics),\r\nand Greek. Scientists discovered that the characters,\r\nunlike those in English, could be written from right to left\r\nand in other directions as well. The direction in which they \r\n<span style=\"color:red\">(15)</span> were read depended on how the characters were arranged.\r\nLiving elements (animals, people, and body parts) were\r\noften the first symbols, and the direction that they faced\r\nindicated the direction for reading them.\r\n\r\nTwenty - three years after the discovery of the Rosetta\r\n<span style=\"color:red\">(20)</span> stone, Jean François Champollion, a French philologist\r\nfluent in several languages, was able to decipher the first\r\nword-Ptolemy-the name of an Egyptian ruler. This name\r\nwas written inside an oval called a “cartouche”. Further\r\ninvestigation revealed that cartouches contained names of \r\n<span style=\"color:red\">(25)</span> important people of that period. Champollion painstakingly\r\ncontinued his search and was able to increase his growing\r\nlist of known phonetic signs. He and an Englishman,\r\nThomas Young, worked independently of each other to\r\nunravel the deeply hidden mysteries of this strange language.\r\n<span style=\"color:red\">(30)</span> Young believed that sound values could be assigned\r\nto the symbols, while Champollion insisted that the pictures\r\nrepresented words. ",
    "ans_a": "Champollion",
    "ans_b": "Young",
    "ans_c": "Ptolemy",
    "ans_d": "Napoleon",
    "answer": "A"
  },
  {
    "number": "97",
    "type": "reading",
    "question": "Why was the piece of newly discovered stele called the Rosetta stone?",
    "text": "<b>Questions 91-100</b>\r\n\r\nNapoleon Bonaparte's ambition to control all the area\r\naround the Mediterranean Sea led him and his French\r\nsoldiers to Egypt. After losing a naval battle, they were\r\nforced to remain there for three years. In 1799, while \r\n<span style=\"color:red\">(5)</span> constructing a fort, a soldier discovered a piece of stele (a\r\nstone pillar bearing an inscription) known as the Rosetta \r\nstone, in commemoration of the town near the fort. This\r\nfamous stone, which would eventually lead to the deciphering\r\nof ancient Egyptian hieroglyphics dating to 3100 B.C.,\r\n<span style=\"color:red\">(10)</span> was written in three languages: hieroglyphics (picture writing),\r\ndemotic (a shorthand version of Egyptian hieroglyphics),\r\nand Greek. Scientists discovered that the characters,\r\nunlike those in English, could be written from right to left\r\nand in other directions as well. The direction in which they \r\n<span style=\"color:red\">(15)</span> were read depended on how the characters were arranged.\r\nLiving elements (animals, people, and body parts) were\r\noften the first symbols, and the direction that they faced\r\nindicated the direction for reading them.\r\n\r\nTwenty - three years after the discovery of the Rosetta\r\n<span style=\"color:red\">(20)</span> stone, Jean François Champollion, a French philologist\r\nfluent in several languages, was able to decipher the first\r\nword-Ptolemy-the name of an Egyptian ruler. This name\r\nwas written inside an oval called a “cartouche”. Further\r\ninvestigation revealed that cartouches contained names of \r\n<span style=\"color:red\">(25)</span> important people of that period. Champollion painstakingly\r\ncontinued his search and was able to increase his growing\r\nlist of known phonetic signs. He and an Englishman,\r\nThomas Young, worked independently of each other to\r\nunravel the deeply hidden mysteries of this strange language.\r\n<span style=\"color:red\">(30)</span> Young believed that sound values could be assigned\r\nto the symbols, while Champollion insisted that the pictures\r\nrepresented words. ",
    "ans_a": "It was shaped like a rosette",
    "ans_b": "It was to honor Napoleon's friend Rosetta",
    "ans_c": "The town near the fort was called Rosetta",
    "ans_d": "The fort was called Rosetta",
    "answer": "C"
  },
  {
    "number": "98",
    "type": "reading",
    "question": "In line 1, “ambition” is nearest in meaning to",
    "text": "<b>Questions 91-100</b>\r\n\r\nNapoleon Bonaparte's ambition to control all the area\r\naround the Mediterranean Sea led him and his French\r\nsoldiers to Egypt. After losing a naval battle, they were\r\nforced to remain there for three years. In 1799, while \r\n<span style=\"color:red\">(5)</span> constructing a fort, a soldier discovered a piece of stele (a\r\nstone pillar bearing an inscription) known as the Rosetta \r\nstone, in commemoration of the town near the fort. This\r\nfamous stone, which would eventually lead to the deciphering\r\nof ancient Egyptian hieroglyphics dating to 3100 B.C.,\r\n<span style=\"color:red\">(10)</span> was written in three languages: hieroglyphics (picture writing),\r\ndemotic (a shorthand version of Egyptian hieroglyphics),\r\nand Greek. Scientists discovered that the characters,\r\nunlike those in English, could be written from right to left\r\nand in other directions as well. The direction in which they \r\n<span style=\"color:red\">(15)</span> were read depended on how the characters were arranged.\r\nLiving elements (animals, people, and body parts) were\r\noften the first symbols, and the direction that they faced\r\nindicated the direction for reading them.\r\n\r\nTwenty - three years after the discovery of the Rosetta\r\n<span style=\"color:red\">(20)</span> stone, Jean François Champollion, a French philologist\r\nfluent in several languages, was able to decipher the first\r\nword-Ptolemy-the name of an Egyptian ruler. This name\r\nwas written inside an oval called a “cartouche”. Further\r\ninvestigation revealed that cartouches contained names of \r\n<span style=\"color:red\">(25)</span> important people of that period. Champollion painstakingly\r\ncontinued his search and was able to increase his growing\r\nlist of known phonetic signs. He and an Englishman,\r\nThomas Young, worked independently of each other to\r\nunravel the deeply hidden mysteries of this strange language.\r\n<span style=\"color:red\">(30)</span> Young believed that sound values could be assigned\r\nto the symbols, while Champollion insisted that the pictures\r\nrepresented words. ",
    "ans_a": "aspiration",
    "ans_b": "indolence",
    "ans_c": "indifference",
    "ans_d": "apathy",
    "answer": "A"
  },
  {
    "number": "99",
    "type": "reading",
    "question": "What is the best title for the passage?",
    "text": "<b>Questions 91-100</b>\r\n\r\nNapoleon Bonaparte's ambition to control all the area\r\naround the Mediterranean Sea led him and his French\r\nsoldiers to Egypt. After losing a naval battle, they were\r\nforced to remain there for three years. In 1799, while \r\n<span style=\"color:red\">(5)</span> constructing a fort, a soldier discovered a piece of stele (a\r\nstone pillar bearing an inscription) known as the Rosetta \r\nstone, in commemoration of the town near the fort. This\r\nfamous stone, which would eventually lead to the deciphering\r\nof ancient Egyptian hieroglyphics dating to 3100 B.C.,\r\n<span style=\"color:red\">(10)</span> was written in three languages: hieroglyphics (picture writing),\r\ndemotic (a shorthand version of Egyptian hieroglyphics),\r\nand Greek. Scientists discovered that the characters,\r\nunlike those in English, could be written from right to left\r\nand in other directions as well. The direction in which they \r\n<span style=\"color:red\">(15)</span> were read depended on how the characters were arranged.\r\nLiving elements (animals, people, and body parts) were\r\noften the first symbols, and the direction that they faced\r\nindicated the direction for reading them.\r\n\r\nTwenty - three years after the discovery of the Rosetta\r\n<span style=\"color:red\">(20)</span> stone, Jean François Champollion, a French philologist\r\nfluent in several languages, was able to decipher the first\r\nword-Ptolemy-the name of an Egyptian ruler. This name\r\nwas written inside an oval called a “cartouche”. Further\r\ninvestigation revealed that cartouches contained names of \r\n<span style=\"color:red\">(25)</span> important people of that period. Champollion painstakingly\r\ncontinued his search and was able to increase his growing\r\nlist of known phonetic signs. He and an Englishman,\r\nThomas Young, worked independently of each other to\r\nunravel the deeply hidden mysteries of this strange language.\r\n<span style=\"color:red\">(30)</span> Young believed that sound values could be assigned\r\nto the symbols, while Champollion insisted that the pictures\r\nrepresented words. ",
    "ans_a": "Napoleon's Great Discovery",
    "ans_b": "Deciphering the Hieroglyphics of the Rosetta Stone",
    "ans_c": "Thomas Young's Great Contribution",
    "ans_d": "The Importance of Cartouches",
    "answer": "B"
  },
  {
    "number": "100",
    "type": "reading",
    "question": "In which lines of the reading passage is the direction for reading hieroglyphics discussed?",
    "text": "<b>Questions 91-100</b>\r\n\r\nNapoleon Bonaparte's ambition to control all the area\r\naround the Mediterranean Sea led him and his French\r\nsoldiers to Egypt. After losing a naval battle, they were\r\nforced to remain there for three years. In 1799, while \r\n<span style=\"color:red\">(5)</span> constructing a fort, a soldier discovered a piece of stele (a\r\nstone pillar bearing an inscription) known as the Rosetta \r\nstone, in commemoration of the town near the fort. This\r\nfamous stone, which would eventually lead to the deciphering\r\nof ancient Egyptian hieroglyphics dating to 3100 B.C.,\r\n<span style=\"color:red\">(10)</span> was written in three languages: hieroglyphics (picture writing),\r\ndemotic (a shorthand version of Egyptian hieroglyphics),\r\nand Greek. Scientists discovered that the characters,\r\nunlike those in English, could be written from right to left\r\nand in other directions as well. The direction in which they \r\n<span style=\"color:red\">(15)</span> were read depended on how the characters were arranged.\r\nLiving elements (animals, people, and body parts) were\r\noften the first symbols, and the direction that they faced\r\nindicated the direction for reading them.\r\n\r\nTwenty - three years after the discovery of the Rosetta\r\n<span style=\"color:red\">(20)</span> stone, Jean François Champollion, a French philologist\r\nfluent in several languages, was able to decipher the first\r\nword-Ptolemy-the name of an Egyptian ruler. This name\r\nwas written inside an oval called a “cartouche”. Further\r\ninvestigation revealed that cartouches contained names of \r\n<span style=\"color:red\">(25)</span> important people of that period. Champollion painstakingly\r\ncontinued his search and was able to increase his growing\r\nlist of known phonetic signs. He and an Englishman,\r\nThomas Young, worked independently of each other to\r\nunravel the deeply hidden mysteries of this strange language.\r\n<span style=\"color:red\">(30)</span> Young believed that sound values could be assigned\r\nto the symbols, while Champollion insisted that the pictures\r\nrepresented words. ",
    "ans_a": "Lines 5-8",
    "ans_b": "Lines 14-18",
    "ans_c": "Lines 19-22",
    "ans_d": "Lines 25-27",
    "answer": "B"
  },
  {
    "number": "101",
    "type": "reading",
    "question": "How are termites like ants?",
    "text": "<b>Questions 101-110</b>\r\n\r\nWhen buying a house, you must be sure to have it checked\r\nfor termites. A termite is much like an ant in its communal\r\nhabits, although physically the two insects are distinct. \r\n\r\nLike those of ants, termite colonies consist of different \r\n<span style=\"color:red\">(5)</span> classes, each with its own particular job. The most perfectly \r\nformed termites, both male and female, make up the \r\nreproductive class. They have eyes, hard body walls, and \r\nfully developed wings. A pair of reproductive termites \r\nfounds the colony. When new reproductive termites\r\n<span style=\"color:red\">(10)</span> develop, they leave to form another colony. They use their \r\nwings only this one time and then break them off.\r\n\r\nThe worker termites are small, blind, and wingless, with \r\nsoft bodies. They make up the majority of the colony and do\r\nall the work. Soldiers are eyeless and wingless but are large \r\n<span style=\"color:red\">(15)</span> than the workers and have hard heads and strong jaws and \r\nlegs. They defend the colony and are cared for by the \r\nworkers.\r\n\r\nThe male and female of the reproductive class remain \r\ninside a closed-in cell where the female lays thousands \r\n<span style=\"color:red\">(20)</span> eggs. The workers place the eggs in cells and care for them. \r\nEven if one colony is treated with poison, if a male and \r\nfemale of the reproductive class escape, they can form a new \r\ncolony. \r\n\r\nPest control companies can inspect a house for infestation \r\n<span style=\"color:red\">(25)</span> of termites. Often, a lay person cannot spot the \r\nevidence, so it is critical to have the opinion of a professional.\r\nTreatments vary depending upon the type of termite.",
    "ans_a": "They live in communities, and each class has a specific duty.",
    "ans_b": "Their bodies are the same shape.",
    "ans_c": "The king and queen are imprisoned.",
    "ans_d": "The females' reproductive capacities are the same.",
    "answer": "A"
  },
  {
    "number": "102",
    "type": "reading",
    "question": "The word \"communal\" in line 2 is closest in meaning to",
    "text": "<b>Questions 101-110</b>\r\n\r\nWhen buying a house, you must be sure to have it checked\r\nfor termites. A termite is much like an ant in its communal\r\nhabits, although physically the two insects are distinct. \r\n\r\nLike those of ants, termite colonies consist of different \r\n<span style=\"color:red\">(5)</span> classes, each with its own particular job. The most perfectly \r\nformed termites, both male and female, make up the \r\nreproductive class. They have eyes, hard body walls, and \r\nfully developed wings. A pair of reproductive termites \r\nfounds the colony. When new reproductive termites\r\n<span style=\"color:red\">(10)</span> develop, they leave to form another colony. They use their \r\nwings only this one time and then break them off.\r\n\r\nThe worker termites are small, blind, and wingless, with \r\nsoft bodies. They make up the majority of the colony and do\r\nall the work. Soldiers are eyeless and wingless but are large \r\n<span style=\"color:red\">(15)</span> than the workers and have hard heads and strong jaws and \r\nlegs. They defend the colony and are cared for by the \r\nworkers.\r\n\r\nThe male and female of the reproductive class remain \r\ninside a closed-in cell where the female lays thousands \r\n<span style=\"color:red\">(20)</span> eggs. The workers place the eggs in cells and care for them. \r\nEven if one colony is treated with poison, if a male and \r\nfemale of the reproductive class escape, they can form a new \r\ncolony. \r\n\r\nPest control companies can inspect a house for infestation \r\n<span style=\"color:red\">(25)</span> of termites. Often, a lay person cannot spot the \r\nevidence, so it is critical to have the opinion of a professional.\r\nTreatments vary depending upon the type of termite.",
    "ans_a": "eating",
    "ans_b": "reproducing",
    "ans_c": "organizational",
    "ans_d": "social",
    "answer": "D"
  },
  {
    "number": "103",
    "type": "reading",
    "question": "Which of the following is NOT true?",
    "text": "<b>Questions 101-110</b>\r\n\r\nWhen buying a house, you must be sure to have it checked\r\nfor termites. A termite is much like an ant in its communal\r\nhabits, although physically the two insects are distinct. \r\n\r\nLike those of ants, termite colonies consist of different \r\n<span style=\"color:red\">(5)</span> classes, each with its own particular job. The most perfectly \r\nformed termites, both male and female, make up the \r\nreproductive class. They have eyes, hard body walls, and \r\nfully developed wings. A pair of reproductive termites \r\nfounds the colony. When new reproductive termites\r\n<span style=\"color:red\">(10)</span> develop, they leave to form another colony. They use their \r\nwings only this one time and then break them off.\r\n\r\nThe worker termites are small, blind, and wingless, with \r\nsoft bodies. They make up the majority of the colony and do\r\nall the work. Soldiers are eyeless and wingless but are large \r\n<span style=\"color:red\">(15)</span> than the workers and have hard heads and strong jaws and \r\nlegs. They defend the colony and are cared for by the \r\nworkers.\r\n\r\nThe male and female of the reproductive class remain \r\ninside a closed-in cell where the female lays thousands \r\n<span style=\"color:red\">(20)</span> eggs. The workers place the eggs in cells and care for them. \r\nEven if one colony is treated with poison, if a male and \r\nfemale of the reproductive class escape, they can form a new \r\ncolony. \r\n\r\nPest control companies can inspect a house for infestation \r\n<span style=\"color:red\">(25)</span> of termites. Often, a lay person cannot spot the \r\nevidence, so it is critical to have the opinion of a professional.\r\nTreatments vary depending upon the type of termite.",
    "ans_a": "All termites have eyes.",
    "ans_b": "Some termites cannot fly.",
    "ans_c": "Workers are smaller than soldiers.",
    "ans_d": "Termites do not fly often.",
    "answer": "A"
  },
  {
    "number": "104",
    "type": "reading",
    "question": "In line 3, the word “distinct\" is closest in meaning to",
    "text": "<b>Questions 101-110</b>\r\n\r\nWhen buying a house, you must be sure to have it checked\r\nfor termites. A termite is much like an ant in its communal\r\nhabits, although physically the two insects are distinct. \r\n\r\nLike those of ants, termite colonies consist of different \r\n<span style=\"color:red\">(5)</span> classes, each with its own particular job. The most perfectly \r\nformed termites, both male and female, make up the \r\nreproductive class. They have eyes, hard body walls, and \r\nfully developed wings. A pair of reproductive termites \r\nfounds the colony. When new reproductive termites\r\n<span style=\"color:red\">(10)</span> develop, they leave to form another colony. They use their \r\nwings only this one time and then break them off.\r\n\r\nThe worker termites are small, blind, and wingless, with \r\nsoft bodies. They make up the majority of the colony and do\r\nall the work. Soldiers are eyeless and wingless but are large \r\n<span style=\"color:red\">(15)</span> than the workers and have hard heads and strong jaws and \r\nlegs. They defend the colony and are cared for by the \r\nworkers.\r\n\r\nThe male and female of the reproductive class remain \r\ninside a closed-in cell where the female lays thousands \r\n<span style=\"color:red\">(20)</span> eggs. The workers place the eggs in cells and care for them. \r\nEven if one colony is treated with poison, if a male and \r\nfemale of the reproductive class escape, they can form a new \r\ncolony. \r\n\r\nPest control companies can inspect a house for infestation \r\n<span style=\"color:red\">(25)</span> of termites. Often, a lay person cannot spot the \r\nevidence, so it is critical to have the opinion of a professional.\r\nTreatments vary depending upon the type of termite.",
    "ans_a": "similar",
    "ans_b": "different",
    "ans_c": "genetically related",
    "ans_d": "strong",
    "answer": "B"
  },
  {
    "number": "105",
    "type": "reading",
    "question": "In line 5, \"classes\" is closest in meaning to",
    "text": "<b>Questions 101-110</b>\r\n\r\nWhen buying a house, you must be sure to have it checked\r\nfor termites. A termite is much like an ant in its communal\r\nhabits, although physically the two insects are distinct. \r\n\r\nLike those of ants, termite colonies consist of different \r\n<span style=\"color:red\">(5)</span> classes, each with its own particular job. The most perfectly \r\nformed termites, both male and female, make up the \r\nreproductive class. They have eyes, hard body walls, and \r\nfully developed wings. A pair of reproductive termites \r\nfounds the colony. When new reproductive termites\r\n<span style=\"color:red\">(10)</span> develop, they leave to form another colony. They use their \r\nwings only this one time and then break them off.\r\n\r\nThe worker termites are small, blind, and wingless, with \r\nsoft bodies. They make up the majority of the colony and do\r\nall the work. Soldiers are eyeless and wingless but are large \r\n<span style=\"color:red\">(15)</span> than the workers and have hard heads and strong jaws and \r\nlegs. They defend the colony and are cared for by the \r\nworkers.\r\n\r\nThe male and female of the reproductive class remain \r\ninside a closed-in cell where the female lays thousands \r\n<span style=\"color:red\">(20)</span> eggs. The workers place the eggs in cells and care for them. \r\nEven if one colony is treated with poison, if a male and \r\nfemale of the reproductive class escape, they can form a new \r\ncolony. \r\n\r\nPest control companies can inspect a house for infestation \r\n<span style=\"color:red\">(25)</span> of termites. Often, a lay person cannot spot the \r\nevidence, so it is critical to have the opinion of a professional.\r\nTreatments vary depending upon the type of termite.",
    "ans_a": "sexes  ",
    "ans_b": "colonies",
    "ans_c": "courses",
    "ans_d": "categories",
    "answer": "D"
  },
  {
    "number": "106",
    "type": "reading",
    "question": "Which of the following statements is probably true?",
    "text": "<b>Questions 101-110</b>\r\n\r\nWhen buying a house, you must be sure to have it checked\r\nfor termites. A termite is much like an ant in its communal\r\nhabits, although physically the two insects are distinct. \r\n\r\nLike those of ants, termite colonies consist of different \r\n<span style=\"color:red\">(5)</span> classes, each with its own particular job. The most perfectly \r\nformed termites, both male and female, make up the \r\nreproductive class. They have eyes, hard body walls, and \r\nfully developed wings. A pair of reproductive termites \r\nfounds the colony. When new reproductive termites\r\n<span style=\"color:red\">(10)</span> develop, they leave to form another colony. They use their \r\nwings only this one time and then break them off.\r\n\r\nThe worker termites are small, blind, and wingless, with \r\nsoft bodies. They make up the majority of the colony and do\r\nall the work. Soldiers are eyeless and wingless but are large \r\n<span style=\"color:red\">(15)</span> than the workers and have hard heads and strong jaws and \r\nlegs. They defend the colony and are cared for by the \r\nworkers.\r\n\r\nThe male and female of the reproductive class remain \r\ninside a closed-in cell where the female lays thousands \r\n<span style=\"color:red\">(20)</span> eggs. The workers place the eggs in cells and care for them. \r\nEven if one colony is treated with poison, if a male and \r\nfemale of the reproductive class escape, they can form a new \r\ncolony. \r\n\r\nPest control companies can inspect a house for infestation \r\n<span style=\"color:red\">(25)</span> of termites. Often, a lay person cannot spot the \r\nevidence, so it is critical to have the opinion of a professional.\r\nTreatments vary depending upon the type of termite.",
    "ans_a": "Thousands of termites may move together to develop a new colony.",
    "ans_b": "The male and female reproductives do not venture out doors except to form a new colony.",
    "ans_c": "There are more soldiers than workers.",
    "ans_d": "A worker could easily kill a soldier.",
    "answer": "B"
  },
  {
    "number": "107",
    "type": "reading",
    "question": "The word \"founds\" in line 9 is nearest in meaning to",
    "text": "<b>Questions 101-110</b>\r\n\r\nWhen buying a house, you must be sure to have it checked\r\nfor termites. A termite is much like an ant in its communal\r\nhabits, although physically the two insects are distinct. \r\n\r\nLike those of ants, termite colonies consist of different \r\n<span style=\"color:red\">(5)</span> classes, each with its own particular job. The most perfectly \r\nformed termites, both male and female, make up the \r\nreproductive class. They have eyes, hard body walls, and \r\nfully developed wings. A pair of reproductive termites \r\nfounds the colony. When new reproductive termites\r\n<span style=\"color:red\">(10)</span> develop, they leave to form another colony. They use their \r\nwings only this one time and then break them off.\r\n\r\nThe worker termites are small, blind, and wingless, with \r\nsoft bodies. They make up the majority of the colony and do\r\nall the work. Soldiers are eyeless and wingless but are large \r\n<span style=\"color:red\">(15)</span> than the workers and have hard heads and strong jaws and \r\nlegs. They defend the colony and are cared for by the \r\nworkers.\r\n\r\nThe male and female of the reproductive class remain \r\ninside a closed-in cell where the female lays thousands \r\n<span style=\"color:red\">(20)</span> eggs. The workers place the eggs in cells and care for them. \r\nEven if one colony is treated with poison, if a male and \r\nfemale of the reproductive class escape, they can form a new \r\ncolony. \r\n\r\nPest control companies can inspect a house for infestation \r\n<span style=\"color:red\">(25)</span> of termites. Often, a lay person cannot spot the \r\nevidence, so it is critical to have the opinion of a professional.\r\nTreatments vary depending upon the type of termite.",
    "ans_a": "establishes",
    "ans_b": "destroys",
    "ans_c": "controls",
    "ans_d": "guards",
    "answer": "A"
  },
  {
    "number": "108",
    "type": "reading",
    "question": "The word \"cells\" in line 20 is closest in meaning to",
    "text": "<b>Questions 101-110</b>\r\n\r\nWhen buying a house, you must be sure to have it checked\r\nfor termites. A termite is much like an ant in its communal\r\nhabits, although physically the two insects are distinct. \r\n\r\nLike those of ants, termite colonies consist of different \r\n<span style=\"color:red\">(5)</span> classes, each with its own particular job. The most perfectly \r\nformed termites, both male and female, make up the \r\nreproductive class. They have eyes, hard body walls, and \r\nfully developed wings. A pair of reproductive termites \r\nfounds the colony. When new reproductive termites\r\n<span style=\"color:red\">(10)</span> develop, they leave to form another colony. They use their \r\nwings only this one time and then break them off.\r\n\r\nThe worker termites are small, blind, and wingless, with \r\nsoft bodies. They make up the majority of the colony and do\r\nall the work. Soldiers are eyeless and wingless but are large \r\n<span style=\"color:red\">(15)</span> than the workers and have hard heads and strong jaws and \r\nlegs. They defend the colony and are cared for by the \r\nworkers.\r\n\r\nThe male and female of the reproductive class remain \r\ninside a closed-in cell where the female lays thousands \r\n<span style=\"color:red\">(20)</span> eggs. The workers place the eggs in cells and care for them. \r\nEven if one colony is treated with poison, if a male and \r\nfemale of the reproductive class escape, they can form a new \r\ncolony. \r\n\r\nPest control companies can inspect a house for infestation \r\n<span style=\"color:red\">(25)</span> of termites. Often, a lay person cannot spot the \r\nevidence, so it is critical to have the opinion of a professional.\r\nTreatments vary depending upon the type of termite.",
    "ans_a": "combs",
    "ans_b": "rows",
    "ans_c": "compartments",
    "ans_d": "placenta",
    "answer": "C"
  },
  {
    "number": "109",
    "type": "reading",
    "question": "Which of the following would be the best title for this passage",
    "text": "<b>Questions 101-110</b>\r\n\r\nWhen buying a house, you must be sure to have it checked\r\nfor termites. A termite is much like an ant in its communal\r\nhabits, although physically the two insects are distinct. \r\n\r\nLike those of ants, termite colonies consist of different \r\n<span style=\"color:red\">(5)</span> classes, each with its own particular job. The most perfectly \r\nformed termites, both male and female, make up the \r\nreproductive class. They have eyes, hard body walls, and \r\nfully developed wings. A pair of reproductive termites \r\nfounds the colony. When new reproductive termites\r\n<span style=\"color:red\">(10)</span> develop, they leave to form another colony. They use their \r\nwings only this one time and then break them off.\r\n\r\nThe worker termites are small, blind, and wingless, with \r\nsoft bodies. They make up the majority of the colony and do\r\nall the work. Soldiers are eyeless and wingless but are large \r\n<span style=\"color:red\">(15)</span> than the workers and have hard heads and strong jaws and \r\nlegs. They defend the colony and are cared for by the \r\nworkers.\r\n\r\nThe male and female of the reproductive class remain \r\ninside a closed-in cell where the female lays thousands \r\n<span style=\"color:red\">(20)</span> eggs. The workers place the eggs in cells and care for them. \r\nEven if one colony is treated with poison, if a male and \r\nfemale of the reproductive class escape, they can form a new \r\ncolony. \r\n\r\nPest control companies can inspect a house for infestation \r\n<span style=\"color:red\">(25)</span> of termites. Often, a lay person cannot spot the \r\nevidence, so it is critical to have the opinion of a professional.\r\nTreatments vary depending upon the type of termite.",
    "ans_a": "Termites Destroy Houses",
    "ans_b": "Termites Work Well Together",
    "ans_c": "The Habits and Physical Characteristics of Termites",
    "ans_d": "The Relationship of Soldier and Worker Termites",
    "answer": "C"
  },
  {
    "number": "110",
    "type": "reading",
    "question": "The word \"each\" in line 5 refers to",
    "text": "<b>Questions 101-110</b>\r\n\r\nWhen buying a house, you must be sure to have it checked\r\nfor termites. A termite is much like an ant in its communal\r\nhabits, although physically the two insects are distinct. \r\n\r\nLike those of ants, termite colonies consist of different \r\n<span style=\"color:red\">(5)</span> classes, each with its own particular job. The most perfectly \r\nformed termites, both male and female, make up the \r\nreproductive class. They have eyes, hard body walls, and \r\nfully developed wings. A pair of reproductive termites \r\nfounds the colony. When new reproductive termites\r\n<span style=\"color:red\">(10)</span> develop, they leave to form another colony. They use their \r\nwings only this one time and then break them off.\r\n\r\nThe worker termites are small, blind, and wingless, with \r\nsoft bodies. They make up the majority of the colony and do\r\nall the work. Soldiers are eyeless and wingless but are large \r\n<span style=\"color:red\">(15)</span> than the workers and have hard heads and strong jaws and \r\nlegs. They defend the colony and are cared for by the \r\nworkers.\r\n\r\nThe male and female of the reproductive class remain \r\ninside a closed-in cell where the female lays thousands \r\n<span style=\"color:red\">(20)</span> eggs. The workers place the eggs in cells and care for them. \r\nEven if one colony is treated with poison, if a male and \r\nfemale of the reproductive class escape, they can form a new \r\ncolony. \r\n\r\nPest control companies can inspect a house for infestation \r\n<span style=\"color:red\">(25)</span> of termites. Often, a lay person cannot spot the \r\nevidence, so it is critical to have the opinion of a professional.\r\nTreatments vary depending upon the type of termite.",
    "ans_a": "ants",
    "ans_b": "colonies",
    "ans_c": "jobs",
    "ans_d": "classes",
    "answer": "D"
  },
  {
    "number": "111",
    "type": "reading",
    "question": "With what topic is the passage primarily concerned?",
    "text": "<b>Questions 111-120</b>\r\n\r\nDuring the nineteenth century, women in the United States organized and participated in \r\na large number of reform movements, including movements to reorganize the prison system,\r\nimprove education, ban the sale of alcohol, and, most importantly, to free the slaves. Some \r\nLine women saw similarities in the social status of women and slaves. Women like Elizabeth Cady \r\n<span style=\"color:red\">(5)</span> Stanton and Lucy Stone were feminists and abolitionists who supported the rights of both \r\nwomen and blacks. A number of male abolitionists, including William Lloyd Garrison and \r\nWendell Philips, also supported the rights of women to speak and participate equally with \r\nmen in antislavery activities. Probably more than any other movement, abolitionism offered \r\nwomen a previously denied entry into politics. They became involved primarily in order to\r\n<span style=\"color:red\">(10)</span> better their living conditions and the conditions of others. \r\n\r\nWhen the Civil War ended in 1865, the Fourteenth and Fifteenth Amendments to the \r\nConstitution adopted in 1868 and 1870 granted citizenship and suffrage to blacks but not to\r\nwomen. Discouraged but resolved, feminists influenced more and more women to demand \r\nthe right to vote. In 1869, the Wyoming Territory had yielded to demands by feminists, but \r\n<span style=\"color:red\">(15)</span> eastern states resisted more stubbornly than before, A women's suffrage bill had been\r\npresented to every Congress since 1878 but it continually failed to pass until 1920, when the \r\nNineteenth Amendment granted women the right to vote.",
    "ans_a": "The Wyoming Territory",
    "ans_b": "The Fourteenth and Fifteenth Amendments",
    "ans_c": "Abolitionists",
    "ans_d": "Women's suffrage",
    "answer": "D"
  },
  {
    "number": "112",
    "type": "reading",
    "question": "The word \"ban\" in line 3 most nearly means to",
    "text": "<b>Questions 111-120</b>\r\n\r\nDuring the nineteenth century, women in the United States organized and participated in \r\na large number of reform movements, including movements to reorganize the prison system,\r\nimprove education, ban the sale of alcohol, and, most importantly, to free the slaves. Some \r\nLine women saw similarities in the social status of women and slaves. Women like Elizabeth Cady \r\n<span style=\"color:red\">(5)</span> Stanton and Lucy Stone were feminists and abolitionists who supported the rights of both \r\nwomen and blacks. A number of male abolitionists, including William Lloyd Garrison and \r\nWendell Philips, also supported the rights of women to speak and participate equally with \r\nmen in antislavery activities. Probably more than any other movement, abolitionism offered \r\nwomen a previously denied entry into politics. They became involved primarily in order to\r\n<span style=\"color:red\">(10)</span> better their living conditions and the conditions of others. \r\n\r\nWhen the Civil War ended in 1865, the Fourteenth and Fifteenth Amendments to the \r\nConstitution adopted in 1868 and 1870 granted citizenship and suffrage to blacks but not to\r\nwomen. Discouraged but resolved, feminists influenced more and more women to demand \r\nthe right to vote. In 1869, the Wyoming Territory had yielded to demands by feminists, but \r\n<span style=\"color:red\">(15)</span> eastern states resisted more stubbornly than before, A women's suffrage bill had been\r\npresented to every Congress since 1878 but it continually failed to pass until 1920, when the \r\nNineteenth Amendment granted women the right to vote.",
    "ans_a": "encourage",
    "ans_b": "publish",
    "ans_c": "prohibit",
    "ans_d": "limit",
    "answer": "C"
  },
  {
    "number": "113",
    "type": "reading",
    "question": "The word \"supported\" in line 5 could best be replaced by",
    "text": "<b>Questions 111-120</b>\r\n\r\nDuring the nineteenth century, women in the United States organized and participated in \r\na large number of reform movements, including movements to reorganize the prison system,\r\nimprove education, ban the sale of alcohol, and, most importantly, to free the slaves. Some \r\nLine women saw similarities in the social status of women and slaves. Women like Elizabeth Cady \r\n<span style=\"color:red\">(5)</span> Stanton and Lucy Stone were feminists and abolitionists who supported the rights of both \r\nwomen and blacks. A number of male abolitionists, including William Lloyd Garrison and \r\nWendell Philips, also supported the rights of women to speak and participate equally with \r\nmen in antislavery activities. Probably more than any other movement, abolitionism offered \r\nwomen a previously denied entry into politics. They became involved primarily in order to\r\n<span style=\"color:red\">(10)</span> better their living conditions and the conditions of others. \r\n\r\nWhen the Civil War ended in 1865, the Fourteenth and Fifteenth Amendments to the \r\nConstitution adopted in 1868 and 1870 granted citizenship and suffrage to blacks but not to\r\nwomen. Discouraged but resolved, feminists influenced more and more women to demand \r\nthe right to vote. In 1869, the Wyoming Territory had yielded to demands by feminists, but \r\n<span style=\"color:red\">(15)</span> eastern states resisted more stubbornly than before, A women's suffrage bill had been\r\npresented to every Congress since 1878 but it continually failed to pass until 1920, when the \r\nNineteenth Amendment granted women the right to vote.",
    "ans_a": "disregarded",
    "ans_b": "acknowledged",
    "ans_c": "contested",
    "ans_d": "promoted",
    "answer": "D"
  },
  {
    "number": "114",
    "type": "reading",
    "question": "According to the passage, why did women become active in politics?",
    "text": "<b>Questions 111-120</b>\r\n\r\nDuring the nineteenth century, women in the United States organized and participated in \r\na large number of reform movements, including movements to reorganize the prison system,\r\nimprove education, ban the sale of alcohol, and, most importantly, to free the slaves. Some \r\nLine women saw similarities in the social status of women and slaves. Women like Elizabeth Cady \r\n<span style=\"color:red\">(5)</span> Stanton and Lucy Stone were feminists and abolitionists who supported the rights of both \r\nwomen and blacks. A number of male abolitionists, including William Lloyd Garrison and \r\nWendell Philips, also supported the rights of women to speak and participate equally with \r\nmen in antislavery activities. Probably more than any other movement, abolitionism offered \r\nwomen a previously denied entry into politics. They became involved primarily in order to\r\n<span style=\"color:red\">(10)</span> better their living conditions and the conditions of others. \r\n\r\nWhen the Civil War ended in 1865, the Fourteenth and Fifteenth Amendments to the \r\nConstitution adopted in 1868 and 1870 granted citizenship and suffrage to blacks but not to\r\nwomen. Discouraged but resolved, feminists influenced more and more women to demand \r\nthe right to vote. In 1869, the Wyoming Territory had yielded to demands by feminists, but \r\n<span style=\"color:red\">(15)</span> eastern states resisted more stubbornly than before, A women's suffrage bill had been\r\npresented to every Congress since 1878 but it continually failed to pass until 1920, when the \r\nNineteenth Amendment granted women the right to vote.",
    "ans_a": "To improve the conditions of life that existed at the time",
    "ans_b": "To support Elizabeth Cady Stanton for president",
    "ans_c": "To be elected to public office ",
    "ans_d": "To amend the Declaration of Independence",
    "answer": "A"
  },
  {
    "number": "115",
    "type": "reading",
    "question": "The word \"primarily\" in line 9 is closest in meaning to",
    "text": "<b>Questions 111-120</b>\r\n\r\nDuring the nineteenth century, women in the United States organized and participated in \r\na large number of reform movements, including movements to reorganize the prison system,\r\nimprove education, ban the sale of alcohol, and, most importantly, to free the slaves. Some \r\nLine women saw similarities in the social status of women and slaves. Women like Elizabeth Cady \r\n<span style=\"color:red\">(5)</span> Stanton and Lucy Stone were feminists and abolitionists who supported the rights of both \r\nwomen and blacks. A number of male abolitionists, including William Lloyd Garrison and \r\nWendell Philips, also supported the rights of women to speak and participate equally with \r\nmen in antislavery activities. Probably more than any other movement, abolitionism offered \r\nwomen a previously denied entry into politics. They became involved primarily in order to\r\n<span style=\"color:red\">(10)</span> better their living conditions and the conditions of others. \r\n\r\nWhen the Civil War ended in 1865, the Fourteenth and Fifteenth Amendments to the \r\nConstitution adopted in 1868 and 1870 granted citizenship and suffrage to blacks but not to\r\nwomen. Discouraged but resolved, feminists influenced more and more women to demand \r\nthe right to vote. In 1869, the Wyoming Territory had yielded to demands by feminists, but \r\n<span style=\"color:red\">(15)</span> eastern states resisted more stubbornly than before, A women's suffrage bill had been\r\npresented to every Congress since 1878 but it continually failed to pass until 1920, when the \r\nNineteenth Amendment granted women the right to vote.",
    "ans_a": "above all",
    "ans_b": "somewhat ",
    "ans_c": "finally",
    "ans_d": "always",
    "answer": "A"
  },
  {
    "number": "116",
    "type": "reading",
    "question": "What had occurred shortly after the Civil War?",
    "text": "<b>Questions 111-120</b>\r\n\r\nDuring the nineteenth century, women in the United States organized and participated in \r\na large number of reform movements, including movements to reorganize the prison system,\r\nimprove education, ban the sale of alcohol, and, most importantly, to free the slaves. Some \r\nLine women saw similarities in the social status of women and slaves. Women like Elizabeth Cady \r\n<span style=\"color:red\">(5)</span> Stanton and Lucy Stone were feminists and abolitionists who supported the rights of both \r\nwomen and blacks. A number of male abolitionists, including William Lloyd Garrison and \r\nWendell Philips, also supported the rights of women to speak and participate equally with \r\nmen in antislavery activities. Probably more than any other movement, abolitionism offered \r\nwomen a previously denied entry into politics. They became involved primarily in order to\r\n<span style=\"color:red\">(10)</span> better their living conditions and the conditions of others. \r\n\r\nWhen the Civil War ended in 1865, the Fourteenth and Fifteenth Amendments to the \r\nConstitution adopted in 1868 and 1870 granted citizenship and suffrage to blacks but not to\r\nwomen. Discouraged but resolved, feminists influenced more and more women to demand \r\nthe right to vote. In 1869, the Wyoming Territory had yielded to demands by feminists, but \r\n<span style=\"color:red\">(15)</span> eastern states resisted more stubbornly than before, A women's suffrage bill had been\r\npresented to every Congress since 1878 but it continually failed to pass until 1920, when the \r\nNineteenth Amendment granted women the right to vote.",
    "ans_a": "The Wyoming Territory was admitted to the Union.",
    "ans_b": "A women's suffrage bill was introduced in Congress.",
    "ans_c": "The eastern states resisted the end of the war.",
    "ans_d": "Black people were granted the right to vote.",
    "answer": "D"
  },
  {
    "number": "117",
    "type": "reading",
    "question": "The word \"suffrage\" in line 12 could best be replaced by which of the following?",
    "text": "<b>Questions 111-120</b>\r\n\r\nDuring the nineteenth century, women in the United States organized and participated in \r\na large number of reform movements, including movements to reorganize the prison system,\r\nimprove education, ban the sale of alcohol, and, most importantly, to free the slaves. Some \r\nLine women saw similarities in the social status of women and slaves. Women like Elizabeth Cady \r\n<span style=\"color:red\">(5)</span> Stanton and Lucy Stone were feminists and abolitionists who supported the rights of both \r\nwomen and blacks. A number of male abolitionists, including William Lloyd Garrison and \r\nWendell Philips, also supported the rights of women to speak and participate equally with \r\nmen in antislavery activities. Probably more than any other movement, abolitionism offered \r\nwomen a previously denied entry into politics. They became involved primarily in order to\r\n<span style=\"color:red\">(10)</span> better their living conditions and the conditions of others. \r\n\r\nWhen the Civil War ended in 1865, the Fourteenth and Fifteenth Amendments to the \r\nConstitution adopted in 1868 and 1870 granted citizenship and suffrage to blacks but not to\r\nwomen. Discouraged but resolved, feminists influenced more and more women to demand \r\nthe right to vote. In 1869, the Wyoming Territory had yielded to demands by feminists, but \r\n<span style=\"color:red\">(15)</span> eastern states resisted more stubbornly than before, A women's suffrage bill had been\r\npresented to every Congress since 1878 but it continually failed to pass until 1920, when the \r\nNineteenth Amendment granted women the right to vote.",
    "ans_a": "pain",
    "ans_b": "citizenship",
    "ans_c": "freedom from bondage",
    "ans_d": "the right to vote",
    "answer": "D"
  },
  {
    "number": "118",
    "type": "reading",
    "question": "What does the Nineteenth Amendment guarantee?",
    "text": "<b>Questions 111-120</b>\r\n\r\nDuring the nineteenth century, women in the United States organized and participated in \r\na large number of reform movements, including movements to reorganize the prison system,\r\nimprove education, ban the sale of alcohol, and, most importantly, to free the slaves. Some \r\nLine women saw similarities in the social status of women and slaves. Women like Elizabeth Cady \r\n<span style=\"color:red\">(5)</span> Stanton and Lucy Stone were feminists and abolitionists who supported the rights of both \r\nwomen and blacks. A number of male abolitionists, including William Lloyd Garrison and \r\nWendell Philips, also supported the rights of women to speak and participate equally with \r\nmen in antislavery activities. Probably more than any other movement, abolitionism offered \r\nwomen a previously denied entry into politics. They became involved primarily in order to\r\n<span style=\"color:red\">(10)</span> better their living conditions and the conditions of others. \r\n\r\nWhen the Civil War ended in 1865, the Fourteenth and Fifteenth Amendments to the \r\nConstitution adopted in 1868 and 1870 granted citizenship and suffrage to blacks but not to\r\nwomen. Discouraged but resolved, feminists influenced more and more women to demand \r\nthe right to vote. In 1869, the Wyoming Territory had yielded to demands by feminists, but \r\n<span style=\"color:red\">(15)</span> eastern states resisted more stubbornly than before, A women's suffrage bill had been\r\npresented to every Congress since 1878 but it continually failed to pass until 1920, when the \r\nNineteenth Amendment granted women the right to vote.",
    "ans_a": "Voting rights for blacks ",
    "ans_b": "Citizenship for blacks",
    "ans_c": "Voting rights for women ",
    "ans_d": "Citizenship for women",
    "answer": "C"
  },
  {
    "number": "119",
    "type": "reading",
    "question": "The word \"it\" in line 16 refers to",
    "text": "<b>Questions 111-120</b>\r\n\r\nDuring the nineteenth century, women in the United States organized and participated in \r\na large number of reform movements, including movements to reorganize the prison system,\r\nimprove education, ban the sale of alcohol, and, most importantly, to free the slaves. Some \r\nLine women saw similarities in the social status of women and slaves. Women like Elizabeth Cady \r\n<span style=\"color:red\">(5)</span> Stanton and Lucy Stone were feminists and abolitionists who supported the rights of both \r\nwomen and blacks. A number of male abolitionists, including William Lloyd Garrison and \r\nWendell Philips, also supported the rights of women to speak and participate equally with \r\nmen in antislavery activities. Probably more than any other movement, abolitionism offered \r\nwomen a previously denied entry into politics. They became involved primarily in order to\r\n<span style=\"color:red\">(10)</span> better their living conditions and the conditions of others. \r\n\r\nWhen the Civil War ended in 1865, the Fourteenth and Fifteenth Amendments to the \r\nConstitution adopted in 1868 and 1870 granted citizenship and suffrage to blacks but not to\r\nwomen. Discouraged but resolved, feminists influenced more and more women to demand \r\nthe right to vote. In 1869, the Wyoming Territory had yielded to demands by feminists, but \r\n<span style=\"color:red\">(15)</span> eastern states resisted more stubbornly than before, A women's suffrage bill had been\r\npresented to every Congress since 1878 but it continually failed to pass until 1920, when the \r\nNineteenth Amendment granted women the right to vote.",
    "ans_a": "bill",
    "ans_b": "Congress",
    "ans_c": "Nineteenth Amendment",
    "ans_d": "vote",
    "answer": "A"
  },
  {
    "number": "120",
    "type": "reading",
    "question": "When were women allowed to vote throughout the United States?",
    "text": "<b>Questions 111-120</b>\r\n\r\nDuring the nineteenth century, women in the United States organized and participated in \r\na large number of reform movements, including movements to reorganize the prison system,\r\nimprove education, ban the sale of alcohol, and, most importantly, to free the slaves. Some \r\nLine women saw similarities in the social status of women and slaves. Women like Elizabeth Cady \r\n<span style=\"color:red\">(5)</span> Stanton and Lucy Stone were feminists and abolitionists who supported the rights of both \r\nwomen and blacks. A number of male abolitionists, including William Lloyd Garrison and \r\nWendell Philips, also supported the rights of women to speak and participate equally with \r\nmen in antislavery activities. Probably more than any other movement, abolitionism offered \r\nwomen a previously denied entry into politics. They became involved primarily in order to\r\n<span style=\"color:red\">(10)</span> better their living conditions and the conditions of others. \r\n\r\nWhen the Civil War ended in 1865, the Fourteenth and Fifteenth Amendments to the \r\nConstitution adopted in 1868 and 1870 granted citizenship and suffrage to blacks but not to\r\nwomen. Discouraged but resolved, feminists influenced more and more women to demand \r\nthe right to vote. In 1869, the Wyoming Territory had yielded to demands by feminists, but \r\n<span style=\"color:red\">(15)</span> eastern states resisted more stubbornly than before, A women's suffrage bill had been\r\npresented to every Congress since 1878 but it continually failed to pass until 1920, when the \r\nNineteenth Amendment granted women the right to vote.",
    "ans_a": "After 1866",
    "ans_b": "After 1870",
    "ans_c": "After 1878",
    "ans_d": "After 1920",
    "answer": "D"
  },
  {
    "number": "121",
    "type": "reading",
    "question": "The subject of the preceding passage was most likely Halley’s",
    "text": "<b>Questions 121-131</b>\r\n\r\nThough Edmund Halley was most famous because of his achievements as an astronomer, he\r\nwas a scientist of diverse interests and great skill. In addition to studying the skies, Halley was also \r\ndeeply interested in exploring the unknown depths of the oceans. One of his lesser-known \r\naccomplishments that was quite remarkable was his design for a diving bell that facilitated \r\n<span style=\"color:red\">(5)</span> exploration of the watery depths.\r\n\r\nThe diving bell that Halley designed had a major advantage over the diving bells that were in use \r\nprior to his. Earlier diving bells could only make use of the air contained within the bell itself, so \r\ndivers had to surface when the air inside the bell ran low. Halley's bell was an improvement in that its \r\ndesign allowed for an additional supply of fresh air that enabled a crew of divers to remain \r\n<span style=\"color:red\">(10)</span> underwater for several hours.\r\n\r\nThe diving contraption that Halley designed was in the shape of a bell that measured three feet \r\nacross the top and five feet across the bottom and could hold several divers comfortably; it was open \r\nat the bottom so that divers could swim in and out at will. The bell was built of wood, which was first \r\nheavily tarred to make it water repellent and was then covered with a half-ton sheet of lead to make \r\n<span style=\"color:red\">(15)</span> the bell heavy enough to sink in water. The bell shape held air inside for the divers to breathe as the \r\nbell sank to the bottom.\r\n\r\nThe air inside the bell was not the only source of air for the divers to breathe, and it was this \r\nimprovement that made Halley's bell superior to its predecessors. In addition to the air already in the \r\nbell, air was also supplied to the divers from a lead barrel that was lowered to the ocean floor close to \r\n<span style=\"color:red\">(20)</span> the bell itself. Air flowed through a leather pipe from the lead barrel on the ocean floor to the bell. \r\nThe diver could breath the air from a position inside the bell, or he could move around outside the \r\nbell wearing a diving suit that consisted of a lead bell-shaped helmet with a glass viewing window and \r\na leather body suit, with a leather pipe carrying fresh air from the diving bell to the helmet.",
    "ans_a": "childhood",
    "ans_b": "work as an astronomer",
    "ans_c": "many different interests",
    "ans_d": "invention of the diving bell",
    "answer": "B"
  },
  {
    "number": "122",
    "type": "reading",
    "question": "Which of the following best expresses the subject of this passage?",
    "text": "<b>Questions 121-131</b>\r\n\r\nThough Edmund Halley was most famous because of his achievements as an astronomer, he\r\nwas a scientist of diverse interests and great skill. In addition to studying the skies, Halley was also \r\ndeeply interested in exploring the unknown depths of the oceans. One of his lesser-known \r\naccomplishments that was quite remarkable was his design for a diving bell that facilitated \r\n<span style=\"color:red\">(5)</span> exploration of the watery depths.\r\n\r\nThe diving bell that Halley designed had a major advantage over the diving bells that were in use \r\nprior to his. Earlier diving bells could only make use of the air contained within the bell itself, so \r\ndivers had to surface when the air inside the bell ran low. Halley's bell was an improvement in that its \r\ndesign allowed for an additional supply of fresh air that enabled a crew of divers to remain \r\n<span style=\"color:red\">(10)</span> underwater for several hours.\r\n\r\nThe diving contraption that Halley designed was in the shape of a bell that measured three feet \r\nacross the top and five feet across the bottom and could hold several divers comfortably; it was open \r\nat the bottom so that divers could swim in and out at will. The bell was built of wood, which was first \r\nheavily tarred to make it water repellent and was then covered with a half-ton sheet of lead to make \r\n<span style=\"color:red\">(15)</span> the bell heavy enough to sink in water. The bell shape held air inside for the divers to breathe as the \r\nbell sank to the bottom.\r\n\r\nThe air inside the bell was not the only source of air for the divers to breathe, and it was this \r\nimprovement that made Halley's bell superior to its predecessors. In addition to the air already in the \r\nbell, air was also supplied to the divers from a lead barrel that was lowered to the ocean floor close to \r\n<span style=\"color:red\">(20)</span> the bell itself. Air flowed through a leather pipe from the lead barrel on the ocean floor to the bell. \r\nThe diver could breath the air from a position inside the bell, or he could move around outside the \r\nbell wearing a diving suit that consisted of a lead bell-shaped helmet with a glass viewing window and \r\na leather body suit, with a leather pipe carrying fresh air from the diving bell to the helmet.",
    "ans_a": "Halley’s work as an astronomer",
    "ans_b": "Halley’s many different interests",
    "ans_c": "Halley’s invention of a contraption for diving",
    "ans_d": "Halley’s experiences as a diver",
    "answer": "C"
  },
  {
    "number": "123",
    "type": "reading",
    "question": "Halley’s bell was better that its predecessors because it",
    "text": "<b>Questions 121-131</b>\r\n\r\nThough Edmund Halley was most famous because of his achievements as an astronomer, he\r\nwas a scientist of diverse interests and great skill. In addition to studying the skies, Halley was also \r\ndeeply interested in exploring the unknown depths of the oceans. One of his lesser-known \r\naccomplishments that was quite remarkable was his design for a diving bell that facilitated \r\n<span style=\"color:red\">(5)</span> exploration of the watery depths.\r\n\r\nThe diving bell that Halley designed had a major advantage over the diving bells that were in use \r\nprior to his. Earlier diving bells could only make use of the air contained within the bell itself, so \r\ndivers had to surface when the air inside the bell ran low. Halley's bell was an improvement in that its \r\ndesign allowed for an additional supply of fresh air that enabled a crew of divers to remain \r\n<span style=\"color:red\">(10)</span> underwater for several hours.\r\n\r\nThe diving contraption that Halley designed was in the shape of a bell that measured three feet \r\nacross the top and five feet across the bottom and could hold several divers comfortably; it was open \r\nat the bottom so that divers could swim in and out at will. The bell was built of wood, which was first \r\nheavily tarred to make it water repellent and was then covered with a half-ton sheet of lead to make \r\n<span style=\"color:red\">(15)</span> the bell heavy enough to sink in water. The bell shape held air inside for the divers to breathe as the \r\nbell sank to the bottom.\r\n\r\nThe air inside the bell was not the only source of air for the divers to breathe, and it was this \r\nimprovement that made Halley's bell superior to its predecessors. In addition to the air already in the \r\nbell, air was also supplied to the divers from a lead barrel that was lowered to the ocean floor close to \r\n<span style=\"color:red\">(20)</span> the bell itself. Air flowed through a leather pipe from the lead barrel on the ocean floor to the bell. \r\nThe diver could breath the air from a position inside the bell, or he could move around outside the \r\nbell wearing a diving suit that consisted of a lead bell-shaped helmet with a glass viewing window and \r\na leather body suit, with a leather pipe carrying fresh air from the diving bell to the helmet.",
    "ans_a": "was bigger",
    "ans_b": "provided more air",
    "ans_c": "weighed less",
    "ans_d": "could rise more quickly",
    "answer": "B"
  },
  {
    "number": "124",
    "type": "reading",
    "question": "The expression “ran low” in line 8 is closest in meaning to",
    "text": "<b>Questions 121-131</b>\r\n\r\nThough Edmund Halley was most famous because of his achievements as an astronomer, he\r\nwas a scientist of diverse interests and great skill. In addition to studying the skies, Halley was also \r\ndeeply interested in exploring the unknown depths of the oceans. One of his lesser-known \r\naccomplishments that was quite remarkable was his design for a diving bell that facilitated \r\n<span style=\"color:red\">(5)</span> exploration of the watery depths.\r\n\r\nThe diving bell that Halley designed had a major advantage over the diving bells that were in use \r\nprior to his. Earlier diving bells could only make use of the air contained within the bell itself, so \r\ndivers had to surface when the air inside the bell ran low. Halley's bell was an improvement in that its \r\ndesign allowed for an additional supply of fresh air that enabled a crew of divers to remain \r\n<span style=\"color:red\">(10)</span> underwater for several hours.\r\n\r\nThe diving contraption that Halley designed was in the shape of a bell that measured three feet \r\nacross the top and five feet across the bottom and could hold several divers comfortably; it was open \r\nat the bottom so that divers could swim in and out at will. The bell was built of wood, which was first \r\nheavily tarred to make it water repellent and was then covered with a half-ton sheet of lead to make \r\n<span style=\"color:red\">(15)</span> the bell heavy enough to sink in water. The bell shape held air inside for the divers to breathe as the \r\nbell sank to the bottom.\r\n\r\nThe air inside the bell was not the only source of air for the divers to breathe, and it was this \r\nimprovement that made Halley's bell superior to its predecessors. In addition to the air already in the \r\nbell, air was also supplied to the divers from a lead barrel that was lowered to the ocean floor close to \r\n<span style=\"color:red\">(20)</span> the bell itself. Air flowed through a leather pipe from the lead barrel on the ocean floor to the bell. \r\nThe diver could breath the air from a position inside the bell, or he could move around outside the \r\nbell wearing a diving suit that consisted of a lead bell-shaped helmet with a glass viewing window and \r\na leather body suit, with a leather pipe carrying fresh air from the diving bell to the helmet.",
    "ans_a": "moved slowly",
    "ans_b": "had been replenished",
    "ans_c": "sank to the bottom",
    "ans_d": "was almost exhausted",
    "answer": "D"
  },
  {
    "number": "125",
    "type": "reading",
    "question": "How long could divers stay underwater in Halley’s bell",
    "text": "<b>Questions 121-131</b>\r\n\r\nThough Edmund Halley was most famous because of his achievements as an astronomer, he\r\nwas a scientist of diverse interests and great skill. In addition to studying the skies, Halley was also \r\ndeeply interested in exploring the unknown depths of the oceans. One of his lesser-known \r\naccomplishments that was quite remarkable was his design for a diving bell that facilitated \r\n<span style=\"color:red\">(5)</span> exploration of the watery depths.\r\n\r\nThe diving bell that Halley designed had a major advantage over the diving bells that were in use \r\nprior to his. Earlier diving bells could only make use of the air contained within the bell itself, so \r\ndivers had to surface when the air inside the bell ran low. Halley's bell was an improvement in that its \r\ndesign allowed for an additional supply of fresh air that enabled a crew of divers to remain \r\n<span style=\"color:red\">(10)</span> underwater for several hours.\r\n\r\nThe diving contraption that Halley designed was in the shape of a bell that measured three feet \r\nacross the top and five feet across the bottom and could hold several divers comfortably; it was open \r\nat the bottom so that divers could swim in and out at will. The bell was built of wood, which was first \r\nheavily tarred to make it water repellent and was then covered with a half-ton sheet of lead to make \r\n<span style=\"color:red\">(15)</span> the bell heavy enough to sink in water. The bell shape held air inside for the divers to breathe as the \r\nbell sank to the bottom.\r\n\r\nThe air inside the bell was not the only source of air for the divers to breathe, and it was this \r\nimprovement that made Halley's bell superior to its predecessors. In addition to the air already in the \r\nbell, air was also supplied to the divers from a lead barrel that was lowered to the ocean floor close to \r\n<span style=\"color:red\">(20)</span> the bell itself. Air flowed through a leather pipe from the lead barrel on the ocean floor to the bell. \r\nThe diver could breath the air from a position inside the bell, or he could move around outside the \r\nbell wearing a diving suit that consisted of a lead bell-shaped helmet with a glass viewing window and \r\na leather body suit, with a leather pipe carrying fresh air from the diving bell to the helmet.",
    "ans_a": "just a few second",
    "ans_b": "only a few minutes",
    "ans_c": "for hours at a time",
    "ans_d": "for days on end",
    "answer": "C"
  },
  {
    "number": "126",
    "type": "reading",
    "question": "It is NOT stated in the passage that Halley’s bell",
    "text": "<b>Questions 121-131</b>\r\n\r\nThough Edmund Halley was most famous because of his achievements as an astronomer, he\r\nwas a scientist of diverse interests and great skill. In addition to studying the skies, Halley was also \r\ndeeply interested in exploring the unknown depths of the oceans. One of his lesser-known \r\naccomplishments that was quite remarkable was his design for a diving bell that facilitated \r\n<span style=\"color:red\">(5)</span> exploration of the watery depths.\r\n\r\nThe diving bell that Halley designed had a major advantage over the diving bells that were in use \r\nprior to his. Earlier diving bells could only make use of the air contained within the bell itself, so \r\ndivers had to surface when the air inside the bell ran low. Halley's bell was an improvement in that its \r\ndesign allowed for an additional supply of fresh air that enabled a crew of divers to remain \r\n<span style=\"color:red\">(10)</span> underwater for several hours.\r\n\r\nThe diving contraption that Halley designed was in the shape of a bell that measured three feet \r\nacross the top and five feet across the bottom and could hold several divers comfortably; it was open \r\nat the bottom so that divers could swim in and out at will. The bell was built of wood, which was first \r\nheavily tarred to make it water repellent and was then covered with a half-ton sheet of lead to make \r\n<span style=\"color:red\">(15)</span> the bell heavy enough to sink in water. The bell shape held air inside for the divers to breathe as the \r\nbell sank to the bottom.\r\n\r\nThe air inside the bell was not the only source of air for the divers to breathe, and it was this \r\nimprovement that made Halley's bell superior to its predecessors. In addition to the air already in the \r\nbell, air was also supplied to the divers from a lead barrel that was lowered to the ocean floor close to \r\n<span style=\"color:red\">(20)</span> the bell itself. Air flowed through a leather pipe from the lead barrel on the ocean floor to the bell. \r\nThe diver could breath the air from a position inside the bell, or he could move around outside the \r\nbell wearing a diving suit that consisted of a lead bell-shaped helmet with a glass viewing window and \r\na leather body suit, with a leather pipe carrying fresh air from the diving bell to the helmet.",
    "ans_a": "was wider at the top than at the bottom",
    "ans_b": "was mad of tarred wood",
    "ans_c": "was completely enclosed",
    "ans_d": "could hold more than one diver",
    "answer": "C"
  },
  {
    "number": "127",
    "type": "reading",
    "question": "The expression \"at will\" in line 13 could best be replaced by",
    "text": "<b>Questions 121-131</b>\r\n\r\nThough Edmund Halley was most famous because of his achievements as an astronomer, he\r\nwas a scientist of diverse interests and great skill. In addition to studying the skies, Halley was also \r\ndeeply interested in exploring the unknown depths of the oceans. One of his lesser-known \r\naccomplishments that was quite remarkable was his design for a diving bell that facilitated \r\n<span style=\"color:red\">(5)</span> exploration of the watery depths.\r\n\r\nThe diving bell that Halley designed had a major advantage over the diving bells that were in use \r\nprior to his. Earlier diving bells could only make use of the air contained within the bell itself, so \r\ndivers had to surface when the air inside the bell ran low. Halley's bell was an improvement in that its \r\ndesign allowed for an additional supply of fresh air that enabled a crew of divers to remain \r\n<span style=\"color:red\">(10)</span> underwater for several hours.\r\n\r\nThe diving contraption that Halley designed was in the shape of a bell that measured three feet \r\nacross the top and five feet across the bottom and could hold several divers comfortably; it was open \r\nat the bottom so that divers could swim in and out at will. The bell was built of wood, which was first \r\nheavily tarred to make it water repellent and was then covered with a half-ton sheet of lead to make \r\n<span style=\"color:red\">(15)</span> the bell heavy enough to sink in water. The bell shape held air inside for the divers to breathe as the \r\nbell sank to the bottom.\r\n\r\nThe air inside the bell was not the only source of air for the divers to breathe, and it was this \r\nimprovement that made Halley's bell superior to its predecessors. In addition to the air already in the \r\nbell, air was also supplied to the divers from a lead barrel that was lowered to the ocean floor close to \r\n<span style=\"color:red\">(20)</span> the bell itself. Air flowed through a leather pipe from the lead barrel on the ocean floor to the bell. \r\nThe diver could breath the air from a position inside the bell, or he could move around outside the \r\nbell wearing a diving suit that consisted of a lead bell-shaped helmet with a glass viewing window and \r\na leather body suit, with a leather pipe carrying fresh air from the diving bell to the helmet.",
    "ans_a": "in the future",
    "ans_b": "as they wanted",
    "ans_c": "with great speed",
    "ans_d": "upside down",
    "answer": "B"
  },
  {
    "number": "128",
    "type": "reading",
    "question": "It can be inferred from the passage that, were Halley's bell not covered with lead, it would",
    "text": "<b>Questions 121-131</b>\r\n\r\nThough Edmund Halley was most famous because of his achievements as an astronomer, he\r\nwas a scientist of diverse interests and great skill. In addition to studying the skies, Halley was also \r\ndeeply interested in exploring the unknown depths of the oceans. One of his lesser-known \r\naccomplishments that was quite remarkable was his design for a diving bell that facilitated \r\n<span style=\"color:red\">(5)</span> exploration of the watery depths.\r\n\r\nThe diving bell that Halley designed had a major advantage over the diving bells that were in use \r\nprior to his. Earlier diving bells could only make use of the air contained within the bell itself, so \r\ndivers had to surface when the air inside the bell ran low. Halley's bell was an improvement in that its \r\ndesign allowed for an additional supply of fresh air that enabled a crew of divers to remain \r\n<span style=\"color:red\">(10)</span> underwater for several hours.\r\n\r\nThe diving contraption that Halley designed was in the shape of a bell that measured three feet \r\nacross the top and five feet across the bottom and could hold several divers comfortably; it was open \r\nat the bottom so that divers could swim in and out at will. The bell was built of wood, which was first \r\nheavily tarred to make it water repellent and was then covered with a half-ton sheet of lead to make \r\n<span style=\"color:red\">(15)</span> the bell heavy enough to sink in water. The bell shape held air inside for the divers to breathe as the \r\nbell sank to the bottom.\r\n\r\nThe air inside the bell was not the only source of air for the divers to breathe, and it was this \r\nimprovement that made Halley's bell superior to its predecessors. In addition to the air already in the \r\nbell, air was also supplied to the divers from a lead barrel that was lowered to the ocean floor close to \r\n<span style=\"color:red\">(20)</span> the bell itself. Air flowed through a leather pipe from the lead barrel on the ocean floor to the bell. \r\nThe diver could breath the air from a position inside the bell, or he could move around outside the \r\nbell wearing a diving suit that consisted of a lead bell-shaped helmet with a glass viewing window and \r\na leather body suit, with a leather pipe carrying fresh air from the diving bell to the helmet.",
    "ans_a": "float",
    "ans_b": "get wet",
    "ans_c": "trap the divers",
    "ans_d": "suffocate the divers",
    "answer": "A"
  },
  {
    "number": "129",
    "type": "reading",
    "question": "Where in the passage does the author indicate how air travelled from the barrel to the bell?",
    "text": "<b>Questions 121-131</b>\r\n\r\nThough Edmund Halley was most famous because of his achievements as an astronomer, he\r\nwas a scientist of diverse interests and great skill. In addition to studying the skies, Halley was also \r\ndeeply interested in exploring the unknown depths of the oceans. One of his lesser-known \r\naccomplishments that was quite remarkable was his design for a diving bell that facilitated \r\n<span style=\"color:red\">(5)</span> exploration of the watery depths.\r\n\r\nThe diving bell that Halley designed had a major advantage over the diving bells that were in use \r\nprior to his. Earlier diving bells could only make use of the air contained within the bell itself, so \r\ndivers had to surface when the air inside the bell ran low. Halley's bell was an improvement in that its \r\ndesign allowed for an additional supply of fresh air that enabled a crew of divers to remain \r\n<span style=\"color:red\">(10)</span> underwater for several hours.\r\n\r\nThe diving contraption that Halley designed was in the shape of a bell that measured three feet \r\nacross the top and five feet across the bottom and could hold several divers comfortably; it was open \r\nat the bottom so that divers could swim in and out at will. The bell was built of wood, which was first \r\nheavily tarred to make it water repellent and was then covered with a half-ton sheet of lead to make \r\n<span style=\"color:red\">(15)</span> the bell heavy enough to sink in water. The bell shape held air inside for the divers to breathe as the \r\nbell sank to the bottom.\r\n\r\nThe air inside the bell was not the only source of air for the divers to breathe, and it was this \r\nimprovement that made Halley's bell superior to its predecessors. In addition to the air already in the \r\nbell, air was also supplied to the divers from a lead barrel that was lowered to the ocean floor close to \r\n<span style=\"color:red\">(20)</span> the bell itself. Air flowed through a leather pipe from the lead barrel on the ocean floor to the bell. \r\nThe diver could breath the air from a position inside the bell, or he could move around outside the \r\nbell wearing a diving suit that consisted of a lead bell-shaped helmet with a glass viewing window and \r\na leather body suit, with a leather pipe carrying fresh air from the diving bell to the helmet.",
    "ans_a": "Lines 8—10",
    "ans_b": "Lines 11-13",
    "ans_c": "Lines 17-18",
    "ans_d": "Line 20",
    "answer": "D"
  },
  {
    "number": "130",
    "type": "reading",
    "question": "In which paragraph does the author describe the diving bells that preceded Halley's?",
    "text": "<b>Questions 121-131</b>\r\n\r\nThough Edmund Halley was most famous because of his achievements as an astronomer, he\r\nwas a scientist of diverse interests and great skill. In addition to studying the skies, Halley was also \r\ndeeply interested in exploring the unknown depths of the oceans. One of his lesser-known \r\naccomplishments that was quite remarkable was his design for a diving bell that facilitated \r\n<span style=\"color:red\">(5)</span> exploration of the watery depths.\r\n\r\nThe diving bell that Halley designed had a major advantage over the diving bells that were in use \r\nprior to his. Earlier diving bells could only make use of the air contained within the bell itself, so \r\ndivers had to surface when the air inside the bell ran low. Halley's bell was an improvement in that its \r\ndesign allowed for an additional supply of fresh air that enabled a crew of divers to remain \r\n<span style=\"color:red\">(10)</span> underwater for several hours.\r\n\r\nThe diving contraption that Halley designed was in the shape of a bell that measured three feet \r\nacross the top and five feet across the bottom and could hold several divers comfortably; it was open \r\nat the bottom so that divers could swim in and out at will. The bell was built of wood, which was first \r\nheavily tarred to make it water repellent and was then covered with a half-ton sheet of lead to make \r\n<span style=\"color:red\">(15)</span> the bell heavy enough to sink in water. The bell shape held air inside for the divers to breathe as the \r\nbell sank to the bottom.\r\n\r\nThe air inside the bell was not the only source of air for the divers to breathe, and it was this \r\nimprovement that made Halley's bell superior to its predecessors. In addition to the air already in the \r\nbell, air was also supplied to the divers from a lead barrel that was lowered to the ocean floor close to \r\n<span style=\"color:red\">(20)</span> the bell itself. Air flowed through a leather pipe from the lead barrel on the ocean floor to the bell. \r\nThe diver could breath the air from a position inside the bell, or he could move around outside the \r\nbell wearing a diving suit that consisted of a lead bell-shaped helmet with a glass viewing window and \r\na leather body suit, with a leather pipe carrying fresh air from the diving bell to the helmet.",
    "ans_a": "In the first paragraph",
    "ans_b": "In the second paragraph",
    "ans_c": "In the third paragraph",
    "ans_d": "In the last paragraph",
    "answer": "B"
  },
  {
    "number": "131",
    "type": "reading",
    "question": "This passage would most likely be assigned reading in a course on",
    "text": "<b>Questions 121-131</b>\r\n\r\nThough Edmund Halley was most famous because of his achievements as an astronomer, he\r\nwas a scientist of diverse interests and great skill. In addition to studying the skies, Halley was also \r\ndeeply interested in exploring the unknown depths of the oceans. One of his lesser-known \r\naccomplishments that was quite remarkable was his design for a diving bell that facilitated \r\n<span style=\"color:red\">(5)</span> exploration of the watery depths.\r\n\r\nThe diving bell that Halley designed had a major advantage over the diving bells that were in use \r\nprior to his. Earlier diving bells could only make use of the air contained within the bell itself, so \r\ndivers had to surface when the air inside the bell ran low. Halley's bell was an improvement in that its \r\ndesign allowed for an additional supply of fresh air that enabled a crew of divers to remain \r\n<span style=\"color:red\">(10)</span> underwater for several hours.\r\n\r\nThe diving contraption that Halley designed was in the shape of a bell that measured three feet \r\nacross the top and five feet across the bottom and could hold several divers comfortably; it was open \r\nat the bottom so that divers could swim in and out at will. The bell was built of wood, which was first \r\nheavily tarred to make it water repellent and was then covered with a half-ton sheet of lead to make \r\n<span style=\"color:red\">(15)</span> the bell heavy enough to sink in water. The bell shape held air inside for the divers to breathe as the \r\nbell sank to the bottom.\r\n\r\nThe air inside the bell was not the only source of air for the divers to breathe, and it was this \r\nimprovement that made Halley's bell superior to its predecessors. In addition to the air already in the \r\nbell, air was also supplied to the divers from a lead barrel that was lowered to the ocean floor close to \r\n<span style=\"color:red\">(20)</span> the bell itself. Air flowed through a leather pipe from the lead barrel on the ocean floor to the bell. \r\nThe diver could breath the air from a position inside the bell, or he could move around outside the \r\nbell wearing a diving suit that consisted of a lead bell-shaped helmet with a glass viewing window and \r\na leather body suit, with a leather pipe carrying fresh air from the diving bell to the helmet.",
    "ans_a": "astronomy",
    "ans_b": "recreation",
    "ans_c": "oceanography",
    "ans_d": "physiology",
    "answer": "C"
  },
  {
    "number": "132",
    "type": "reading",
    "question": "According to the passage, what are mustelids?",
    "text": "<b>Questions 132-140</b>\r\n\r\nSea otters dwell in the North Pacific. They are the largest of\r\nthe mustelids, a group which also includes freshwater otters,\r\nweasels, and badgers. They are from four to five feet long, and\r\nmost weigh from 60 to 85 pounds. Large males may weigh 100 pounds\r\n<span style=\"color:red\">(5)</span> or more.\r\n\r\nUnlike most marine mammals, such as seals or dolphins, sea\r\notters lack a layer of blubber, and therefore have to eat up to\r\n30% of their body weight a day in clams, crabs, fish, octopus,\r\nsquids, and other delicacies to maintain body heat. Their\r\n<span style=\"color:red\">(10)</span> voracious appetites do not create food shortages, though, because\r\nthey are picky eaters, each animal preferring only a few food\r\ntypes. Thus no single type of food source is exhausted. Sea\r\notters play an important environmental role by protecting forests\r\nof seaweed called kelp, which provide shelter and nutrients for\r\n<span style=\"color:red\">(15)</span> many species. Certain sea otters feast on invertebrates like sea\r\nurchins and abalones that destroy kelp.\r\n\r\nSea otters eat and sleep while floating on their backs, often\r\non masses of kelp. They seldom come on shore. Sea otters keep\r\nwarm by means of their luxuriant double-layered fur, the densest\r\n<span style=\"color:red\">(20)</span> among animals. The soft outer fur forms a protective cover that\r\nkeeps the fine underfur dry. One square inch of underfur contains\r\nup to 1 million hairs. Unfortunately, this essential feature\r\nalmost led to their extinction, as commercial fur hunters drastically\r\nreduced their numbers.\r\n\r\n<span style=\"color:red\">(25)</span> Under government protection, the sea otter population has\r\nrecovered. While elated by the otters return, scientists are\r\nconcerned about the California sea otter population growth of 5%\r\na year, lagging behind the 18% a year rate among Alaska otters.\r\nSea otters are extremely sensitive to pollution. In 1989 up to\r\n<span style=\"color:red\">(30)</span> 5,000 sea otters perished when the Exxon Valdez spilled oil in\r\nPrince William Sound, Alaska.",
    "ans_a": "A family of marine mammals that have blubber",
    "ans_b": "A type of sea otter",
    "ans_c": "A group of mammals that contains sea otters",
    "ans_d": "A kind of sea animal that includes clams, crabs, and many other creatures",
    "answer": "C"
  },
  {
    "number": "133",
    "type": "reading",
    "question": "It can be inferred from that passage that, if a large male sea otter weighs 100 pounds, it must eat approximately how many pounds of food a day to maintain its body heat?",
    "text": "<b>Questions 132-140</b>\r\n\r\nSea otters dwell in the North Pacific. They are the largest of\r\nthe mustelids, a group which also includes freshwater otters,\r\nweasels, and badgers. They are from four to five feet long, and\r\nmost weigh from 60 to 85 pounds. Large males may weigh 100 pounds\r\n<span style=\"color:red\">(5)</span> or more.\r\n\r\nUnlike most marine mammals, such as seals or dolphins, sea\r\notters lack a layer of blubber, and therefore have to eat up to\r\n30% of their body weight a day in clams, crabs, fish, octopus,\r\nsquids, and other delicacies to maintain body heat. Their\r\n<span style=\"color:red\">(10)</span> voracious appetites do not create food shortages, though, because\r\nthey are picky eaters, each animal preferring only a few food\r\ntypes. Thus no single type of food source is exhausted. Sea\r\notters play an important environmental role by protecting forests\r\nof seaweed called kelp, which provide shelter and nutrients for\r\n<span style=\"color:red\">(15)</span> many species. Certain sea otters feast on invertebrates like sea\r\nurchins and abalones that destroy kelp.\r\n\r\nSea otters eat and sleep while floating on their backs, often\r\non masses of kelp. They seldom come on shore. Sea otters keep\r\nwarm by means of their luxuriant double-layered fur, the densest\r\n<span style=\"color:red\">(20)</span> among animals. The soft outer fur forms a protective cover that\r\nkeeps the fine underfur dry. One square inch of underfur contains\r\nup to 1 million hairs. Unfortunately, this essential feature\r\nalmost led to their extinction, as commercial fur hunters drastically\r\nreduced their numbers.\r\n\r\n<span style=\"color:red\">(25)</span> Under government protection, the sea otter population has\r\nrecovered. While elated by the otters return, scientists are\r\nconcerned about the California sea otter population growth of 5%\r\na year, lagging behind the 18% a year rate among Alaska otters.\r\nSea otters are extremely sensitive to pollution. In 1989 up to\r\n<span style=\"color:red\">(30)</span> 5,000 sea otters perished when the Exxon Valdez spilled oil in\r\nPrince William Sound, Alaska.",
    "ans_a": "5 pounds",
    "ans_b": "15 pounds",
    "ans_c": "30 pounds",
    "ans_d": "60 pounds",
    "answer": "C"
  },
  {
    "number": "134",
    "type": "reading",
    "question": "The author refers to sea otters as \"picky eaters\" (line 11) because",
    "text": "<b>Questions 132-140</b>\r\n\r\nSea otters dwell in the North Pacific. They are the largest of\r\nthe mustelids, a group which also includes freshwater otters,\r\nweasels, and badgers. They are from four to five feet long, and\r\nmost weigh from 60 to 85 pounds. Large males may weigh 100 pounds\r\n<span style=\"color:red\">(5)</span> or more.\r\n\r\nUnlike most marine mammals, such as seals or dolphins, sea\r\notters lack a layer of blubber, and therefore have to eat up to\r\n30% of their body weight a day in clams, crabs, fish, octopus,\r\nsquids, and other delicacies to maintain body heat. Their\r\n<span style=\"color:red\">(10)</span> voracious appetites do not create food shortages, though, because\r\nthey are picky eaters, each animal preferring only a few food\r\ntypes. Thus no single type of food source is exhausted. Sea\r\notters play an important environmental role by protecting forests\r\nof seaweed called kelp, which provide shelter and nutrients for\r\n<span style=\"color:red\">(15)</span> many species. Certain sea otters feast on invertebrates like sea\r\nurchins and abalones that destroy kelp.\r\n\r\nSea otters eat and sleep while floating on their backs, often\r\non masses of kelp. They seldom come on shore. Sea otters keep\r\nwarm by means of their luxuriant double-layered fur, the densest\r\n<span style=\"color:red\">(20)</span> among animals. The soft outer fur forms a protective cover that\r\nkeeps the fine underfur dry. One square inch of underfur contains\r\nup to 1 million hairs. Unfortunately, this essential feature\r\nalmost led to their extinction, as commercial fur hunters drastically\r\nreduced their numbers.\r\n\r\n<span style=\"color:red\">(25)</span> Under government protection, the sea otter population has\r\nrecovered. While elated by the otters return, scientists are\r\nconcerned about the California sea otter population growth of 5%\r\na year, lagging behind the 18% a year rate among Alaska otters.\r\nSea otters are extremely sensitive to pollution. In 1989 up to\r\n<span style=\"color:red\">(30)</span> 5,000 sea otters perished when the Exxon Valdez spilled oil in\r\nPrince William Sound, Alaska.",
    "ans_a": "all sea otters eat many types of food",
    "ans_b": "each sea otter eats only one type of food",
    "ans_c": "all sea otters have voracious appetites",
    "ans_d": "each sea otter eats only a few kinds of food",
    "answer": "D"
  },
  {
    "number": "135",
    "type": "reading",
    "question": "The word \"exhausted\" in line 12 is closest in meaning to",
    "text": "<b>Questions 132-140</b>\r\n\r\nSea otters dwell in the North Pacific. They are the largest of\r\nthe mustelids, a group which also includes freshwater otters,\r\nweasels, and badgers. They are from four to five feet long, and\r\nmost weigh from 60 to 85 pounds. Large males may weigh 100 pounds\r\n<span style=\"color:red\">(5)</span> or more.\r\n\r\nUnlike most marine mammals, such as seals or dolphins, sea\r\notters lack a layer of blubber, and therefore have to eat up to\r\n30% of their body weight a day in clams, crabs, fish, octopus,\r\nsquids, and other delicacies to maintain body heat. Their\r\n<span style=\"color:red\">(10)</span> voracious appetites do not create food shortages, though, because\r\nthey are picky eaters, each animal preferring only a few food\r\ntypes. Thus no single type of food source is exhausted. Sea\r\notters play an important environmental role by protecting forests\r\nof seaweed called kelp, which provide shelter and nutrients for\r\n<span style=\"color:red\">(15)</span> many species. Certain sea otters feast on invertebrates like sea\r\nurchins and abalones that destroy kelp.\r\n\r\nSea otters eat and sleep while floating on their backs, often\r\non masses of kelp. They seldom come on shore. Sea otters keep\r\nwarm by means of their luxuriant double-layered fur, the densest\r\n<span style=\"color:red\">(20)</span> among animals. The soft outer fur forms a protective cover that\r\nkeeps the fine underfur dry. One square inch of underfur contains\r\nup to 1 million hairs. Unfortunately, this essential feature\r\nalmost led to their extinction, as commercial fur hunters drastically\r\nreduced their numbers.\r\n\r\n<span style=\"color:red\">(25)</span> Under government protection, the sea otter population has\r\nrecovered. While elated by the otters return, scientists are\r\nconcerned about the California sea otter population growth of 5%\r\na year, lagging behind the 18% a year rate among Alaska otters.\r\nSea otters are extremely sensitive to pollution. In 1989 up to\r\n<span style=\"color:red\">(30)</span> 5,000 sea otters perished when the Exxon Valdez spilled oil in\r\nPrince William Sound, Alaska.",
    "ans_a": "needed",
    "ans_b": "used up",
    "ans_c": "desired",
    "ans_d": "tired out",
    "answer": "B"
  },
  {
    "number": "136",
    "type": "reading",
    "question": "According to the passage, which of the following best describes sea otters' relationship with kelp forests?",
    "text": "<b>Questions 132-140</b>\r\n\r\nSea otters dwell in the North Pacific. They are the largest of\r\nthe mustelids, a group which also includes freshwater otters,\r\nweasels, and badgers. They are from four to five feet long, and\r\nmost weigh from 60 to 85 pounds. Large males may weigh 100 pounds\r\n<span style=\"color:red\">(5)</span> or more.\r\n\r\nUnlike most marine mammals, such as seals or dolphins, sea\r\notters lack a layer of blubber, and therefore have to eat up to\r\n30% of their body weight a day in clams, crabs, fish, octopus,\r\nsquids, and other delicacies to maintain body heat. Their\r\n<span style=\"color:red\">(10)</span> voracious appetites do not create food shortages, though, because\r\nthey are picky eaters, each animal preferring only a few food\r\ntypes. Thus no single type of food source is exhausted. Sea\r\notters play an important environmental role by protecting forests\r\nof seaweed called kelp, which provide shelter and nutrients for\r\n<span style=\"color:red\">(15)</span> many species. Certain sea otters feast on invertebrates like sea\r\nurchins and abalones that destroy kelp.\r\n\r\nSea otters eat and sleep while floating on their backs, often\r\non masses of kelp. They seldom come on shore. Sea otters keep\r\nwarm by means of their luxuriant double-layered fur, the densest\r\n<span style=\"color:red\">(20)</span> among animals. The soft outer fur forms a protective cover that\r\nkeeps the fine underfur dry. One square inch of underfur contains\r\nup to 1 million hairs. Unfortunately, this essential feature\r\nalmost led to their extinction, as commercial fur hunters drastically\r\nreduced their numbers.\r\n\r\n<span style=\"color:red\">(25)</span> Under government protection, the sea otter population has\r\nrecovered. While elated by the otters return, scientists are\r\nconcerned about the California sea otter population growth of 5%\r\na year, lagging behind the 18% a year rate among Alaska otters.\r\nSea otters are extremely sensitive to pollution. In 1989 up to\r\n<span style=\"color:red\">(30)</span> 5,000 sea otters perished when the Exxon Valdez spilled oil in\r\nPrince William Sound, Alaska.",
    "ans_a": "The kelp serves as food for the otters.",
    "ans_b": "The otters protect the kelp by eating animals that destroy it.",
    "ans_c": "The otters eliminate the kelp's source of nutrients.",
    "ans_d": "The kelp is destroyed when the otters build shelters.",
    "answer": "B"
  },
  {
    "number": "137",
    "type": "reading",
    "question": "Which of the following could best replace the word \"luxuriant\" in line 19?",
    "text": "<b>Questions 132-140</b>\r\n\r\nSea otters dwell in the North Pacific. They are the largest of\r\nthe mustelids, a group which also includes freshwater otters,\r\nweasels, and badgers. They are from four to five feet long, and\r\nmost weigh from 60 to 85 pounds. Large males may weigh 100 pounds\r\n<span style=\"color:red\">(5)</span> or more.\r\n\r\nUnlike most marine mammals, such as seals or dolphins, sea\r\notters lack a layer of blubber, and therefore have to eat up to\r\n30% of their body weight a day in clams, crabs, fish, octopus,\r\nsquids, and other delicacies to maintain body heat. Their\r\n<span style=\"color:red\">(10)</span> voracious appetites do not create food shortages, though, because\r\nthey are picky eaters, each animal preferring only a few food\r\ntypes. Thus no single type of food source is exhausted. Sea\r\notters play an important environmental role by protecting forests\r\nof seaweed called kelp, which provide shelter and nutrients for\r\n<span style=\"color:red\">(15)</span> many species. Certain sea otters feast on invertebrates like sea\r\nurchins and abalones that destroy kelp.\r\n\r\nSea otters eat and sleep while floating on their backs, often\r\non masses of kelp. They seldom come on shore. Sea otters keep\r\nwarm by means of their luxuriant double-layered fur, the densest\r\n<span style=\"color:red\">(20)</span> among animals. The soft outer fur forms a protective cover that\r\nkeeps the fine underfur dry. One square inch of underfur contains\r\nup to 1 million hairs. Unfortunately, this essential feature\r\nalmost led to their extinction, as commercial fur hunters drastically\r\nreduced their numbers.\r\n\r\n<span style=\"color:red\">(25)</span> Under government protection, the sea otter population has\r\nrecovered. While elated by the otters return, scientists are\r\nconcerned about the California sea otter population growth of 5%\r\na year, lagging behind the 18% a year rate among Alaska otters.\r\nSea otters are extremely sensitive to pollution. In 1989 up to\r\n<span style=\"color:red\">(30)</span> 5,000 sea otters perished when the Exxon Valdez spilled oil in\r\nPrince William Sound, Alaska.",
    "ans_a": "Expensive",
    "ans_b": "Soft",
    "ans_c": "Abundant",
    "ans_d": "Attractive",
    "answer": "C"
  },
  {
    "number": "138",
    "type": "reading",
    "question": "According to the passage, the outer fur of sea otters",
    "text": "<b>Questions 132-140</b>\r\n\r\nSea otters dwell in the North Pacific. They are the largest of\r\nthe mustelids, a group which also includes freshwater otters,\r\nweasels, and badgers. They are from four to five feet long, and\r\nmost weigh from 60 to 85 pounds. Large males may weigh 100 pounds\r\n<span style=\"color:red\">(5)</span> or more.\r\n\r\nUnlike most marine mammals, such as seals or dolphins, sea\r\notters lack a layer of blubber, and therefore have to eat up to\r\n30% of their body weight a day in clams, crabs, fish, octopus,\r\nsquids, and other delicacies to maintain body heat. Their\r\n<span style=\"color:red\">(10)</span> voracious appetites do not create food shortages, though, because\r\nthey are picky eaters, each animal preferring only a few food\r\ntypes. Thus no single type of food source is exhausted. Sea\r\notters play an important environmental role by protecting forests\r\nof seaweed called kelp, which provide shelter and nutrients for\r\n<span style=\"color:red\">(15)</span> many species. Certain sea otters feast on invertebrates like sea\r\nurchins and abalones that destroy kelp.\r\n\r\nSea otters eat and sleep while floating on their backs, often\r\non masses of kelp. They seldom come on shore. Sea otters keep\r\nwarm by means of their luxuriant double-layered fur, the densest\r\n<span style=\"color:red\">(20)</span> among animals. The soft outer fur forms a protective cover that\r\nkeeps the fine underfur dry. One square inch of underfur contains\r\nup to 1 million hairs. Unfortunately, this essential feature\r\nalmost led to their extinction, as commercial fur hunters drastically\r\nreduced their numbers.\r\n\r\n<span style=\"color:red\">(25)</span> Under government protection, the sea otter population has\r\nrecovered. While elated by the otters return, scientists are\r\nconcerned about the California sea otter population growth of 5%\r\na year, lagging behind the 18% a year rate among Alaska otters.\r\nSea otters are extremely sensitive to pollution. In 1989 up to\r\n<span style=\"color:red\">(30)</span> 5,000 sea otters perished when the Exxon Valdez spilled oil in\r\nPrince William Sound, Alaska.",
    "ans_a": "keeps the underfur from getting wet",
    "ans_b": "seems finer than the underfur",
    "ans_c": "is more desirable to hunters than the underfur",
    "ans_d": "is not as soft as the underfur",
    "answer": "A"
  },
  {
    "number": "139",
    "type": "reading",
    "question": "The word \"elated\" in line 26 is closest in meaning to",
    "text": "<b>Questions 132-140</b>\r\n\r\nSea otters dwell in the North Pacific. They are the largest of\r\nthe mustelids, a group which also includes freshwater otters,\r\nweasels, and badgers. They are from four to five feet long, and\r\nmost weigh from 60 to 85 pounds. Large males may weigh 100 pounds\r\n<span style=\"color:red\">(5)</span> or more.\r\n\r\nUnlike most marine mammals, such as seals or dolphins, sea\r\notters lack a layer of blubber, and therefore have to eat up to\r\n30% of their body weight a day in clams, crabs, fish, octopus,\r\nsquids, and other delicacies to maintain body heat. Their\r\n<span style=\"color:red\">(10)</span> voracious appetites do not create food shortages, though, because\r\nthey are picky eaters, each animal preferring only a few food\r\ntypes. Thus no single type of food source is exhausted. Sea\r\notters play an important environmental role by protecting forests\r\nof seaweed called kelp, which provide shelter and nutrients for\r\n<span style=\"color:red\">(15)</span> many species. Certain sea otters feast on invertebrates like sea\r\nurchins and abalones that destroy kelp.\r\n\r\nSea otters eat and sleep while floating on their backs, often\r\non masses of kelp. They seldom come on shore. Sea otters keep\r\nwarm by means of their luxuriant double-layered fur, the densest\r\n<span style=\"color:red\">(20)</span> among animals. The soft outer fur forms a protective cover that\r\nkeeps the fine underfur dry. One square inch of underfur contains\r\nup to 1 million hairs. Unfortunately, this essential feature\r\nalmost led to their extinction, as commercial fur hunters drastically\r\nreduced their numbers.\r\n\r\n<span style=\"color:red\">(25)</span> Under government protection, the sea otter population has\r\nrecovered. While elated by the otters return, scientists are\r\nconcerned about the California sea otter population growth of 5%\r\na year, lagging behind the 18% a year rate among Alaska otters.\r\nSea otters are extremely sensitive to pollution. In 1989 up to\r\n<span style=\"color:red\">(30)</span> 5,000 sea otters perished when the Exxon Valdez spilled oil in\r\nPrince William Sound, Alaska.",
    "ans_a": "disappointed",
    "ans_b": "shocked",
    "ans_c": "concerned",
    "ans_d": "overjoyed",
    "answer": "D"
  },
  {
    "number": "140",
    "type": "reading",
    "question": "According to the passage, why are scientists concerned about the population of California sea otters?",
    "text": "<b>Questions 132-140</b>\r\n\r\nSea otters dwell in the North Pacific. They are the largest of\r\nthe mustelids, a group which also includes freshwater otters,\r\nweasels, and badgers. They are from four to five feet long, and\r\nmost weigh from 60 to 85 pounds. Large males may weigh 100 pounds\r\n<span style=\"color:red\">(5)</span> or more.\r\n\r\nUnlike most marine mammals, such as seals or dolphins, sea\r\notters lack a layer of blubber, and therefore have to eat up to\r\n30% of their body weight a day in clams, crabs, fish, octopus,\r\nsquids, and other delicacies to maintain body heat. Their\r\n<span style=\"color:red\">(10)</span> voracious appetites do not create food shortages, though, because\r\nthey are picky eaters, each animal preferring only a few food\r\ntypes. Thus no single type of food source is exhausted. Sea\r\notters play an important environmental role by protecting forests\r\nof seaweed called kelp, which provide shelter and nutrients for\r\n<span style=\"color:red\">(15)</span> many species. Certain sea otters feast on invertebrates like sea\r\nurchins and abalones that destroy kelp.\r\n\r\nSea otters eat and sleep while floating on their backs, often\r\non masses of kelp. They seldom come on shore. Sea otters keep\r\nwarm by means of their luxuriant double-layered fur, the densest\r\n<span style=\"color:red\">(20)</span> among animals. The soft outer fur forms a protective cover that\r\nkeeps the fine underfur dry. One square inch of underfur contains\r\nup to 1 million hairs. Unfortunately, this essential feature\r\nalmost led to their extinction, as commercial fur hunters drastically\r\nreduced their numbers.\r\n\r\n<span style=\"color:red\">(25)</span> Under government protection, the sea otter population has\r\nrecovered. While elated by the otters return, scientists are\r\nconcerned about the California sea otter population growth of 5%\r\na year, lagging behind the 18% a year rate among Alaska otters.\r\nSea otters are extremely sensitive to pollution. In 1989 up to\r\n<span style=\"color:red\">(30)</span> 5,000 sea otters perished when the Exxon Valdez spilled oil in\r\nPrince William Sound, Alaska.",
    "ans_a": "It has been growing at too fast a rate.",
    "ans_b": "Its growth rate has been steadily decreasing.",
    "ans_c": "Its growth rate is not as fast as that of the Alaska sea otters.",
    "ans_d": "It has been greatly reduced by oil spills and other forms of pollution.",
    "answer": "C"
  }
]