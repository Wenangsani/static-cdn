 [
  {
    "number": "91",
    "type": "reading",
    "direction": "<b>SECTION 3</b>\r\n<b>READING COMPREHENSION</b>\r\n\r\nThis section is designed to measure your ability to read and understand short passages similar in\r\ntopic and style to those that students are likely to encounter in North American universities and\r\ncolleges. This section contains reading passages and questions about the passages.\r\n\r\n<b><u>Directions</u></b>: In this section you will read several passages. Each one is followed by a number of\r\nquestions about it. You are to choose the one best answer, (A), (B), (C), or (D), to each question. Then,\r\non your answer sheet, find the number of the question and fill in the space that corresponds to the\r\nletter of the answer you have chosen.\r\n\r\nAnswer all questions about the information in a passage on the basis of what is stated or implied\r\nin that passage.\r\n\r\nRead the following passage:\r\n\r\nJohn Quincy Adams, who served as the sixth president of the United States from 1825\r\nto 1829, is today recognized for his masterful statesmanship and diplomacy. He dedicated his\r\nlife to public service, both in the presidency and in the various other political offices that he\r\nheld. Throughout his political career he demonstrated his unswerving belief in freedom of\r\n\r\n<span style=\"color:red\">(5)</span> speech, the antislavery cause, and the right of Americans to be free from European and Asian\r\ndomination.\r\n\r\n<b>Example I</b>\r\n\r\nTo what did John Quincy Adams devote his life?\r\n(A) Improving his personal life\r\n(B) Serving the public\r\n(C) Increasing his fortune\r\n(D) Working on his private business\r\n\r\nAccording to the passage, John Quincy Adams “dedicated his life to public service.” Therefore, you\r\nshould choose answer (B).\r\n\r\n<b>Example II</b>\r\nIn line 4, the word “unswerving” is closest in meaning to\r\n\r\n(A) moveable\r\n(B) insignificant\r\n(C) unchanging\r\n(D) diplomatic\r\n\r\nThe passage states that John Quincy Adams demonstrated his unswerving belief “throughout his\r\ncareer.” This implies that the belief did not change. Therefore, you should choose answer (C).\r\n",
    "question": "Which of the following best describes the lichen association?",
    "text": "<b>Questions 91-100</b>\r\n\r\nLichens, of which more than twenty thousand species \r\nhave been named, are complex associations between certain \r\nfungi and certain algae. The lichen itself is not an organism; \r\nrather it is the morphological and biochemical product of \r\n<span style=\"color:red\">(5)</span> the association. Neither a fungus nor an alga alone can \r\nproduce a lichen. \r\n\r\nThe intimate relationship between these two living \r\ncomponents of a lichen was once erroneously thought to \r\nrepresent mutualism. In mutualistic relationships, both\r\n<span style=\"color:red\">(10)</span> participants benefit. With lichens, however, it appears the \r\nfungus actually parasitizes the algae. This is one of the \r\nconclusions drawn from experiments in which the two \r\ncomponents of lichens were separated and grown apart.\r\n\r\nIn nature, lichen fungi may encounter and grow around \r\n<span style=\"color:red\">(15)</span> several kinds of algae. Some types of algae the fungi may \r\nkill other types it may reject. Lichen algae are autotrophic, \r\nmeaning they make their own food through photosynthesis. \r\nLichen fungi are heterotrophic, meaning they depend upon \r\nthe algae within the lichen to supply their food. Up to nine \r\n<span style=\"color:red\">(20)</span> percent of the food made by the green algal cells \r\ntransferred to the fungus. What, if anything, the fun \r\ncontributes to the association is not well understood.\r\n\r\nLichens are hardy. They grow in many habitats and are \r\noften pioneers in hostile environments where few other \r\n<span style=\"color:red\">(25)</span> organisms can flourish. They have been known to grow \r\nendolithically, having been discovered thriving inside \r\nrocks in Antarctica. Lichens help reduce erosion by stabilizing \r\nsoil. Several kinds of insects glue lichens to their \r\nexoskeletons for camouflage. Many species of birds us \r\n<span style=\"color:red\">(30)</span> lichens as building materials for nests. Humans have used \r\nlichens for dyes and antibiotics.",
    "ans_a": "Simple plants made of two different autotrophic organisms",
    "ans_b": "A mutualistic association between a fungus and an alga",
    "ans_c": "A parasitic association between two fungi, one autotrophic, the second heterotrophic",
    "ans_d": "A union between a parasitic fungus and an autotrophic alga",
    "answer": "D"
  },
  {
    "number": "92",
    "type": "reading",
    "question": "The word \"hardy\" in line 23 is closest in meaning to",
    "text": "<b>Questions 91-100</b>\r\n\r\nLichens, of which more than twenty thousand species \r\nhave been named, are complex associations between certain \r\nfungi and certain algae. The lichen itself is not an organism; \r\nrather it is the morphological and biochemical product of \r\n<span style=\"color:red\">(5)</span> the association. Neither a fungus nor an alga alone can \r\nproduce a lichen. \r\n\r\nThe intimate relationship between these two living \r\ncomponents of a lichen was once erroneously thought to \r\nrepresent mutualism. In mutualistic relationships, both\r\n<span style=\"color:red\">(10)</span> participants benefit. With lichens, however, it appears the \r\nfungus actually parasitizes the algae. This is one of the \r\nconclusions drawn from experiments in which the two \r\ncomponents of lichens were separated and grown apart.\r\n\r\nIn nature, lichen fungi may encounter and grow around \r\n<span style=\"color:red\">(15)</span> several kinds of algae. Some types of algae the fungi may \r\nkill other types it may reject. Lichen algae are autotrophic, \r\nmeaning they make their own food through photosynthesis. \r\nLichen fungi are heterotrophic, meaning they depend upon \r\nthe algae within the lichen to supply their food. Up to nine \r\n<span style=\"color:red\">(20)</span> percent of the food made by the green algal cells \r\ntransferred to the fungus. What, if anything, the fun \r\ncontributes to the association is not well understood.\r\n\r\nLichens are hardy. They grow in many habitats and are \r\noften pioneers in hostile environments where few other \r\n<span style=\"color:red\">(25)</span> organisms can flourish. They have been known to grow \r\nendolithically, having been discovered thriving inside \r\nrocks in Antarctica. Lichens help reduce erosion by stabilizing \r\nsoil. Several kinds of insects glue lichens to their \r\nexoskeletons for camouflage. Many species of birds us \r\n<span style=\"color:red\">(30)</span> lichens as building materials for nests. Humans have used \r\nlichens for dyes and antibiotics.",
    "ans_a": "tender",
    "ans_b": "durable",
    "ans_c": "armed",
    "ans_d": "beneficial",
    "answer": "B"
  },
  {
    "number": "93",
    "type": "reading",
    "question": "In biology, mutualism occurs when two different organisms live close together and",
    "text": "<b>Questions 91-100</b>\r\n\r\nLichens, of which more than twenty thousand species \r\nhave been named, are complex associations between certain \r\nfungi and certain algae. The lichen itself is not an organism; \r\nrather it is the morphological and biochemical product of \r\n<span style=\"color:red\">(5)</span> the association. Neither a fungus nor an alga alone can \r\nproduce a lichen. \r\n\r\nThe intimate relationship between these two living \r\ncomponents of a lichen was once erroneously thought to \r\nrepresent mutualism. In mutualistic relationships, both\r\n<span style=\"color:red\">(10)</span> participants benefit. With lichens, however, it appears the \r\nfungus actually parasitizes the algae. This is one of the \r\nconclusions drawn from experiments in which the two \r\ncomponents of lichens were separated and grown apart.\r\n\r\nIn nature, lichen fungi may encounter and grow around \r\n<span style=\"color:red\">(15)</span> several kinds of algae. Some types of algae the fungi may \r\nkill other types it may reject. Lichen algae are autotrophic, \r\nmeaning they make their own food through photosynthesis. \r\nLichen fungi are heterotrophic, meaning they depend upon \r\nthe algae within the lichen to supply their food. Up to nine \r\n<span style=\"color:red\">(20)</span> percent of the food made by the green algal cells \r\ntransferred to the fungus. What, if anything, the fun \r\ncontributes to the association is not well understood.\r\n\r\nLichens are hardy. They grow in many habitats and are \r\noften pioneers in hostile environments where few other \r\n<span style=\"color:red\">(25)</span> organisms can flourish. They have been known to grow \r\nendolithically, having been discovered thriving inside \r\nrocks in Antarctica. Lichens help reduce erosion by stabilizing \r\nsoil. Several kinds of insects glue lichens to their \r\nexoskeletons for camouflage. Many species of birds us \r\n<span style=\"color:red\">(30)</span> lichens as building materials for nests. Humans have used \r\nlichens for dyes and antibiotics.",
    "ans_a": "one organism parasitizes the other",
    "ans_b": "both organisms benefit from the association",
    "ans_c": "both organisms are harmed by the association",
    "ans_d": "one organism benefits while the other does not or harmed by the association",
    "answer": "C"
  },
  {
    "number": "94",
    "type": "reading",
    "question": "In line 7, the word \"intimate” is nearest in meaning to",
    "text": "<b>Questions 91-100</b>\r\n\r\nLichens, of which more than twenty thousand species \r\nhave been named, are complex associations between certain \r\nfungi and certain algae. The lichen itself is not an organism; \r\nrather it is the morphological and biochemical product of \r\n<span style=\"color:red\">(5)</span> the association. Neither a fungus nor an alga alone can \r\nproduce a lichen. \r\n\r\nThe intimate relationship between these two living \r\ncomponents of a lichen was once erroneously thought to \r\nrepresent mutualism. In mutualistic relationships, both\r\n<span style=\"color:red\">(10)</span> participants benefit. With lichens, however, it appears the \r\nfungus actually parasitizes the algae. This is one of the \r\nconclusions drawn from experiments in which the two \r\ncomponents of lichens were separated and grown apart.\r\n\r\nIn nature, lichen fungi may encounter and grow around \r\n<span style=\"color:red\">(15)</span> several kinds of algae. Some types of algae the fungi may \r\nkill other types it may reject. Lichen algae are autotrophic, \r\nmeaning they make their own food through photosynthesis. \r\nLichen fungi are heterotrophic, meaning they depend upon \r\nthe algae within the lichen to supply their food. Up to nine \r\n<span style=\"color:red\">(20)</span> percent of the food made by the green algal cells \r\ntransferred to the fungus. What, if anything, the fun \r\ncontributes to the association is not well understood.\r\n\r\nLichens are hardy. They grow in many habitats and are \r\noften pioneers in hostile environments where few other \r\n<span style=\"color:red\">(25)</span> organisms can flourish. They have been known to grow \r\nendolithically, having been discovered thriving inside \r\nrocks in Antarctica. Lichens help reduce erosion by stabilizing \r\nsoil. Several kinds of insects glue lichens to their \r\nexoskeletons for camouflage. Many species of birds us \r\n<span style=\"color:red\">(30)</span> lichens as building materials for nests. Humans have used \r\nlichens for dyes and antibiotics.",
    "ans_a": "living",
    "ans_b": "extraordinary",
    "ans_c": "biological",
    "ans_d": "close",
    "answer": "A"
  },
  {
    "number": "95",
    "type": "reading",
    "question": "Lichens serve as camouflage for which of the following?",
    "text": "<b>Questions 91-100</b>\r\n\r\nLichens, of which more than twenty thousand species \r\nhave been named, are complex associations between certain \r\nfungi and certain algae. The lichen itself is not an organism; \r\nrather it is the morphological and biochemical product of \r\n<span style=\"color:red\">(5)</span> the association. Neither a fungus nor an alga alone can \r\nproduce a lichen. \r\n\r\nThe intimate relationship between these two living \r\ncomponents of a lichen was once erroneously thought to \r\nrepresent mutualism. In mutualistic relationships, both\r\n<span style=\"color:red\">(10)</span> participants benefit. With lichens, however, it appears the \r\nfungus actually parasitizes the algae. This is one of the \r\nconclusions drawn from experiments in which the two \r\ncomponents of lichens were separated and grown apart.\r\n\r\nIn nature, lichen fungi may encounter and grow around \r\n<span style=\"color:red\">(15)</span> several kinds of algae. Some types of algae the fungi may \r\nkill other types it may reject. Lichen algae are autotrophic, \r\nmeaning they make their own food through photosynthesis. \r\nLichen fungi are heterotrophic, meaning they depend upon \r\nthe algae within the lichen to supply their food. Up to nine \r\n<span style=\"color:red\">(20)</span> percent of the food made by the green algal cells \r\ntransferred to the fungus. What, if anything, the fun \r\ncontributes to the association is not well understood.\r\n\r\nLichens are hardy. They grow in many habitats and are \r\noften pioneers in hostile environments where few other \r\n<span style=\"color:red\">(25)</span> organisms can flourish. They have been known to grow \r\nendolithically, having been discovered thriving inside \r\nrocks in Antarctica. Lichens help reduce erosion by stabilizing \r\nsoil. Several kinds of insects glue lichens to their \r\nexoskeletons for camouflage. Many species of birds us \r\n<span style=\"color:red\">(30)</span> lichens as building materials for nests. Humans have used \r\nlichens for dyes and antibiotics.",
    "ans_a": "Insects",
    "ans_b": "Birds",
    "ans_c": "Reptiles",
    "ans_d": "Mammals",
    "answer": "D"
  },
  {
    "number": "96",
    "type": "reading",
    "question": "The true nature of the relationship between the lichen components was clarified by",
    "text": "<b>Questions 91-100</b>\r\n\r\nLichens, of which more than twenty thousand species \r\nhave been named, are complex associations between certain \r\nfungi and certain algae. The lichen itself is not an organism; \r\nrather it is the morphological and biochemical product of \r\n<span style=\"color:red\">(5)</span> the association. Neither a fungus nor an alga alone can \r\nproduce a lichen. \r\n\r\nThe intimate relationship between these two living \r\ncomponents of a lichen was once erroneously thought to \r\nrepresent mutualism. In mutualistic relationships, both\r\n<span style=\"color:red\">(10)</span> participants benefit. With lichens, however, it appears the \r\nfungus actually parasitizes the algae. This is one of the \r\nconclusions drawn from experiments in which the two \r\ncomponents of lichens were separated and grown apart.\r\n\r\nIn nature, lichen fungi may encounter and grow around \r\n<span style=\"color:red\">(15)</span> several kinds of algae. Some types of algae the fungi may \r\nkill other types it may reject. Lichen algae are autotrophic, \r\nmeaning they make their own food through photosynthesis. \r\nLichen fungi are heterotrophic, meaning they depend upon \r\nthe algae within the lichen to supply their food. Up to nine \r\n<span style=\"color:red\">(20)</span> percent of the food made by the green algal cells \r\ntransferred to the fungus. What, if anything, the fun \r\ncontributes to the association is not well understood.\r\n\r\nLichens are hardy. They grow in many habitats and are \r\noften pioneers in hostile environments where few other \r\n<span style=\"color:red\">(25)</span> organisms can flourish. They have been known to grow \r\nendolithically, having been discovered thriving inside \r\nrocks in Antarctica. Lichens help reduce erosion by stabilizing \r\nsoil. Several kinds of insects glue lichens to their \r\nexoskeletons for camouflage. Many species of birds us \r\n<span style=\"color:red\">(30)</span> lichens as building materials for nests. Humans have used \r\nlichens for dyes and antibiotics.",
    "ans_a": "examining lichens with a microscope",
    "ans_b": "observing lichens placed in the dark",
    "ans_c": "observing the lichen components when grown apart",
    "ans_d": "decreasing the amount of nutrients available to the lichens",
    "answer": "A"
  },
  {
    "number": "97",
    "type": "reading",
    "question": "In line 24, the word \"hostile\" is closest in meaning to",
    "text": "<b>Questions 91-100</b>\r\n\r\nLichens, of which more than twenty thousand species \r\nhave been named, are complex associations between certain \r\nfungi and certain algae. The lichen itself is not an organism; \r\nrather it is the morphological and biochemical product of \r\n<span style=\"color:red\">(5)</span> the association. Neither a fungus nor an alga alone can \r\nproduce a lichen. \r\n\r\nThe intimate relationship between these two living \r\ncomponents of a lichen was once erroneously thought to \r\nrepresent mutualism. In mutualistic relationships, both\r\n<span style=\"color:red\">(10)</span> participants benefit. With lichens, however, it appears the \r\nfungus actually parasitizes the algae. This is one of the \r\nconclusions drawn from experiments in which the two \r\ncomponents of lichens were separated and grown apart.\r\n\r\nIn nature, lichen fungi may encounter and grow around \r\n<span style=\"color:red\">(15)</span> several kinds of algae. Some types of algae the fungi may \r\nkill other types it may reject. Lichen algae are autotrophic, \r\nmeaning they make their own food through photosynthesis. \r\nLichen fungi are heterotrophic, meaning they depend upon \r\nthe algae within the lichen to supply their food. Up to nine \r\n<span style=\"color:red\">(20)</span> percent of the food made by the green algal cells \r\ntransferred to the fungus. What, if anything, the fun \r\ncontributes to the association is not well understood.\r\n\r\nLichens are hardy. They grow in many habitats and are \r\noften pioneers in hostile environments where few other \r\n<span style=\"color:red\">(25)</span> organisms can flourish. They have been known to grow \r\nendolithically, having been discovered thriving inside \r\nrocks in Antarctica. Lichens help reduce erosion by stabilizing \r\nsoil. Several kinds of insects glue lichens to their \r\nexoskeletons for camouflage. Many species of birds us \r\n<span style=\"color:red\">(30)</span> lichens as building materials for nests. Humans have used \r\nlichens for dyes and antibiotics.",
    "ans_a": "unusual",
    "ans_b": "cool",
    "ans_c": "untraveled",
    "ans_d": "inhospitable",
    "answer": "C"
  },
  {
    "number": "98",
    "type": "reading",
    "question": "An endolithic lichen is one that",
    "text": "<b>Questions 91-100</b>\r\n\r\nLichens, of which more than twenty thousand species \r\nhave been named, are complex associations between certain \r\nfungi and certain algae. The lichen itself is not an organism; \r\nrather it is the morphological and biochemical product of \r\n<span style=\"color:red\">(5)</span> the association. Neither a fungus nor an alga alone can \r\nproduce a lichen. \r\n\r\nThe intimate relationship between these two living \r\ncomponents of a lichen was once erroneously thought to \r\nrepresent mutualism. In mutualistic relationships, both\r\n<span style=\"color:red\">(10)</span> participants benefit. With lichens, however, it appears the \r\nfungus actually parasitizes the algae. This is one of the \r\nconclusions drawn from experiments in which the two \r\ncomponents of lichens were separated and grown apart.\r\n\r\nIn nature, lichen fungi may encounter and grow around \r\n<span style=\"color:red\">(15)</span> several kinds of algae. Some types of algae the fungi may \r\nkill other types it may reject. Lichen algae are autotrophic, \r\nmeaning they make their own food through photosynthesis. \r\nLichen fungi are heterotrophic, meaning they depend upon \r\nthe algae within the lichen to supply their food. Up to nine \r\n<span style=\"color:red\">(20)</span> percent of the food made by the green algal cells \r\ntransferred to the fungus. What, if anything, the fun \r\ncontributes to the association is not well understood.\r\n\r\nLichens are hardy. They grow in many habitats and are \r\noften pioneers in hostile environments where few other \r\n<span style=\"color:red\">(25)</span> organisms can flourish. They have been known to grow \r\nendolithically, having been discovered thriving inside \r\nrocks in Antarctica. Lichens help reduce erosion by stabilizing \r\nsoil. Several kinds of insects glue lichens to their \r\nexoskeletons for camouflage. Many species of birds us \r\n<span style=\"color:red\">(30)</span> lichens as building materials for nests. Humans have used \r\nlichens for dyes and antibiotics.",
    "ans_a": "grows in the canopies of trees",
    "ans_b": "grows inside rocks",
    "ans_c": "grows at very high altitudes",
    "ans_d": "grows inside other organisms, including other lichens",
    "answer": "B"
  },
  {
    "number": "99",
    "type": "reading",
    "question": "Many lichens contribute to the communities they inhabit by",
    "text": "<b>Questions 91-100</b>\r\n\r\nLichens, of which more than twenty thousand species \r\nhave been named, are complex associations between certain \r\nfungi and certain algae. The lichen itself is not an organism; \r\nrather it is the morphological and biochemical product of \r\n<span style=\"color:red\">(5)</span> the association. Neither a fungus nor an alga alone can \r\nproduce a lichen. \r\n\r\nThe intimate relationship between these two living \r\ncomponents of a lichen was once erroneously thought to \r\nrepresent mutualism. In mutualistic relationships, both\r\n<span style=\"color:red\">(10)</span> participants benefit. With lichens, however, it appears the \r\nfungus actually parasitizes the algae. This is one of the \r\nconclusions drawn from experiments in which the two \r\ncomponents of lichens were separated and grown apart.\r\n\r\nIn nature, lichen fungi may encounter and grow around \r\n<span style=\"color:red\">(15)</span> several kinds of algae. Some types of algae the fungi may \r\nkill other types it may reject. Lichen algae are autotrophic, \r\nmeaning they make their own food through photosynthesis. \r\nLichen fungi are heterotrophic, meaning they depend upon \r\nthe algae within the lichen to supply their food. Up to nine \r\n<span style=\"color:red\">(20)</span> percent of the food made by the green algal cells \r\ntransferred to the fungus. What, if anything, the fun \r\ncontributes to the association is not well understood.\r\n\r\nLichens are hardy. They grow in many habitats and are \r\noften pioneers in hostile environments where few other \r\n<span style=\"color:red\">(25)</span> organisms can flourish. They have been known to grow \r\nendolithically, having been discovered thriving inside \r\nrocks in Antarctica. Lichens help reduce erosion by stabilizing \r\nsoil. Several kinds of insects glue lichens to their \r\nexoskeletons for camouflage. Many species of birds us \r\n<span style=\"color:red\">(30)</span> lichens as building materials for nests. Humans have used \r\nlichens for dyes and antibiotics.",
    "ans_a": "removing pollutants from the air",
    "ans_b": "controlling wood-rotting fungi",
    "ans_c": "slowing the spread of viruses",
    "ans_d": "educing soil erosion",
    "answer": "B"
  },
  {
    "number": "100",
    "type": "reading",
    "question": "In what part of the passage does the author indicate that scientists have changed their previous position on the makeup of lichens?",
    "text": "<b>Questions 91-100</b>\r\n\r\nLichens, of which more than twenty thousand species \r\nhave been named, are complex associations between certain \r\nfungi and certain algae. The lichen itself is not an organism; \r\nrather it is the morphological and biochemical product of \r\n<span style=\"color:red\">(5)</span> the association. Neither a fungus nor an alga alone can \r\nproduce a lichen. \r\n\r\nThe intimate relationship between these two living \r\ncomponents of a lichen was once erroneously thought to \r\nrepresent mutualism. In mutualistic relationships, both\r\n<span style=\"color:red\">(10)</span> participants benefit. With lichens, however, it appears the \r\nfungus actually parasitizes the algae. This is one of the \r\nconclusions drawn from experiments in which the two \r\ncomponents of lichens were separated and grown apart.\r\n\r\nIn nature, lichen fungi may encounter and grow around \r\n<span style=\"color:red\">(15)</span> several kinds of algae. Some types of algae the fungi may \r\nkill other types it may reject. Lichen algae are autotrophic, \r\nmeaning they make their own food through photosynthesis. \r\nLichen fungi are heterotrophic, meaning they depend upon \r\nthe algae within the lichen to supply their food. Up to nine \r\n<span style=\"color:red\">(20)</span> percent of the food made by the green algal cells \r\ntransferred to the fungus. What, if anything, the fun \r\ncontributes to the association is not well understood.\r\n\r\nLichens are hardy. They grow in many habitats and are \r\noften pioneers in hostile environments where few other \r\n<span style=\"color:red\">(25)</span> organisms can flourish. They have been known to grow \r\nendolithically, having been discovered thriving inside \r\nrocks in Antarctica. Lichens help reduce erosion by stabilizing \r\nsoil. Several kinds of insects glue lichens to their \r\nexoskeletons for camouflage. Many species of birds us \r\n<span style=\"color:red\">(30)</span> lichens as building materials for nests. Humans have used \r\nlichens for dyes and antibiotics.",
    "ans_a": "Lines 3-5",
    "ans_b": "Lines 7-9",
    "ans_c": "Lines 14-16",
    "ans_d": "Lines 25-27",
    "answer": "C"
  },
  {
    "number": "101",
    "type": "reading",
    "question": "What is the most important reason that Sequoyah will be remembered?",
    "text": "<b>Questions 101-110</b>\r\n\r\nSequoyah was a young Cherokee Indian, son of a white \r\ntrader and an Indian squaw. At an early age, he became \r\nfascinated by the talking leaf, \" an expression that he used \r\nto describe the white man's written records. Although many \r\n<span style=\"color:red\">(5)</span> believed this “talking leaf” to be a gift from the Great Spirit, \r\nSequoyah refused to accept that theory. Like other Indians \r\nof the period, he was illiterate, but his determination to \r\nremedy the situation led to the invention of a unique \r\neighty-six-character alphabet based on the sound patterns \r\n<span style=\"color:red\">(10)</span> that he heard. \r\n\r\nHis family and friends thought him mad, but while \r\nrecuperating from a hunting accident, he diligently and \r\nindependently set out to create a form of communication for \r\nhis own people as well as for other Indians. In 1821, after \r\n<span style=\"color:red\">(15)</span> twelve years of work, he had successfully developed a \r\nwritten language that would enable thousands of Indians to \r\nread and write.\r\n\r\nSequoyah's desire to preserve words and events for later \r\ngenerations has caused him to be remembered among the \r\n<span style=\"color:red\">(20)</span> important inventors. The giant redwood trees of California, \r\ncalled “sequoias” in his honor, will further imprint his name \r\nin history.",
    "ans_a": "California redwoods were named in his honor.",
    "ans_b": "He was illiterate.",
    "ans_c": "He created a unique alphabet.",
    "ans_d": "He recovered from his madness and helped humankind.",
    "answer": "C"
  },
  {
    "number": "102",
    "type": "reading",
    "question": "The word “squaw” in line 2 is closest in meaning to",
    "text": "<b>Questions 101-110</b>\r\n\r\nSequoyah was a young Cherokee Indian, son of a white \r\ntrader and an Indian squaw. At an early age, he became \r\nfascinated by the talking leaf, \" an expression that he used \r\nto describe the white man's written records. Although many \r\n<span style=\"color:red\">(5)</span> believed this “talking leaf” to be a gift from the Great Spirit, \r\nSequoyah refused to accept that theory. Like other Indians \r\nof the period, he was illiterate, but his determination to \r\nremedy the situation led to the invention of a unique \r\neighty-six-character alphabet based on the sound patterns \r\n<span style=\"color:red\">(10)</span> that he heard. \r\n\r\nHis family and friends thought him mad, but while \r\nrecuperating from a hunting accident, he diligently and \r\nindependently set out to create a form of communication for \r\nhis own people as well as for other Indians. In 1821, after \r\n<span style=\"color:red\">(15)</span> twelve years of work, he had successfully developed a \r\nwritten language that would enable thousands of Indians to \r\nread and write.\r\n\r\nSequoyah's desire to preserve words and events for later \r\ngenerations has caused him to be remembered among the \r\n<span style=\"color:red\">(20)</span> important inventors. The giant redwood trees of California, \r\ncalled “sequoias” in his honor, will further imprint his name \r\nin history.",
    "ans_a": "woman",
    "ans_b": "teacher",
    "ans_c": "cook",
    "ans_d": "trader",
    "answer": "A"
  },
  {
    "number": "103",
    "type": "reading",
    "question": "How did Sequoyah's family react to his idea of developing his own “talking leaf”?",
    "text": "<b>Questions 101-110</b>\r\n\r\nSequoyah was a young Cherokee Indian, son of a white \r\ntrader and an Indian squaw. At an early age, he became \r\nfascinated by the talking leaf, \" an expression that he used \r\nto describe the white man's written records. Although many \r\n<span style=\"color:red\">(5)</span> believed this “talking leaf” to be a gift from the Great Spirit, \r\nSequoyah refused to accept that theory. Like other Indians \r\nof the period, he was illiterate, but his determination to \r\nremedy the situation led to the invention of a unique \r\neighty-six-character alphabet based on the sound patterns \r\n<span style=\"color:red\">(10)</span> that he heard. \r\n\r\nHis family and friends thought him mad, but while \r\nrecuperating from a hunting accident, he diligently and \r\nindependently set out to create a form of communication for \r\nhis own people as well as for other Indians. In 1821, after \r\n<span style=\"color:red\">(15)</span> twelve years of work, he had successfully developed a \r\nwritten language that would enable thousands of Indians to \r\nread and write.\r\n\r\nSequoyah's desire to preserve words and events for later \r\ngenerations has caused him to be remembered among the \r\n<span style=\"color:red\">(20)</span> important inventors. The giant redwood trees of California, \r\ncalled “sequoias” in his honor, will further imprint his name \r\nin history.",
    "ans_a": "They arranged for his hunting accident",
    "ans_b": "They thought he was crazy",
    "ans_c": "They decided to help him",
    "ans_d": "They asked him to teach them to read and write",
    "answer": "B"
  },
  {
    "number": "104",
    "type": "reading",
    "question": "What prompted Sequoyah to develop his alphabet?",
    "text": "<b>Questions 101-110</b>\r\n\r\nSequoyah was a young Cherokee Indian, son of a white \r\ntrader and an Indian squaw. At an early age, he became \r\nfascinated by the talking leaf, \" an expression that he used \r\nto describe the white man's written records. Although many \r\n<span style=\"color:red\">(5)</span> believed this “talking leaf” to be a gift from the Great Spirit, \r\nSequoyah refused to accept that theory. Like other Indians \r\nof the period, he was illiterate, but his determination to \r\nremedy the situation led to the invention of a unique \r\neighty-six-character alphabet based on the sound patterns \r\n<span style=\"color:red\">(10)</span> that he heard. \r\n\r\nHis family and friends thought him mad, but while \r\nrecuperating from a hunting accident, he diligently and \r\nindependently set out to create a form of communication for \r\nhis own people as well as for other Indians. In 1821, after \r\n<span style=\"color:red\">(15)</span> twelve years of work, he had successfully developed a \r\nwritten language that would enable thousands of Indians to \r\nread and write.\r\n\r\nSequoyah's desire to preserve words and events for later \r\ngenerations has caused him to be remembered among the \r\n<span style=\"color:red\">(20)</span> important inventors. The giant redwood trees of California, \r\ncalled “sequoias” in his honor, will further imprint his name \r\nin history.",
    "ans_a": "People were writing things about him that he couldn't read",
    "ans_b": "He wanted to become famous",
    "ans_c": "After his hunting accident, he needed something to keep him busy",
    "ans_d": "He wanted the history of his people preserved for future generations",
    "answer": "D"
  },
  {
    "number": "105",
    "type": "reading",
    "question": "In line 7, the word “illiterate” means most nearly the same as",
    "text": "<b>Questions 101-110</b>\r\n\r\nSequoyah was a young Cherokee Indian, son of a white \r\ntrader and an Indian squaw. At an early age, he became \r\nfascinated by the talking leaf, \" an expression that he used \r\nto describe the white man's written records. Although many \r\n<span style=\"color:red\">(5)</span> believed this “talking leaf” to be a gift from the Great Spirit, \r\nSequoyah refused to accept that theory. Like other Indians \r\nof the period, he was illiterate, but his determination to \r\nremedy the situation led to the invention of a unique \r\neighty-six-character alphabet based on the sound patterns \r\n<span style=\"color:red\">(10)</span> that he heard. \r\n\r\nHis family and friends thought him mad, but while \r\nrecuperating from a hunting accident, he diligently and \r\nindependently set out to create a form of communication for \r\nhis own people as well as for other Indians. In 1821, after \r\n<span style=\"color:red\">(15)</span> twelve years of work, he had successfully developed a \r\nwritten language that would enable thousands of Indians to \r\nread and write.\r\n\r\nSequoyah's desire to preserve words and events for later \r\ngenerations has caused him to be remembered among the \r\n<span style=\"color:red\">(20)</span> important inventors. The giant redwood trees of California, \r\ncalled “sequoias” in his honor, will further imprint his name \r\nin history.",
    "ans_a": "fierce",
    "ans_b": "poor",
    "ans_c": "abandoned",
    "ans_d": "unable to read or write",
    "answer": "D"
  },
  {
    "number": "106",
    "type": "reading",
    "question": "It is implied that Sequoyah called the written records “the talking leaf” because",
    "text": "<b>Questions 101-110</b>\r\n\r\nSequoyah was a young Cherokee Indian, son of a white \r\ntrader and an Indian squaw. At an early age, he became \r\nfascinated by the talking leaf, \" an expression that he used \r\nto describe the white man's written records. Although many \r\n<span style=\"color:red\">(5)</span> believed this “talking leaf” to be a gift from the Great Spirit, \r\nSequoyah refused to accept that theory. Like other Indians \r\nof the period, he was illiterate, but his determination to \r\nremedy the situation led to the invention of a unique \r\neighty-six-character alphabet based on the sound patterns \r\n<span style=\"color:red\">(10)</span> that he heard. \r\n\r\nHis family and friends thought him mad, but while \r\nrecuperating from a hunting accident, he diligently and \r\nindependently set out to create a form of communication for \r\nhis own people as well as for other Indians. In 1821, after \r\n<span style=\"color:red\">(15)</span> twelve years of work, he had successfully developed a \r\nwritten language that would enable thousands of Indians to \r\nread and write.\r\n\r\nSequoyah's desire to preserve words and events for later \r\ngenerations has caused him to be remembered among the \r\n<span style=\"color:red\">(20)</span> important inventors. The giant redwood trees of California, \r\ncalled “sequoias” in his honor, will further imprint his name \r\nin history.",
    "ans_a": "they played music",
    "ans_b": "when he observed white people reading, they seemed to understand what was written",
    "ans_c": "he was going mad, and he thought the leaves were talking to him",
    "ans_d": "it was the only way that the Great Spirit had of communicating with them",
    "answer": "B"
  },
  {
    "number": "107",
    "type": "reading",
    "question": "Sequoyah could best be described as",
    "text": "<b>Questions 101-110</b>\r\n\r\nSequoyah was a young Cherokee Indian, son of a white \r\ntrader and an Indian squaw. At an early age, he became \r\nfascinated by the talking leaf, \" an expression that he used \r\nto describe the white man's written records. Although many \r\n<span style=\"color:red\">(5)</span> believed this “talking leaf” to be a gift from the Great Spirit, \r\nSequoyah refused to accept that theory. Like other Indians \r\nof the period, he was illiterate, but his determination to \r\nremedy the situation led to the invention of a unique \r\neighty-six-character alphabet based on the sound patterns \r\n<span style=\"color:red\">(10)</span> that he heard. \r\n\r\nHis family and friends thought him mad, but while \r\nrecuperating from a hunting accident, he diligently and \r\nindependently set out to create a form of communication for \r\nhis own people as well as for other Indians. In 1821, after \r\n<span style=\"color:red\">(15)</span> twelve years of work, he had successfully developed a \r\nwritten language that would enable thousands of Indians to \r\nread and write.\r\n\r\nSequoyah's desire to preserve words and events for later \r\ngenerations has caused him to be remembered among the \r\n<span style=\"color:red\">(20)</span> important inventors. The giant redwood trees of California, \r\ncalled “sequoias” in his honor, will further imprint his name \r\nin history.",
    "ans_a": "determined",
    "ans_b": "mad",
    "ans_c": "backwards",
    "ans_d": "meek",
    "answer": "A"
  },
  {
    "number": "108",
    "type": "reading",
    "question": "What is the best title for the passage?",
    "text": "<b>Questions 101-110</b>\r\n\r\nSequoyah was a young Cherokee Indian, son of a white \r\ntrader and an Indian squaw. At an early age, he became \r\nfascinated by the talking leaf, \" an expression that he used \r\nto describe the white man's written records. Although many \r\n<span style=\"color:red\">(5)</span> believed this “talking leaf” to be a gift from the Great Spirit, \r\nSequoyah refused to accept that theory. Like other Indians \r\nof the period, he was illiterate, but his determination to \r\nremedy the situation led to the invention of a unique \r\neighty-six-character alphabet based on the sound patterns \r\n<span style=\"color:red\">(10)</span> that he heard. \r\n\r\nHis family and friends thought him mad, but while \r\nrecuperating from a hunting accident, he diligently and \r\nindependently set out to create a form of communication for \r\nhis own people as well as for other Indians. In 1821, after \r\n<span style=\"color:red\">(15)</span> twelve years of work, he had successfully developed a \r\nwritten language that would enable thousands of Indians to \r\nread and write.\r\n\r\nSequoyah's desire to preserve words and events for later \r\ngenerations has caused him to be remembered among the \r\n<span style=\"color:red\">(20)</span> important inventors. The giant redwood trees of California, \r\ncalled “sequoias” in his honor, will further imprint his name \r\nin history.",
    "ans_a": "Sequoyah's Determination to Preserve the Cherokee Language",
    "ans_b": "The Origin of the Cherokee Language",
    "ans_c": "Sequoyah's Madness Leads to a New Language",
    "ans_d": "The Origin of the \"Sequoia\" Trees in California",
    "answer": "A"
  },
  {
    "number": "109",
    "type": "reading",
    "question": "In line 3, \" fascinated \" is closest in meaning to",
    "text": "<b>Questions 101-110</b>\r\n\r\nSequoyah was a young Cherokee Indian, son of a white \r\ntrader and an Indian squaw. At an early age, he became \r\nfascinated by the talking leaf, \" an expression that he used \r\nto describe the white man's written records. Although many \r\n<span style=\"color:red\">(5)</span> believed this “talking leaf” to be a gift from the Great Spirit, \r\nSequoyah refused to accept that theory. Like other Indians \r\nof the period, he was illiterate, but his determination to \r\nremedy the situation led to the invention of a unique \r\neighty-six-character alphabet based on the sound patterns \r\n<span style=\"color:red\">(10)</span> that he heard. \r\n\r\nHis family and friends thought him mad, but while \r\nrecuperating from a hunting accident, he diligently and \r\nindependently set out to create a form of communication for \r\nhis own people as well as for other Indians. In 1821, after \r\n<span style=\"color:red\">(15)</span> twelve years of work, he had successfully developed a \r\nwritten language that would enable thousands of Indians to \r\nread and write.\r\n\r\nSequoyah's desire to preserve words and events for later \r\ngenerations has caused him to be remembered among the \r\n<span style=\"color:red\">(20)</span> important inventors. The giant redwood trees of California, \r\ncalled “sequoias” in his honor, will further imprint his name \r\nin history.",
    "ans_a": "absorbed",
    "ans_b": "exasperated",
    "ans_c": "confused",
    "ans_d": "imaginative",
    "answer": "A"
  },
  {
    "number": "110",
    "type": "reading",
    "question": "All of the following are true EXCEPT",
    "text": "<b>Questions 101-110</b>\r\n\r\nSequoyah was a young Cherokee Indian, son of a white \r\ntrader and an Indian squaw. At an early age, he became \r\nfascinated by the talking leaf, \" an expression that he used \r\nto describe the white man's written records. Although many \r\n<span style=\"color:red\">(5)</span> believed this “talking leaf” to be a gift from the Great Spirit, \r\nSequoyah refused to accept that theory. Like other Indians \r\nof the period, he was illiterate, but his determination to \r\nremedy the situation led to the invention of a unique \r\neighty-six-character alphabet based on the sound patterns \r\n<span style=\"color:red\">(10)</span> that he heard. \r\n\r\nHis family and friends thought him mad, but while \r\nrecuperating from a hunting accident, he diligently and \r\nindependently set out to create a form of communication for \r\nhis own people as well as for other Indians. In 1821, after \r\n<span style=\"color:red\">(15)</span> twelve years of work, he had successfully developed a \r\nwritten language that would enable thousands of Indians to \r\nread and write.\r\n\r\nSequoyah's desire to preserve words and events for later \r\ngenerations has caused him to be remembered among the \r\n<span style=\"color:red\">(20)</span> important inventors. The giant redwood trees of California, \r\ncalled “sequoias” in his honor, will further imprint his name \r\nin history.",
    "ans_a": "Sequoyah developed a form of writing with the help of the Cherokee tribe",
    "ans_b": "Sequoyah was a very observant young man",
    "ans_c": "Sequoyah spent twelve years developing his alphabet",
    "ans_d": "Sequoyah was honored by having some trees named after him",
    "answer": "A"
  },
  {
    "number": "111",
    "type": "reading",
    "question": "This passage is about",
    "text": "<b>Questions 111-119</b>\r\n\r\nThere is a common expression in the English language referring to a blue moon. When people\r\nsay that something happens \"only once in a blue moon,\" they mean that it happens only very rarely,\r\nonce in a great while. This expression has been around for at least a century and a half; there are \r\nreferences to this expression that date from the second half of the nineteenth century.\r\n\r\n<span style=\"color:red\">(5)</span> The expression \"a blue moon\" has come to refer to the second full moon occurring in any given \r\ncalendar month. A second full moon is not called a blue moon because it is particularly blue or is any \r\ndifferent in hue from the first full moon of the month. Instead, it is called a blue moon because it is so \r\nrare. The moon needs a little more than 29 days to complete the cycle from full moon to full moon. \r\nBecause every month except February has more than 29 days, every month will have at least one full \r\n<span style=\"color:red\">(10)</span> moon (except February, which will have a full moon unless there is a full moon at the very end of \r\nJanuary and another full moon at the very beginning of March). It is on the occasion when a given \r\ncalendar month has a second full moon that a blue moon occurs. This does not happen very often, \r\nonly three or four times in a decade.\r\n\r\nThe blue moons of today are called blue moons because of their rarity and not because of their \r\n<span style=\"color:red\">(15)</span> color; however, the expression \"blue moon\" may have come into existence in reference to unusual \r\ncircumstances in which the moon actually appeared blue. Certain natural phenomena of gigantic \r\nproportions can actually change the appearance of the moon from Earth. The eruption of the \r\nKrakatao volcano in 1883 left dust particles in the atmosphere, which clouded the sun and gave the \r\nmoon a bluish tint. This particular occurrence of the blue moon may have given rise to the expression \r\n<span style=\"color:red\">(20)</span> that we use today. Another example occurred more than a century later. When Mount Pinatubo \r\nerupted in the Philippines in 1991, the moon again took on a blue tint.",
    "ans_a": "an idiomatic expression ",
    "ans_b": "an unusual color",
    "ans_c": "a month on the calendar",
    "ans_d": "a phase of the moon",
    "answer": "A"
  },
  {
    "number": "112",
    "type": "reading",
    "question": "How long has the expression \"once blue moon\" been around?",
    "text": "<b>Questions 111-119</b>\r\n\r\nThere is a common expression in the English language referring to a blue moon. When people\r\nsay that something happens \"only once in a blue moon,\" they mean that it happens only very rarely,\r\nonce in a great while. This expression has been around for at least a century and a half; there are \r\nreferences to this expression that date from the second half of the nineteenth century.\r\n\r\n<span style=\"color:red\">(5)</span> The expression \"a blue moon\" has come to refer to the second full moon occurring in any given \r\ncalendar month. A second full moon is not called a blue moon because it is particularly blue or is any \r\ndifferent in hue from the first full moon of the month. Instead, it is called a blue moon because it is so \r\nrare. The moon needs a little more than 29 days to complete the cycle from full moon to full moon. \r\nBecause every month except February has more than 29 days, every month will have at least one full \r\n<span style=\"color:red\">(10)</span> moon (except February, which will have a full moon unless there is a full moon at the very end of \r\nJanuary and another full moon at the very beginning of March). It is on the occasion when a given \r\ncalendar month has a second full moon that a blue moon occurs. This does not happen very often, \r\nonly three or four times in a decade.\r\n\r\nThe blue moons of today are called blue moons because of their rarity and not because of their \r\n<span style=\"color:red\">(15)</span> color; however, the expression \"blue moon\" may have come into existence in reference to unusual \r\ncircumstances in which the moon actually appeared blue. Certain natural phenomena of gigantic \r\nproportions can actually change the appearance of the moon from Earth. The eruption of the \r\nKrakatao volcano in 1883 left dust particles in the atmosphere, which clouded the sun and gave the \r\nmoon a bluish tint. This particular occurrence of the blue moon may have given rise to the expression \r\n<span style=\"color:red\">(20)</span> that we use today. Another example occurred more than a century later. When Mount Pinatubo \r\nerupted in the Philippines in 1991, the moon again took on a blue tint.",
    "ans_a": "For around 50 years",
    "ans_b": "For less than 100 years",
    "ans_c": "For more than 100 years",
    "ans_d": "For 200 years",
    "answer": "C"
  },
  {
    "number": "113",
    "type": "reading",
    "question": "A blue moon could best be described as",
    "text": "<b>Questions 111-119</b>\r\n\r\nThere is a common expression in the English language referring to a blue moon. When people\r\nsay that something happens \"only once in a blue moon,\" they mean that it happens only very rarely,\r\nonce in a great while. This expression has been around for at least a century and a half; there are \r\nreferences to this expression that date from the second half of the nineteenth century.\r\n\r\n<span style=\"color:red\">(5)</span> The expression \"a blue moon\" has come to refer to the second full moon occurring in any given \r\ncalendar month. A second full moon is not called a blue moon because it is particularly blue or is any \r\ndifferent in hue from the first full moon of the month. Instead, it is called a blue moon because it is so \r\nrare. The moon needs a little more than 29 days to complete the cycle from full moon to full moon. \r\nBecause every month except February has more than 29 days, every month will have at least one full \r\n<span style=\"color:red\">(10)</span> moon (except February, which will have a full moon unless there is a full moon at the very end of \r\nJanuary and another full moon at the very beginning of March). It is on the occasion when a given \r\ncalendar month has a second full moon that a blue moon occurs. This does not happen very often, \r\nonly three or four times in a decade.\r\n\r\nThe blue moons of today are called blue moons because of their rarity and not because of their \r\n<span style=\"color:red\">(15)</span> color; however, the expression \"blue moon\" may have come into existence in reference to unusual \r\ncircumstances in which the moon actually appeared blue. Certain natural phenomena of gigantic \r\nproportions can actually change the appearance of the moon from Earth. The eruption of the \r\nKrakatao volcano in 1883 left dust particles in the atmosphere, which clouded the sun and gave the \r\nmoon a bluish tint. This particular occurrence of the blue moon may have given rise to the expression \r\n<span style=\"color:red\">(20)</span> that we use today. Another example occurred more than a century later. When Mount Pinatubo \r\nerupted in the Philippines in 1991, the moon again took on a blue tint.",
    "ans_a": "a full moon that is not blue in color ",
    "ans_b": "a new moon that is blue in color ",
    "ans_c": "a full moon that is blue in color",
    "ans_d": "a new moon that is not blue in color",
    "answer": "A"
  },
  {
    "number": "114",
    "type": "reading",
    "question": "The word \"hue\" in line 7 is closest in meaning to",
    "text": "<b>Questions 111-119</b>\r\n\r\nThere is a common expression in the English language referring to a blue moon. When people\r\nsay that something happens \"only once in a blue moon,\" they mean that it happens only very rarely,\r\nonce in a great while. This expression has been around for at least a century and a half; there are \r\nreferences to this expression that date from the second half of the nineteenth century.\r\n\r\n<span style=\"color:red\">(5)</span> The expression \"a blue moon\" has come to refer to the second full moon occurring in any given \r\ncalendar month. A second full moon is not called a blue moon because it is particularly blue or is any \r\ndifferent in hue from the first full moon of the month. Instead, it is called a blue moon because it is so \r\nrare. The moon needs a little more than 29 days to complete the cycle from full moon to full moon. \r\nBecause every month except February has more than 29 days, every month will have at least one full \r\n<span style=\"color:red\">(10)</span> moon (except February, which will have a full moon unless there is a full moon at the very end of \r\nJanuary and another full moon at the very beginning of March). It is on the occasion when a given \r\ncalendar month has a second full moon that a blue moon occurs. This does not happen very often, \r\nonly three or four times in a decade.\r\n\r\nThe blue moons of today are called blue moons because of their rarity and not because of their \r\n<span style=\"color:red\">(15)</span> color; however, the expression \"blue moon\" may have come into existence in reference to unusual \r\ncircumstances in which the moon actually appeared blue. Certain natural phenomena of gigantic \r\nproportions can actually change the appearance of the moon from Earth. The eruption of the \r\nKrakatao volcano in 1883 left dust particles in the atmosphere, which clouded the sun and gave the \r\nmoon a bluish tint. This particular occurrence of the blue moon may have given rise to the expression \r\n<span style=\"color:red\">(20)</span> that we use today. Another example occurred more than a century later. When Mount Pinatubo \r\nerupted in the Philippines in 1991, the moon again took on a blue tint.",
    "ans_a": "shape",
    "ans_b": "date",
    "ans_c": "color",
    "ans_d": "size",
    "answer": "C"
  },
  {
    "number": "115",
    "type": "reading",
    "question": "Which of the following might be the date of a \"blue moon\"?",
    "text": "<b>Questions 111-119</b>\r\n\r\nThere is a common expression in the English language referring to a blue moon. When people\r\nsay that something happens \"only once in a blue moon,\" they mean that it happens only very rarely,\r\nonce in a great while. This expression has been around for at least a century and a half; there are \r\nreferences to this expression that date from the second half of the nineteenth century.\r\n\r\n<span style=\"color:red\">(5)</span> The expression \"a blue moon\" has come to refer to the second full moon occurring in any given \r\ncalendar month. A second full moon is not called a blue moon because it is particularly blue or is any \r\ndifferent in hue from the first full moon of the month. Instead, it is called a blue moon because it is so \r\nrare. The moon needs a little more than 29 days to complete the cycle from full moon to full moon. \r\nBecause every month except February has more than 29 days, every month will have at least one full \r\n<span style=\"color:red\">(10)</span> moon (except February, which will have a full moon unless there is a full moon at the very end of \r\nJanuary and another full moon at the very beginning of March). It is on the occasion when a given \r\ncalendar month has a second full moon that a blue moon occurs. This does not happen very often, \r\nonly three or four times in a decade.\r\n\r\nThe blue moons of today are called blue moons because of their rarity and not because of their \r\n<span style=\"color:red\">(15)</span> color; however, the expression \"blue moon\" may have come into existence in reference to unusual \r\ncircumstances in which the moon actually appeared blue. Certain natural phenomena of gigantic \r\nproportions can actually change the appearance of the moon from Earth. The eruption of the \r\nKrakatao volcano in 1883 left dust particles in the atmosphere, which clouded the sun and gave the \r\nmoon a bluish tint. This particular occurrence of the blue moon may have given rise to the expression \r\n<span style=\"color:red\">(20)</span> that we use today. Another example occurred more than a century later. When Mount Pinatubo \r\nerupted in the Philippines in 1991, the moon again took on a blue tint.",
    "ans_a": "January 1",
    "ans_b": "February 28",
    "ans_c": "April 15",
    "ans_d": "December 31",
    "answer": "D"
  },
  {
    "number": "116",
    "type": "reading",
    "question": "How many blue moons would there most likely be in a century?",
    "text": "<b>Questions 111-119</b>\r\n\r\nThere is a common expression in the English language referring to a blue moon. When people\r\nsay that something happens \"only once in a blue moon,\" they mean that it happens only very rarely,\r\nonce in a great while. This expression has been around for at least a century and a half; there are \r\nreferences to this expression that date from the second half of the nineteenth century.\r\n\r\n<span style=\"color:red\">(5)</span> The expression \"a blue moon\" has come to refer to the second full moon occurring in any given \r\ncalendar month. A second full moon is not called a blue moon because it is particularly blue or is any \r\ndifferent in hue from the first full moon of the month. Instead, it is called a blue moon because it is so \r\nrare. The moon needs a little more than 29 days to complete the cycle from full moon to full moon. \r\nBecause every month except February has more than 29 days, every month will have at least one full \r\n<span style=\"color:red\">(10)</span> moon (except February, which will have a full moon unless there is a full moon at the very end of \r\nJanuary and another full moon at the very beginning of March). It is on the occasion when a given \r\ncalendar month has a second full moon that a blue moon occurs. This does not happen very often, \r\nonly three or four times in a decade.\r\n\r\nThe blue moons of today are called blue moons because of their rarity and not because of their \r\n<span style=\"color:red\">(15)</span> color; however, the expression \"blue moon\" may have come into existence in reference to unusual \r\ncircumstances in which the moon actually appeared blue. Certain natural phenomena of gigantic \r\nproportions can actually change the appearance of the moon from Earth. The eruption of the \r\nKrakatao volcano in 1883 left dust particles in the atmosphere, which clouded the sun and gave the \r\nmoon a bluish tint. This particular occurrence of the blue moon may have given rise to the expression \r\n<span style=\"color:red\">(20)</span> that we use today. Another example occurred more than a century later. When Mount Pinatubo \r\nerupted in the Philippines in 1991, the moon again took on a blue tint.",
    "ans_a": "4",
    "ans_b": "35",
    "ans_c": "70",
    "ans_d": "100",
    "answer": "B"
  },
  {
    "number": "117",
    "type": "reading",
    "question": "According to the passage, the moon actually looked blue",
    "text": "<b>Questions 111-119</b>\r\n\r\nThere is a common expression in the English language referring to a blue moon. When people\r\nsay that something happens \"only once in a blue moon,\" they mean that it happens only very rarely,\r\nonce in a great while. This expression has been around for at least a century and a half; there are \r\nreferences to this expression that date from the second half of the nineteenth century.\r\n\r\n<span style=\"color:red\">(5)</span> The expression \"a blue moon\" has come to refer to the second full moon occurring in any given \r\ncalendar month. A second full moon is not called a blue moon because it is particularly blue or is any \r\ndifferent in hue from the first full moon of the month. Instead, it is called a blue moon because it is so \r\nrare. The moon needs a little more than 29 days to complete the cycle from full moon to full moon. \r\nBecause every month except February has more than 29 days, every month will have at least one full \r\n<span style=\"color:red\">(10)</span> moon (except February, which will have a full moon unless there is a full moon at the very end of \r\nJanuary and another full moon at the very beginning of March). It is on the occasion when a given \r\ncalendar month has a second full moon that a blue moon occurs. This does not happen very often, \r\nonly three or four times in a decade.\r\n\r\nThe blue moons of today are called blue moons because of their rarity and not because of their \r\n<span style=\"color:red\">(15)</span> color; however, the expression \"blue moon\" may have come into existence in reference to unusual \r\ncircumstances in which the moon actually appeared blue. Certain natural phenomena of gigantic \r\nproportions can actually change the appearance of the moon from Earth. The eruption of the \r\nKrakatao volcano in 1883 left dust particles in the atmosphere, which clouded the sun and gave the \r\nmoon a bluish tint. This particular occurrence of the blue moon may have given rise to the expression \r\n<span style=\"color:red\">(20)</span> that we use today. Another example occurred more than a century later. When Mount Pinatubo \r\nerupted in the Philippines in 1991, the moon again took on a blue tint.",
    "ans_a": "after large volcanic eruptions ",
    "ans_b": "when it occurred late in the month ",
    "ans_c": "several times a year",
    "ans_d": "during the month of February",
    "answer": "A"
  },
  {
    "number": "118",
    "type": "reading",
    "question": "The expression \"given rise to\" in line 19 could best be replaced by",
    "text": "<b>Questions 111-119</b>\r\n\r\nThere is a common expression in the English language referring to a blue moon. When people\r\nsay that something happens \"only once in a blue moon,\" they mean that it happens only very rarely,\r\nonce in a great while. This expression has been around for at least a century and a half; there are \r\nreferences to this expression that date from the second half of the nineteenth century.\r\n\r\n<span style=\"color:red\">(5)</span> The expression \"a blue moon\" has come to refer to the second full moon occurring in any given \r\ncalendar month. A second full moon is not called a blue moon because it is particularly blue or is any \r\ndifferent in hue from the first full moon of the month. Instead, it is called a blue moon because it is so \r\nrare. The moon needs a little more than 29 days to complete the cycle from full moon to full moon. \r\nBecause every month except February has more than 29 days, every month will have at least one full \r\n<span style=\"color:red\">(10)</span> moon (except February, which will have a full moon unless there is a full moon at the very end of \r\nJanuary and another full moon at the very beginning of March). It is on the occasion when a given \r\ncalendar month has a second full moon that a blue moon occurs. This does not happen very often, \r\nonly three or four times in a decade.\r\n\r\nThe blue moons of today are called blue moons because of their rarity and not because of their \r\n<span style=\"color:red\">(15)</span> color; however, the expression \"blue moon\" may have come into existence in reference to unusual \r\ncircumstances in which the moon actually appeared blue. Certain natural phenomena of gigantic \r\nproportions can actually change the appearance of the moon from Earth. The eruption of the \r\nKrakatao volcano in 1883 left dust particles in the atmosphere, which clouded the sun and gave the \r\nmoon a bluish tint. This particular occurrence of the blue moon may have given rise to the expression \r\n<span style=\"color:red\">(20)</span> that we use today. Another example occurred more than a century later. When Mount Pinatubo \r\nerupted in the Philippines in 1991, the moon again took on a blue tint.",
    "ans_a": "created a need for",
    "ans_b": "elevated the level of",
    "ans_c": "spurred the creation of ",
    "ans_d": "brightened the color of",
    "answer": "C"
  },
  {
    "number": "119",
    "type": "reading",
    "question": "Where in the passage does the author describe the duration of a lunar cycle?",
    "text": "<b>Questions 111-119</b>\r\n\r\nThere is a common expression in the English language referring to a blue moon. When people\r\nsay that something happens \"only once in a blue moon,\" they mean that it happens only very rarely,\r\nonce in a great while. This expression has been around for at least a century and a half; there are \r\nreferences to this expression that date from the second half of the nineteenth century.\r\n\r\n<span style=\"color:red\">(5)</span> The expression \"a blue moon\" has come to refer to the second full moon occurring in any given \r\ncalendar month. A second full moon is not called a blue moon because it is particularly blue or is any \r\ndifferent in hue from the first full moon of the month. Instead, it is called a blue moon because it is so \r\nrare. The moon needs a little more than 29 days to complete the cycle from full moon to full moon. \r\nBecause every month except February has more than 29 days, every month will have at least one full \r\n<span style=\"color:red\">(10)</span> moon (except February, which will have a full moon unless there is a full moon at the very end of \r\nJanuary and another full moon at the very beginning of March). It is on the occasion when a given \r\ncalendar month has a second full moon that a blue moon occurs. This does not happen very often, \r\nonly three or four times in a decade.\r\n\r\nThe blue moons of today are called blue moons because of their rarity and not because of their \r\n<span style=\"color:red\">(15)</span> color; however, the expression \"blue moon\" may have come into existence in reference to unusual \r\ncircumstances in which the moon actually appeared blue. Certain natural phenomena of gigantic \r\nproportions can actually change the appearance of the moon from Earth. The eruption of the \r\nKrakatao volcano in 1883 left dust particles in the atmosphere, which clouded the sun and gave the \r\nmoon a bluish tint. This particular occurrence of the blue moon may have given rise to the expression \r\n<span style=\"color:red\">(20)</span> that we use today. Another example occurred more than a century later. When Mount Pinatubo \r\nerupted in the Philippines in 1991, the moon again took on a blue tint.",
    "ans_a": "Lines 1-3",
    "ans_b": "Lines 5-6",
    "ans_c": "Line 8",
    "ans_d": "Lines 12-13",
    "answer": "C"
  },
  {
    "number": "120",
    "type": "reading",
    "question": "What is the primary purpose of this passage?",
    "text": "<b>Questions 120-130</b>\r\n\r\nThe Sun today is a yellow dwarf star. It is fueled by\r\nthermonuclear reactions near its center that convert hydrogen to\r\nhelium. The Sun has existed in its present state for about 4\r\nbillion, 600 million years and is thousands of times larger than\r\n<span style=\"color:red\">(5)</span> the Earth.\r\n\r\nBy studying other stars, astronomers can predict what the rest\r\nof the Sun's life will be like. About 5 billion years from now,\r\nthe core of the Sun will shrink and become hotter. The surface\r\ntemperature will fall. The higher temperature of the center will\r\n<span style=\"color:red\">(10)</span> increase the rate of thermonuclear reactions. The outer regions of\r\nthe Sun will expand approximately 35 million miles, about the\r\ndistance to Mercury, which is the closest planet to the Sun. The\r\nSun will then be a red giant star. Temperatures on the Earth will\r\nbecome too hot for life to exist.\r\n\r\n<span style=\"color:red\">(15)</span> Once the Sun has used up its thermonuclear energy as a red giant,\r\nit will begin to shrink. After it shrinks to the size of the Earth,\r\nit will become a white dwarf star. The Sun may throw off huge\r\namounts of gases in violent eruptions called nova explosions as it\r\nchanges from a red giant to a white dwarf.\r\n\r\n<span style=\"color:red\">(20)</span> After billions of years as a white dwarf, the Sun will have used\r\nup all its fuel and will have lost its heat. Such a star is called\r\na black dwarf. After the Sun has become a black dwarf, the Earth\r\nwill be dark and cold. If any atmosphere remains there, it will\r\nhave frozen onto the Earth's surface.",
    "ans_a": "To alert people to the dangers posed by the Sun",
    "ans_b": "To discuss conditions on Earth in the far future",
    "ans_c": "To present a theory about red giant stars",
    "ans_d": "To describe changes that the Sun will go through",
    "answer": "D"
  },
  {
    "number": "121",
    "type": "reading",
    "question": "The word \"fueled\" in line 1 is closest in meaning to",
    "text": "<b>Questions 120-130</b>\r\n\r\nThe Sun today is a yellow dwarf star. It is fueled by\r\nthermonuclear reactions near its center that convert hydrogen to\r\nhelium. The Sun has existed in its present state for about 4\r\nbillion, 600 million years and is thousands of times larger than\r\n<span style=\"color:red\">(5)</span> the Earth.\r\n\r\nBy studying other stars, astronomers can predict what the rest\r\nof the Sun's life will be like. About 5 billion years from now,\r\nthe core of the Sun will shrink and become hotter. The surface\r\ntemperature will fall. The higher temperature of the center will\r\n<span style=\"color:red\">(10)</span> increase the rate of thermonuclear reactions. The outer regions of\r\nthe Sun will expand approximately 35 million miles, about the\r\ndistance to Mercury, which is the closest planet to the Sun. The\r\nSun will then be a red giant star. Temperatures on the Earth will\r\nbecome too hot for life to exist.\r\n\r\n<span style=\"color:red\">(15)</span> Once the Sun has used up its thermonuclear energy as a red giant,\r\nit will begin to shrink. After it shrinks to the size of the Earth,\r\nit will become a white dwarf star. The Sun may throw off huge\r\namounts of gases in violent eruptions called nova explosions as it\r\nchanges from a red giant to a white dwarf.\r\n\r\n<span style=\"color:red\">(20)</span> After billions of years as a white dwarf, the Sun will have used\r\nup all its fuel and will have lost its heat. Such a star is called\r\na black dwarf. After the Sun has become a black dwarf, the Earth\r\nwill be dark and cold. If any atmosphere remains there, it will\r\nhave frozen onto the Earth's surface.",
    "ans_a": "powered",
    "ans_b": "bombarded",
    "ans_c": "created",
    "ans_d": "propelled",
    "answer": "A"
  },
  {
    "number": "122",
    "type": "reading",
    "question": "The word \"state\" in line 3 is closest in meaning to",
    "text": "<b>Questions 120-130</b>\r\n\r\nThe Sun today is a yellow dwarf star. It is fueled by\r\nthermonuclear reactions near its center that convert hydrogen to\r\nhelium. The Sun has existed in its present state for about 4\r\nbillion, 600 million years and is thousands of times larger than\r\n<span style=\"color:red\">(5)</span> the Earth.\r\n\r\nBy studying other stars, astronomers can predict what the rest\r\nof the Sun's life will be like. About 5 billion years from now,\r\nthe core of the Sun will shrink and become hotter. The surface\r\ntemperature will fall. The higher temperature of the center will\r\n<span style=\"color:red\">(10)</span> increase the rate of thermonuclear reactions. The outer regions of\r\nthe Sun will expand approximately 35 million miles, about the\r\ndistance to Mercury, which is the closest planet to the Sun. The\r\nSun will then be a red giant star. Temperatures on the Earth will\r\nbecome too hot for life to exist.\r\n\r\n<span style=\"color:red\">(15)</span> Once the Sun has used up its thermonuclear energy as a red giant,\r\nit will begin to shrink. After it shrinks to the size of the Earth,\r\nit will become a white dwarf star. The Sun may throw off huge\r\namounts of gases in violent eruptions called nova explosions as it\r\nchanges from a red giant to a white dwarf.\r\n\r\n<span style=\"color:red\">(20)</span> After billions of years as a white dwarf, the Sun will have used\r\nup all its fuel and will have lost its heat. Such a star is called\r\na black dwarf. After the Sun has become a black dwarf, the Earth\r\nwill be dark and cold. If any atmosphere remains there, it will\r\nhave frozen onto the Earth's surface.",
    "ans_a": "shape",
    "ans_b": "condition",
    "ans_c": "location",
    "ans_d": "size",
    "answer": "B"
  },
  {
    "number": "123",
    "type": "reading",
    "question": "It can be inferred from the passage that the Sun",
    "text": "<b>Questions 120-130</b>\r\n\r\nThe Sun today is a yellow dwarf star. It is fueled by\r\nthermonuclear reactions near its center that convert hydrogen to\r\nhelium. The Sun has existed in its present state for about 4\r\nbillion, 600 million years and is thousands of times larger than\r\n<span style=\"color:red\">(5)</span> the Earth.\r\n\r\nBy studying other stars, astronomers can predict what the rest\r\nof the Sun's life will be like. About 5 billion years from now,\r\nthe core of the Sun will shrink and become hotter. The surface\r\ntemperature will fall. The higher temperature of the center will\r\n<span style=\"color:red\">(10)</span> increase the rate of thermonuclear reactions. The outer regions of\r\nthe Sun will expand approximately 35 million miles, about the\r\ndistance to Mercury, which is the closest planet to the Sun. The\r\nSun will then be a red giant star. Temperatures on the Earth will\r\nbecome too hot for life to exist.\r\n\r\n<span style=\"color:red\">(15)</span> Once the Sun has used up its thermonuclear energy as a red giant,\r\nit will begin to shrink. After it shrinks to the size of the Earth,\r\nit will become a white dwarf star. The Sun may throw off huge\r\namounts of gases in violent eruptions called nova explosions as it\r\nchanges from a red giant to a white dwarf.\r\n\r\n<span style=\"color:red\">(20)</span> After billions of years as a white dwarf, the Sun will have used\r\nup all its fuel and will have lost its heat. Such a star is called\r\na black dwarf. After the Sun has become a black dwarf, the Earth\r\nwill be dark and cold. If any atmosphere remains there, it will\r\nhave frozen onto the Earth's surface.",
    "ans_a": "is approximately halfway through its life as a yellow dwarf",
    "ans_b": "has been in existence for 10 billion years",
    "ans_c": "is rapidly changing in size and brightness",
    "ans_d": "will continue as a yellow dwarf for another 10 billion years",
    "answer": "A"
  },
  {
    "number": "124",
    "type": "reading",
    "question": "What will probably be the first stage of change as the Sun becomes a red giant?",
    "text": "<b>Questions 120-130</b>\r\n\r\nThe Sun today is a yellow dwarf star. It is fueled by\r\nthermonuclear reactions near its center that convert hydrogen to\r\nhelium. The Sun has existed in its present state for about 4\r\nbillion, 600 million years and is thousands of times larger than\r\n<span style=\"color:red\">(5)</span> the Earth.\r\n\r\nBy studying other stars, astronomers can predict what the rest\r\nof the Sun's life will be like. About 5 billion years from now,\r\nthe core of the Sun will shrink and become hotter. The surface\r\ntemperature will fall. The higher temperature of the center will\r\n<span style=\"color:red\">(10)</span> increase the rate of thermonuclear reactions. The outer regions of\r\nthe Sun will expand approximately 35 million miles, about the\r\ndistance to Mercury, which is the closest planet to the Sun. The\r\nSun will then be a red giant star. Temperatures on the Earth will\r\nbecome too hot for life to exist.\r\n\r\n<span style=\"color:red\">(15)</span> Once the Sun has used up its thermonuclear energy as a red giant,\r\nit will begin to shrink. After it shrinks to the size of the Earth,\r\nit will become a white dwarf star. The Sun may throw off huge\r\namounts of gases in violent eruptions called nova explosions as it\r\nchanges from a red giant to a white dwarf.\r\n\r\n<span style=\"color:red\">(20)</span> After billions of years as a white dwarf, the Sun will have used\r\nup all its fuel and will have lost its heat. Such a star is called\r\na black dwarf. After the Sun has become a black dwarf, the Earth\r\nwill be dark and cold. If any atmosphere remains there, it will\r\nhave frozen onto the Earth's surface.",
    "ans_a": "Its core will cool off and use less fuel.",
    "ans_b": "Its surface will become hotter and shrink.",
    "ans_c": "It will throw off huge amounts of gases.",
    "ans_d": "Its center will grow smaller and hotter.",
    "answer": "D"
  },
  {
    "number": "125",
    "type": "reading",
    "question": "When the Sun becomes a red giant, what will conditions be like on Earth?",
    "text": "<b>Questions 120-130</b>\r\n\r\nThe Sun today is a yellow dwarf star. It is fueled by\r\nthermonuclear reactions near its center that convert hydrogen to\r\nhelium. The Sun has existed in its present state for about 4\r\nbillion, 600 million years and is thousands of times larger than\r\n<span style=\"color:red\">(5)</span> the Earth.\r\n\r\nBy studying other stars, astronomers can predict what the rest\r\nof the Sun's life will be like. About 5 billion years from now,\r\nthe core of the Sun will shrink and become hotter. The surface\r\ntemperature will fall. The higher temperature of the center will\r\n<span style=\"color:red\">(10)</span> increase the rate of thermonuclear reactions. The outer regions of\r\nthe Sun will expand approximately 35 million miles, about the\r\ndistance to Mercury, which is the closest planet to the Sun. The\r\nSun will then be a red giant star. Temperatures on the Earth will\r\nbecome too hot for life to exist.\r\n\r\n<span style=\"color:red\">(15)</span> Once the Sun has used up its thermonuclear energy as a red giant,\r\nit will begin to shrink. After it shrinks to the size of the Earth,\r\nit will become a white dwarf star. The Sun may throw off huge\r\namounts of gases in violent eruptions called nova explosions as it\r\nchanges from a red giant to a white dwarf.\r\n\r\n<span style=\"color:red\">(20)</span> After billions of years as a white dwarf, the Sun will have used\r\nup all its fuel and will have lost its heat. Such a star is called\r\na black dwarf. After the Sun has become a black dwarf, the Earth\r\nwill be dark and cold. If any atmosphere remains there, it will\r\nhave frozen onto the Earth's surface.",
    "ans_a": "Its atmosphere will freeze and become solid.",
    "ans_b": "It will be enveloped in the expanding surface of the Sun.",
    "ans_c": "It will become too hot for life to exist.",
    "ans_d": "It will be nearly destroyed by nova explosions.",
    "answer": "C"
  },
  {
    "number": "126",
    "type": "reading",
    "question": "As a white dwarf, the Sun will be",
    "text": "<b>Questions 120-130</b>\r\n\r\nThe Sun today is a yellow dwarf star. It is fueled by\r\nthermonuclear reactions near its center that convert hydrogen to\r\nhelium. The Sun has existed in its present state for about 4\r\nbillion, 600 million years and is thousands of times larger than\r\n<span style=\"color:red\">(5)</span> the Earth.\r\n\r\nBy studying other stars, astronomers can predict what the rest\r\nof the Sun's life will be like. About 5 billion years from now,\r\nthe core of the Sun will shrink and become hotter. The surface\r\ntemperature will fall. The higher temperature of the center will\r\n<span style=\"color:red\">(10)</span> increase the rate of thermonuclear reactions. The outer regions of\r\nthe Sun will expand approximately 35 million miles, about the\r\ndistance to Mercury, which is the closest planet to the Sun. The\r\nSun will then be a red giant star. Temperatures on the Earth will\r\nbecome too hot for life to exist.\r\n\r\n<span style=\"color:red\">(15)</span> Once the Sun has used up its thermonuclear energy as a red giant,\r\nit will begin to shrink. After it shrinks to the size of the Earth,\r\nit will become a white dwarf star. The Sun may throw off huge\r\namounts of gases in violent eruptions called nova explosions as it\r\nchanges from a red giant to a white dwarf.\r\n\r\n<span style=\"color:red\">(20)</span> After billions of years as a white dwarf, the Sun will have used\r\nup all its fuel and will have lost its heat. Such a star is called\r\na black dwarf. After the Sun has become a black dwarf, the Earth\r\nwill be dark and cold. If any atmosphere remains there, it will\r\nhave frozen onto the Earth's surface.",
    "ans_a": "the same size as the planet Mercury",
    "ans_b": "thousands of times smaller than it is today",
    "ans_c": "around 35 million miles in diameter",
    "ans_d": "cold and dark",
    "answer": "B"
  },
  {
    "number": "127",
    "type": "reading",
    "question": "According to the passage, which of the following best describes the sequence of stages that the Sun will probably pass through?",
    "text": "<b>Questions 120-130</b>\r\n\r\nThe Sun today is a yellow dwarf star. It is fueled by\r\nthermonuclear reactions near its center that convert hydrogen to\r\nhelium. The Sun has existed in its present state for about 4\r\nbillion, 600 million years and is thousands of times larger than\r\n<span style=\"color:red\">(5)</span> the Earth.\r\n\r\nBy studying other stars, astronomers can predict what the rest\r\nof the Sun's life will be like. About 5 billion years from now,\r\nthe core of the Sun will shrink and become hotter. The surface\r\ntemperature will fall. The higher temperature of the center will\r\n<span style=\"color:red\">(10)</span> increase the rate of thermonuclear reactions. The outer regions of\r\nthe Sun will expand approximately 35 million miles, about the\r\ndistance to Mercury, which is the closest planet to the Sun. The\r\nSun will then be a red giant star. Temperatures on the Earth will\r\nbecome too hot for life to exist.\r\n\r\n<span style=\"color:red\">(15)</span> Once the Sun has used up its thermonuclear energy as a red giant,\r\nit will begin to shrink. After it shrinks to the size of the Earth,\r\nit will become a white dwarf star. The Sun may throw off huge\r\namounts of gases in violent eruptions called nova explosions as it\r\nchanges from a red giant to a white dwarf.\r\n\r\n<span style=\"color:red\">(20)</span> After billions of years as a white dwarf, the Sun will have used\r\nup all its fuel and will have lost its heat. Such a star is called\r\na black dwarf. After the Sun has become a black dwarf, the Earth\r\nwill be dark and cold. If any atmosphere remains there, it will\r\nhave frozen onto the Earth's surface.",
    "ans_a": "Yellow dwarf, white dwarf, red giant, black giant",
    "ans_b": "Red giant, white dwarf, red dwarf, nova explosion",
    "ans_c": "Yellow dwarf, red giant, white dwarf, black dwarf",
    "ans_d": "White dwarf, red giant, black dwarf, yellow dwarf",
    "answer": "C"
  },
  {
    "number": "128",
    "type": "reading",
    "question": "The phrase \"throw off\" in line 17 is closest in meaning to",
    "text": "<b>Questions 120-130</b>\r\n\r\nThe Sun today is a yellow dwarf star. It is fueled by\r\nthermonuclear reactions near its center that convert hydrogen to\r\nhelium. The Sun has existed in its present state for about 4\r\nbillion, 600 million years and is thousands of times larger than\r\n<span style=\"color:red\">(5)</span> the Earth.\r\n\r\nBy studying other stars, astronomers can predict what the rest\r\nof the Sun's life will be like. About 5 billion years from now,\r\nthe core of the Sun will shrink and become hotter. The surface\r\ntemperature will fall. The higher temperature of the center will\r\n<span style=\"color:red\">(10)</span> increase the rate of thermonuclear reactions. The outer regions of\r\nthe Sun will expand approximately 35 million miles, about the\r\ndistance to Mercury, which is the closest planet to the Sun. The\r\nSun will then be a red giant star. Temperatures on the Earth will\r\nbecome too hot for life to exist.\r\n\r\n<span style=\"color:red\">(15)</span> Once the Sun has used up its thermonuclear energy as a red giant,\r\nit will begin to shrink. After it shrinks to the size of the Earth,\r\nit will become a white dwarf star. The Sun may throw off huge\r\namounts of gases in violent eruptions called nova explosions as it\r\nchanges from a red giant to a white dwarf.\r\n\r\n<span style=\"color:red\">(20)</span> After billions of years as a white dwarf, the Sun will have used\r\nup all its fuel and will have lost its heat. Such a star is called\r\na black dwarf. After the Sun has become a black dwarf, the Earth\r\nwill be dark and cold. If any atmosphere remains there, it will\r\nhave frozen onto the Earth's surface.",
    "ans_a": "eject",
    "ans_b": "burn up",
    "ans_c": "convert",
    "ans_d": "let in",
    "answer": "A"
  },
  {
    "number": "129",
    "type": "reading",
    "question": "The word \"there\" in line 23 refers to",
    "text": "<b>Questions 120-130</b>\r\n\r\nThe Sun today is a yellow dwarf star. It is fueled by\r\nthermonuclear reactions near its center that convert hydrogen to\r\nhelium. The Sun has existed in its present state for about 4\r\nbillion, 600 million years and is thousands of times larger than\r\n<span style=\"color:red\">(5)</span> the Earth.\r\n\r\nBy studying other stars, astronomers can predict what the rest\r\nof the Sun's life will be like. About 5 billion years from now,\r\nthe core of the Sun will shrink and become hotter. The surface\r\ntemperature will fall. The higher temperature of the center will\r\n<span style=\"color:red\">(10)</span> increase the rate of thermonuclear reactions. The outer regions of\r\nthe Sun will expand approximately 35 million miles, about the\r\ndistance to Mercury, which is the closest planet to the Sun. The\r\nSun will then be a red giant star. Temperatures on the Earth will\r\nbecome too hot for life to exist.\r\n\r\n<span style=\"color:red\">(15)</span> Once the Sun has used up its thermonuclear energy as a red giant,\r\nit will begin to shrink. After it shrinks to the size of the Earth,\r\nit will become a white dwarf star. The Sun may throw off huge\r\namounts of gases in violent eruptions called nova explosions as it\r\nchanges from a red giant to a white dwarf.\r\n\r\n<span style=\"color:red\">(20)</span> After billions of years as a white dwarf, the Sun will have used\r\nup all its fuel and will have lost its heat. Such a star is called\r\na black dwarf. After the Sun has become a black dwarf, the Earth\r\nwill be dark and cold. If any atmosphere remains there, it will\r\nhave frozen onto the Earth's surface.",
    "ans_a": "our own planet",
    "ans_b": "the outer surface of the Sun",
    "ans_c": "the core of a black dwarf",
    "ans_d": "the planet Mercury",
    "answer": "A"
  },
  {
    "number": "130",
    "type": "reading",
    "question": "Which of the following best describes the tone of the passage?",
    "text": "<b>Questions 120-130</b>\r\n\r\nThe Sun today is a yellow dwarf star. It is fueled by\r\nthermonuclear reactions near its center that convert hydrogen to\r\nhelium. The Sun has existed in its present state for about 4\r\nbillion, 600 million years and is thousands of times larger than\r\n<span style=\"color:red\">(5)</span> the Earth.\r\n\r\nBy studying other stars, astronomers can predict what the rest\r\nof the Sun's life will be like. About 5 billion years from now,\r\nthe core of the Sun will shrink and become hotter. The surface\r\ntemperature will fall. The higher temperature of the center will\r\n<span style=\"color:red\">(10)</span> increase the rate of thermonuclear reactions. The outer regions of\r\nthe Sun will expand approximately 35 million miles, about the\r\ndistance to Mercury, which is the closest planet to the Sun. The\r\nSun will then be a red giant star. Temperatures on the Earth will\r\nbecome too hot for life to exist.\r\n\r\n<span style=\"color:red\">(15)</span> Once the Sun has used up its thermonuclear energy as a red giant,\r\nit will begin to shrink. After it shrinks to the size of the Earth,\r\nit will become a white dwarf star. The Sun may throw off huge\r\namounts of gases in violent eruptions called nova explosions as it\r\nchanges from a red giant to a white dwarf.\r\n\r\n<span style=\"color:red\">(20)</span> After billions of years as a white dwarf, the Sun will have used\r\nup all its fuel and will have lost its heat. Such a star is called\r\na black dwarf. After the Sun has become a black dwarf, the Earth\r\nwill be dark and cold. If any atmosphere remains there, it will\r\nhave frozen onto the Earth's surface.",
    "ans_a": "Alarmed",
    "ans_b": "Pessimistic",
    "ans_c": "Comic",
    "ans_d": "Objective",
    "answer": "D"
  },
  {
    "number": "131",
    "type": "reading",
    "question": "The main idea of this passage is that",
    "text": "<b>Questions 131-140</b>\r\n\r\nThe final battle of the War of 1812 was the Battle of New Orleans. This battle gave a clear \r\ndemonstration of the need for effective communication during wartime; it also showed the disastrous \r\nresults that can come to pass when communication is inadequate.\r\nThe War of 1812 was fought between Great Britain and the very young country of the United\r\n<span style=\"color:red\">(5)</span> States only a relatively few years after the United States had won its independence from Britain. The \r\nUnited States had declared war against Britain in June of 1812, mostly because of interference with \r\nU.S. shipping by the British and because of the shanghaiing of U.S. sailors for enforced service on \r\nBritish vessels. The war lasted for a little more than two years, when a peace treaty was signed at \r\nGhent, in Belgium, on the 24th of December, 1814.\r\n\r\n<span style=\"color:red\">(10)</span> Unfortunately, the news that the Treaty of Ghent had been signed and that the war was officially\r\nover was not communicated in a timely manner over the wide distance to where the war was being \r\ncontested. Negotiations for the treaty and the actual signing of the treaty took place in Europe, and \r\nnews of the treaty had to be carried across the Atlantic to the war front by ship. A totally unnecessary \r\nloss of life was incurred as a result of the amount of time that it took to inform the combatants of the \r\n<span style=\"color:red\">(15)</span> treaty. \r\n\r\nEarly in January of 1815, some two weeks after the peace treaty had been signed, British troops \r\nin the southern part of the United States were unaware that the war had officially ended. Over 5,000 \r\nBritish troops attacked U.S. troops. During the ensuing battle, known as the Battle of New Orleans, \r\nthe British suffered a huge number of casualties, around 2,000, and the Americans lost 71, all in a \r\n<span style=\"color:red\">(20)</span> battle fought only because news of the peace treaty that had already been signed in Ghent had not yet \r\nreached the battlefield.",
    "ans_a": "the War of Independence was unnecessary",
    "ans_b": "the War of 1812 was unnecessary ",
    "ans_c": "the Treaty of Ghent was unnecessary",
    "ans_d": "the Battle of New Orleans was unnecessary",
    "answer": "D"
  },
  {
    "number": "132",
    "type": "reading",
    "question": "The pronoun \"it\" in line 2 refers to",
    "text": "<b>Questions 131-140</b>\r\n\r\nThe final battle of the War of 1812 was the Battle of New Orleans. This battle gave a clear \r\ndemonstration of the need for effective communication during wartime; it also showed the disastrous \r\nresults that can come to pass when communication is inadequate.\r\nThe War of 1812 was fought between Great Britain and the very young country of the United\r\n<span style=\"color:red\">(5)</span> States only a relatively few years after the United States had won its independence from Britain. The \r\nUnited States had declared war against Britain in June of 1812, mostly because of interference with \r\nU.S. shipping by the British and because of the shanghaiing of U.S. sailors for enforced service on \r\nBritish vessels. The war lasted for a little more than two years, when a peace treaty was signed at \r\nGhent, in Belgium, on the 24th of December, 1814.\r\n\r\n<span style=\"color:red\">(10)</span> Unfortunately, the news that the Treaty of Ghent had been signed and that the war was officially\r\nover was not communicated in a timely manner over the wide distance to where the war was being \r\ncontested. Negotiations for the treaty and the actual signing of the treaty took place in Europe, and \r\nnews of the treaty had to be carried across the Atlantic to the war front by ship. A totally unnecessary \r\nloss of life was incurred as a result of the amount of time that it took to inform the combatants of the \r\n<span style=\"color:red\">(15)</span> treaty. \r\n\r\nEarly in January of 1815, some two weeks after the peace treaty had been signed, British troops \r\nin the southern part of the United States were unaware that the war had officially ended. Over 5,000 \r\nBritish troops attacked U.S. troops. During the ensuing battle, known as the Battle of New Orleans, \r\nthe British suffered a huge number of casualties, around 2,000, and the Americans lost 71, all in a \r\n<span style=\"color:red\">(20)</span> battle fought only because news of the peace treaty that had already been signed in Ghent had not yet \r\nreached the battlefield.",
    "ans_a": "battle",
    "ans_b": "demonstration ",
    "ans_c": "communication",
    "ans_d": "wartime",
    "answer": "A"
  },
  {
    "number": "133",
    "type": "reading",
    "question": "The expression \"come to pass\" in line 3 could best be replaced by",
    "text": "<b>Questions 131-140</b>\r\n\r\nThe final battle of the War of 1812 was the Battle of New Orleans. This battle gave a clear \r\ndemonstration of the need for effective communication during wartime; it also showed the disastrous \r\nresults that can come to pass when communication is inadequate.\r\nThe War of 1812 was fought between Great Britain and the very young country of the United\r\n<span style=\"color:red\">(5)</span> States only a relatively few years after the United States had won its independence from Britain. The \r\nUnited States had declared war against Britain in June of 1812, mostly because of interference with \r\nU.S. shipping by the British and because of the shanghaiing of U.S. sailors for enforced service on \r\nBritish vessels. The war lasted for a little more than two years, when a peace treaty was signed at \r\nGhent, in Belgium, on the 24th of December, 1814.\r\n\r\n<span style=\"color:red\">(10)</span> Unfortunately, the news that the Treaty of Ghent had been signed and that the war was officially\r\nover was not communicated in a timely manner over the wide distance to where the war was being \r\ncontested. Negotiations for the treaty and the actual signing of the treaty took place in Europe, and \r\nnews of the treaty had to be carried across the Atlantic to the war front by ship. A totally unnecessary \r\nloss of life was incurred as a result of the amount of time that it took to inform the combatants of the \r\n<span style=\"color:red\">(15)</span> treaty. \r\n\r\nEarly in January of 1815, some two weeks after the peace treaty had been signed, British troops \r\nin the southern part of the United States were unaware that the war had officially ended. Over 5,000 \r\nBritish troops attacked U.S. troops. During the ensuing battle, known as the Battle of New Orleans, \r\nthe British suffered a huge number of casualties, around 2,000, and the Americans lost 71, all in a \r\n<span style=\"color:red\">(20)</span> battle fought only because news of the peace treaty that had already been signed in Ghent had not yet \r\nreached the battlefield.",
    "ans_a": "happen",
    "ans_b": "overthrow",
    "ans_c": "self-destruct",
    "ans_d": "circumvent",
    "answer": "A"
  },
  {
    "number": "134",
    "type": "reading",
    "question": "According to the passage, when did the United States win its independence from Britain?",
    "text": "<b>Questions 131-140</b>\r\n\r\nThe final battle of the War of 1812 was the Battle of New Orleans. This battle gave a clear \r\ndemonstration of the need for effective communication during wartime; it also showed the disastrous \r\nresults that can come to pass when communication is inadequate.\r\nThe War of 1812 was fought between Great Britain and the very young country of the United\r\n<span style=\"color:red\">(5)</span> States only a relatively few years after the United States had won its independence from Britain. The \r\nUnited States had declared war against Britain in June of 1812, mostly because of interference with \r\nU.S. shipping by the British and because of the shanghaiing of U.S. sailors for enforced service on \r\nBritish vessels. The war lasted for a little more than two years, when a peace treaty was signed at \r\nGhent, in Belgium, on the 24th of December, 1814.\r\n\r\n<span style=\"color:red\">(10)</span> Unfortunately, the news that the Treaty of Ghent had been signed and that the war was officially\r\nover was not communicated in a timely manner over the wide distance to where the war was being \r\ncontested. Negotiations for the treaty and the actual signing of the treaty took place in Europe, and \r\nnews of the treaty had to be carried across the Atlantic to the war front by ship. A totally unnecessary \r\nloss of life was incurred as a result of the amount of time that it took to inform the combatants of the \r\n<span style=\"color:red\">(15)</span> treaty. \r\n\r\nEarly in January of 1815, some two weeks after the peace treaty had been signed, British troops \r\nin the southern part of the United States were unaware that the war had officially ended. Over 5,000 \r\nBritish troops attacked U.S. troops. During the ensuing battle, known as the Battle of New Orleans, \r\nthe British suffered a huge number of casualties, around 2,000, and the Americans lost 71, all in a \r\n<span style=\"color:red\">(20)</span> battle fought only because news of the peace treaty that had already been signed in Ghent had not yet \r\nreached the battlefield.",
    "ans_a": "Shortly before the War of 1812",
    "ans_b": "During the War of 1812 ",
    "ans_c": "Just after the War of 1812",
    "ans_d": "Long after the Wr of 1812",
    "answer": "A"
  },
  {
    "number": "135",
    "type": "reading",
    "question": "According to the passage, some U.S. sailors were",
    "text": "<b>Questions 131-140</b>\r\n\r\nThe final battle of the War of 1812 was the Battle of New Orleans. This battle gave a clear \r\ndemonstration of the need for effective communication during wartime; it also showed the disastrous \r\nresults that can come to pass when communication is inadequate.\r\nThe War of 1812 was fought between Great Britain and the very young country of the United\r\n<span style=\"color:red\">(5)</span> States only a relatively few years after the United States had won its independence from Britain. The \r\nUnited States had declared war against Britain in June of 1812, mostly because of interference with \r\nU.S. shipping by the British and because of the shanghaiing of U.S. sailors for enforced service on \r\nBritish vessels. The war lasted for a little more than two years, when a peace treaty was signed at \r\nGhent, in Belgium, on the 24th of December, 1814.\r\n\r\n<span style=\"color:red\">(10)</span> Unfortunately, the news that the Treaty of Ghent had been signed and that the war was officially\r\nover was not communicated in a timely manner over the wide distance to where the war was being \r\ncontested. Negotiations for the treaty and the actual signing of the treaty took place in Europe, and \r\nnews of the treaty had to be carried across the Atlantic to the war front by ship. A totally unnecessary \r\nloss of life was incurred as a result of the amount of time that it took to inform the combatants of the \r\n<span style=\"color:red\">(15)</span> treaty. \r\n\r\nEarly in January of 1815, some two weeks after the peace treaty had been signed, British troops \r\nin the southern part of the United States were unaware that the war had officially ended. Over 5,000 \r\nBritish troops attacked U.S. troops. During the ensuing battle, known as the Battle of New Orleans, \r\nthe British suffered a huge number of casualties, around 2,000, and the Americans lost 71, all in a \r\n<span style=\"color:red\">(20)</span> battle fought only because news of the peace treaty that had already been signed in Ghent had not yet \r\nreached the battlefield.",
    "ans_a": "taken forcibly to Shanghai",
    "ans_b": "made to go to Ghent",
    "ans_c": "forced to work on British ships ",
    "ans_d": "responsible for causing the War of 1812",
    "answer": "C"
  },
  {
    "number": "136",
    "type": "reading",
    "question": "It is NOT stated in the passage that Ghent was",
    "text": "<b>Questions 131-140</b>\r\n\r\nThe final battle of the War of 1812 was the Battle of New Orleans. This battle gave a clear \r\ndemonstration of the need for effective communication during wartime; it also showed the disastrous \r\nresults that can come to pass when communication is inadequate.\r\nThe War of 1812 was fought between Great Britain and the very young country of the United\r\n<span style=\"color:red\">(5)</span> States only a relatively few years after the United States had won its independence from Britain. The \r\nUnited States had declared war against Britain in June of 1812, mostly because of interference with \r\nU.S. shipping by the British and because of the shanghaiing of U.S. sailors for enforced service on \r\nBritish vessels. The war lasted for a little more than two years, when a peace treaty was signed at \r\nGhent, in Belgium, on the 24th of December, 1814.\r\n\r\n<span style=\"color:red\">(10)</span> Unfortunately, the news that the Treaty of Ghent had been signed and that the war was officially\r\nover was not communicated in a timely manner over the wide distance to where the war was being \r\ncontested. Negotiations for the treaty and the actual signing of the treaty took place in Europe, and \r\nnews of the treaty had to be carried across the Atlantic to the war front by ship. A totally unnecessary \r\nloss of life was incurred as a result of the amount of time that it took to inform the combatants of the \r\n<span style=\"color:red\">(15)</span> treaty. \r\n\r\nEarly in January of 1815, some two weeks after the peace treaty had been signed, British troops \r\nin the southern part of the United States were unaware that the war had officially ended. Over 5,000 \r\nBritish troops attacked U.S. troops. During the ensuing battle, known as the Battle of New Orleans, \r\nthe British suffered a huge number of casualties, around 2,000, and the Americans lost 71, all in a \r\n<span style=\"color:red\">(20)</span> battle fought only because news of the peace treaty that had already been signed in Ghent had not yet \r\nreached the battlefield.",
    "ans_a": "where negotiations took place ",
    "ans_b": "the site of the final battle",
    "ans_c": "where the treaty was signed ",
    "ans_d": "far from the battlefield",
    "answer": "B"
  },
  {
    "number": "137",
    "type": "reading",
    "question": "The word \"contested\" in line 12 is closest in meaning to",
    "text": "<b>Questions 131-140</b>\r\n\r\nThe final battle of the War of 1812 was the Battle of New Orleans. This battle gave a clear \r\ndemonstration of the need for effective communication during wartime; it also showed the disastrous \r\nresults that can come to pass when communication is inadequate.\r\nThe War of 1812 was fought between Great Britain and the very young country of the United\r\n<span style=\"color:red\">(5)</span> States only a relatively few years after the United States had won its independence from Britain. The \r\nUnited States had declared war against Britain in June of 1812, mostly because of interference with \r\nU.S. shipping by the British and because of the shanghaiing of U.S. sailors for enforced service on \r\nBritish vessels. The war lasted for a little more than two years, when a peace treaty was signed at \r\nGhent, in Belgium, on the 24th of December, 1814.\r\n\r\n<span style=\"color:red\">(10)</span> Unfortunately, the news that the Treaty of Ghent had been signed and that the war was officially\r\nover was not communicated in a timely manner over the wide distance to where the war was being \r\ncontested. Negotiations for the treaty and the actual signing of the treaty took place in Europe, and \r\nnews of the treaty had to be carried across the Atlantic to the war front by ship. A totally unnecessary \r\nloss of life was incurred as a result of the amount of time that it took to inform the combatants of the \r\n<span style=\"color:red\">(15)</span> treaty. \r\n\r\nEarly in January of 1815, some two weeks after the peace treaty had been signed, British troops \r\nin the southern part of the United States were unaware that the war had officially ended. Over 5,000 \r\nBritish troops attacked U.S. troops. During the ensuing battle, known as the Battle of New Orleans, \r\nthe British suffered a huge number of casualties, around 2,000, and the Americans lost 71, all in a \r\n<span style=\"color:red\">(20)</span> battle fought only because news of the peace treaty that had already been signed in Ghent had not yet \r\nreached the battlefield.",
    "ans_a": "played",
    "ans_b": "fought",
    "ans_c": "discussed",
    "ans_d": "examined",
    "answer": "B"
  },
  {
    "number": "138",
    "type": "reading",
    "question": "It can be determined from the passage that, of the following dates, the Battle of New Orleans was most probably fought",
    "text": "<b>Questions 131-140</b>\r\n\r\nThe final battle of the War of 1812 was the Battle of New Orleans. This battle gave a clear \r\ndemonstration of the need for effective communication during wartime; it also showed the disastrous \r\nresults that can come to pass when communication is inadequate.\r\nThe War of 1812 was fought between Great Britain and the very young country of the United\r\n<span style=\"color:red\">(5)</span> States only a relatively few years after the United States had won its independence from Britain. The \r\nUnited States had declared war against Britain in June of 1812, mostly because of interference with \r\nU.S. shipping by the British and because of the shanghaiing of U.S. sailors for enforced service on \r\nBritish vessels. The war lasted for a little more than two years, when a peace treaty was signed at \r\nGhent, in Belgium, on the 24th of December, 1814.\r\n\r\n<span style=\"color:red\">(10)</span> Unfortunately, the news that the Treaty of Ghent had been signed and that the war was officially\r\nover was not communicated in a timely manner over the wide distance to where the war was being \r\ncontested. Negotiations for the treaty and the actual signing of the treaty took place in Europe, and \r\nnews of the treaty had to be carried across the Atlantic to the war front by ship. A totally unnecessary \r\nloss of life was incurred as a result of the amount of time that it took to inform the combatants of the \r\n<span style=\"color:red\">(15)</span> treaty. \r\n\r\nEarly in January of 1815, some two weeks after the peace treaty had been signed, British troops \r\nin the southern part of the United States were unaware that the war had officially ended. Over 5,000 \r\nBritish troops attacked U.S. troops. During the ensuing battle, known as the Battle of New Orleans, \r\nthe British suffered a huge number of casualties, around 2,000, and the Americans lost 71, all in a \r\n<span style=\"color:red\">(20)</span> battle fought only because news of the peace treaty that had already been signed in Ghent had not yet \r\nreached the battlefield.",
    "ans_a": "on December 10, 1814",
    "ans_b": "on December 24, 1814",
    "ans_c": "on January 1, 1815",
    "ans_d": "on January 8, 1815",
    "answer": "D"
  },
  {
    "number": "139",
    "type": "reading",
    "question": "Where in the passage does the author indicate when the War of 1812 officially ended?",
    "text": "<b>Questions 131-140</b>\r\n\r\nThe final battle of the War of 1812 was the Battle of New Orleans. This battle gave a clear \r\ndemonstration of the need for effective communication during wartime; it also showed the disastrous \r\nresults that can come to pass when communication is inadequate.\r\nThe War of 1812 was fought between Great Britain and the very young country of the United\r\n<span style=\"color:red\">(5)</span> States only a relatively few years after the United States had won its independence from Britain. The \r\nUnited States had declared war against Britain in June of 1812, mostly because of interference with \r\nU.S. shipping by the British and because of the shanghaiing of U.S. sailors for enforced service on \r\nBritish vessels. The war lasted for a little more than two years, when a peace treaty was signed at \r\nGhent, in Belgium, on the 24th of December, 1814.\r\n\r\n<span style=\"color:red\">(10)</span> Unfortunately, the news that the Treaty of Ghent had been signed and that the war was officially\r\nover was not communicated in a timely manner over the wide distance to where the war was being \r\ncontested. Negotiations for the treaty and the actual signing of the treaty took place in Europe, and \r\nnews of the treaty had to be carried across the Atlantic to the war front by ship. A totally unnecessary \r\nloss of life was incurred as a result of the amount of time that it took to inform the combatants of the \r\n<span style=\"color:red\">(15)</span> treaty. \r\n\r\nEarly in January of 1815, some two weeks after the peace treaty had been signed, British troops \r\nin the southern part of the United States were unaware that the war had officially ended. Over 5,000 \r\nBritish troops attacked U.S. troops. During the ensuing battle, known as the Battle of New Orleans, \r\nthe British suffered a huge number of casualties, around 2,000, and the Americans lost 71, all in a \r\n<span style=\"color:red\">(20)</span> battle fought only because news of the peace treaty that had already been signed in Ghent had not yet \r\nreached the battlefield.",
    "ans_a": "Lines 1-3",
    "ans_b": "Lines 4-5",
    "ans_c": "Lines 8-9",
    "ans_d": "Lines 10-12",
    "answer": "C"
  },
  {
    "number": "140",
    "type": "reading",
    "question": "Which paragraph describes the battle that took place after the signing of the treaty?",
    "text": "<b>Questions 131-140</b>\r\n\r\nThe final battle of the War of 1812 was the Battle of New Orleans. This battle gave a clear \r\ndemonstration of the need for effective communication during wartime; it also showed the disastrous \r\nresults that can come to pass when communication is inadequate.\r\nThe War of 1812 was fought between Great Britain and the very young country of the United\r\n<span style=\"color:red\">(5)</span> States only a relatively few years after the United States had won its independence from Britain. The \r\nUnited States had declared war against Britain in June of 1812, mostly because of interference with \r\nU.S. shipping by the British and because of the shanghaiing of U.S. sailors for enforced service on \r\nBritish vessels. The war lasted for a little more than two years, when a peace treaty was signed at \r\nGhent, in Belgium, on the 24th of December, 1814.\r\n\r\n<span style=\"color:red\">(10)</span> Unfortunately, the news that the Treaty of Ghent had been signed and that the war was officially\r\nover was not communicated in a timely manner over the wide distance to where the war was being \r\ncontested. Negotiations for the treaty and the actual signing of the treaty took place in Europe, and \r\nnews of the treaty had to be carried across the Atlantic to the war front by ship. A totally unnecessary \r\nloss of life was incurred as a result of the amount of time that it took to inform the combatants of the \r\n<span style=\"color:red\">(15)</span> treaty. \r\n\r\nEarly in January of 1815, some two weeks after the peace treaty had been signed, British troops \r\nin the southern part of the United States were unaware that the war had officially ended. Over 5,000 \r\nBritish troops attacked U.S. troops. During the ensuing battle, known as the Battle of New Orleans, \r\nthe British suffered a huge number of casualties, around 2,000, and the Americans lost 71, all in a \r\n<span style=\"color:red\">(20)</span> battle fought only because news of the peace treaty that had already been signed in Ghent had not yet \r\nreached the battlefield.",
    "ans_a": "The first paragraph",
    "ans_b": "The second paragraph",
    "ans_c": "The third paragraph",
    "ans_d": "The last paragraph",
    "answer": "D"
  }
]