 [
  {
    "1": "91",
    "2": "1",
    "number": "91",
    "type": "reading",
    "direction": "<b>SECTION 3</b>\r\n<b>READING COMPREHENSION</b>\r\n\r\nThis section is designed to measure your ability to read and understand short passages similar in\r\ntopic and style to those that students are likely to encounter in North American universities and\r\ncolleges. This section contains reading passages and questions about the passages.\r\n\r\n<b><u>Directions</u></b>: In this section you will read several passages. Each one is followed by a number of\r\nquestions about it. You are to choose the one best answer, (A), (B), (C), or (D), to each question. Then,\r\non your answer sheet, find the number of the question and fill in the space that corresponds to the\r\nletter of the answer you have chosen.\r\n\r\nAnswer all questions about the information in a passage on the basis of what is stated or implied\r\nin that passage.\r\n\r\nRead the following passage:\r\n\r\nJohn Quincy Adams, who served as the sixth president of the United States from 1825\r\nto 1829, is today recognized for his masterful statesmanship and diplomacy. He dedicated his\r\nlife to public service, both in the presidency and in the various other political offices that he\r\nheld. Throughout his political career he demonstrated his unswerving belief in freedom of\r\n\r\n<span style=\"color:red\">(5)</span> speech, the antislavery cause, and the right of Americans to be free from European and Asian\r\ndomination.\r\n\r\n<b>Example I</b>\r\n\r\nTo what did John Quincy Adams devote his life?\r\n(A) Improving his personal life\r\n(B) Serving the public\r\n(C) Increasing his fortune\r\n(D) Working on his private business\r\n\r\nAccording to the passage, John Quincy Adams “dedicated his life to public service.” Therefore, you\r\nshould choose answer (B).\r\n\r\n<b>Example II</b>\r\nIn line 4, the word “unswerving” is closest in meaning to\r\n\r\n(A) moveable\r\n(B) insignificant\r\n(C) unchanging\r\n(D) diplomatic\r\n\r\nThe passage states that John Quincy Adams demonstrated his unswerving belief “throughout his\r\ncareer.” This implies that the belief did not change. Therefore, you should choose answer (C).\r\n",
    "question": "Which of the following is the main topic of the passage?",
    "text": "<b>Questions 90-100</b>\r\n\r\nIt's a sound you will probably never hear, a sickened tree\r\nsending out a distress signal. But a group of scientists has heard\r\nthe cries, and they think some insects also hear the trees and are\r\ndrawn to them like vultures to a dying animal.\r\n\r\n<span style=\"color:red\">(5)</span> Researchers with the u.s. Department of Agriculture's Forest\r\nService fastened sensors to the bark of parched trees and\r\nclearly heard distress calls. According to one of the scientists,\r\nmost drought-stricken trees transmit their plight in the 50- to 500-\r\nkilohertz range. (The unaided human ear can detect no more than\r\n<span style=\"color:red\">(10)</span> 20 kilohertz.) Red oak, maple, white pine, and birch all make\r\nslightly different sounds in the form of vibrations at the surface\r\nof the wood.\r\n\r\nThe scientists think that the vibrations are created when the\r\nwater columns inside tubes that run the length of the tree break,\r\n<span style=\"color:red\">(15)</span> a result of too little water flowing through them. These fractured\r\ncolumns send out distinctive vibration patterns. Because some\r\ninsects communicate at ultrasonic frequencies, they may pick up the\r\ntrees' vibrations and attack the weakened trees. Researchers are\r\nnow running tests with potted trees that have been deprived of\r\n<span style=\"color:red\">(20)</span> water to see if the sound is what attracts the insects. \"Water-\r\nstressed trees also smell differently from other trees, and they\r\nexperience thermal changes, so insects could be responding to\r\nsomething other than sound,\" one scientist said.",
    "ans_a": "The vibrations produced by insects",
    "ans_b": "The mission of the U.S. Forest Service",
    "ans_c": "The effect of insects on trees",
    "ans_d": "The sounds made by distressed trees",
    "answer": "D",
    "SUMBER": "BR1 (24-33)"
  },
  {
    "1": "92",
    "2": "2",
    "number": "92",
    "type": "reading",
    "question": "The word \"them\" in line 4 refers to",
    "text": "<b>Questions 90-100</b>\r\n\r\nIt's a sound you will probably never hear, a sickened tree\r\nsending out a distress signal. But a group of scientists has heard\r\nthe cries, and they think some insects also hear the trees and are\r\ndrawn to them like vultures to a dying animal.\r\n\r\n<span style=\"color:red\">(5)</span> Researchers with the u.s. Department of Agriculture's Forest\r\nService fastened sensors to the bark of parched trees and\r\nclearly heard distress calls. According to one of the scientists,\r\nmost drought-stricken trees transmit their plight in the 50- to 500-\r\nkilohertz range. (The unaided human ear can detect no more than\r\n<span style=\"color:red\">(10)</span> 20 kilohertz.) Red oak, maple, white pine, and birch all make\r\nslightly different sounds in the form of vibrations at the surface\r\nof the wood.\r\n\r\nThe scientists think that the vibrations are created when the\r\nwater columns inside tubes that run the length of the tree break,\r\n<span style=\"color:red\">(15)</span> a result of too little water flowing through them. These fractured\r\ncolumns send out distinctive vibration patterns. Because some\r\ninsects communicate at ultrasonic frequencies, they may pick up the\r\ntrees' vibrations and attack the weakened trees. Researchers are\r\nnow running tests with potted trees that have been deprived of\r\n<span style=\"color:red\">(20)</span> water to see if the sound is what attracts the insects. \"Water-\r\nstressed trees also smell differently from other trees, and they\r\nexperience thermal changes, so insects could be responding to\r\nsomething other than sound,\" one scientist said.",
    "ans_a": "trees",
    "ans_b": "scientists",
    "ans_c": "insects",
    "ans_d": "cries",
    "answer": "A",
    "SUMBER": "BR1 (24-33)"
  },
  {
    "1": "93",
    "2": "3",
    "number": "93",
    "type": "reading",
    "question": "The word \"parched\" in line 6 is closest in meaning to which of the following?",
    "text": "<b>Questions 90-100</b>\r\n\r\nIt's a sound you will probably never hear, a sickened tree\r\nsending out a distress signal. But a group of scientists has heard\r\nthe cries, and they think some insects also hear the trees and are\r\ndrawn to them like vultures to a dying animal.\r\n\r\n<span style=\"color:red\">(5)</span> Researchers with the u.s. Department of Agriculture's Forest\r\nService fastened sensors to the bark of parched trees and\r\nclearly heard distress calls. According to one of the scientists,\r\nmost drought-stricken trees transmit their plight in the 50- to 500-\r\nkilohertz range. (The unaided human ear can detect no more than\r\n<span style=\"color:red\">(10)</span> 20 kilohertz.) Red oak, maple, white pine, and birch all make\r\nslightly different sounds in the form of vibrations at the surface\r\nof the wood.\r\n\r\nThe scientists think that the vibrations are created when the\r\nwater columns inside tubes that run the length of the tree break,\r\n<span style=\"color:red\">(15)</span> a result of too little water flowing through them. These fractured\r\ncolumns send out distinctive vibration patterns. Because some\r\ninsects communicate at ultrasonic frequencies, they may pick up the\r\ntrees' vibrations and attack the weakened trees. Researchers are\r\nnow running tests with potted trees that have been deprived of\r\n<span style=\"color:red\">(20)</span> water to see if the sound is what attracts the insects. \"Water-\r\nstressed trees also smell differently from other trees, and they\r\nexperience thermal changes, so insects could be responding to\r\nsomething other than sound,\" one scientist said.",
    "ans_a": "Burned",
    "ans_b": "Dehydrated",
    "ans_c": "Recovered",
    "ans_d": "Fallen",
    "answer": "B",
    "SUMBER": "BR1 (24-33)"
  },
  {
    "1": "94",
    "2": "4",
    "number": "94",
    "type": "reading",
    "question": "The word \"plight\" in line 8 is closest in meaning to",
    "text": "<b>Questions 90-100</b>\r\n\r\nIt's a sound you will probably never hear, a sickened tree\r\nsending out a distress signal. But a group of scientists has heard\r\nthe cries, and they think some insects also hear the trees and are\r\ndrawn to them like vultures to a dying animal.\r\n\r\n<span style=\"color:red\">(5)</span> Researchers with the u.s. Department of Agriculture's Forest\r\nService fastened sensors to the bark of parched trees and\r\nclearly heard distress calls. According to one of the scientists,\r\nmost drought-stricken trees transmit their plight in the 50- to 500-\r\nkilohertz range. (The unaided human ear can detect no more than\r\n<span style=\"color:red\">(10)</span> 20 kilohertz.) Red oak, maple, white pine, and birch all make\r\nslightly different sounds in the form of vibrations at the surface\r\nof the wood.\r\n\r\nThe scientists think that the vibrations are created when the\r\nwater columns inside tubes that run the length of the tree break,\r\n<span style=\"color:red\">(15)</span> a result of too little water flowing through them. These fractured\r\ncolumns send out distinctive vibration patterns. Because some\r\ninsects communicate at ultrasonic frequencies, they may pick up the\r\ntrees' vibrations and attack the weakened trees. Researchers are\r\nnow running tests with potted trees that have been deprived of\r\n<span style=\"color:red\">(20)</span> water to see if the sound is what attracts the insects. \"Water-\r\nstressed trees also smell differently from other trees, and they\r\nexperience thermal changes, so insects could be responding to\r\nsomething other than sound,\" one scientist said.",
    "ans_a": "signal",
    "ans_b": "condition",
    "ans_c": "need",
    "ans_d": "agony",
    "answer": "B",
    "SUMBER": "BR1 (24-33)"
  },
  {
    "1": "95",
    "2": "5",
    "number": "95",
    "type": "reading",
    "question": "It can be inferred from the passage that the sounds produced by the trees",
    "text": "<b>Questions 90-100</b>\r\n\r\nIt's a sound you will probably never hear, a sickened tree\r\nsending out a distress signal. But a group of scientists has heard\r\nthe cries, and they think some insects also hear the trees and are\r\ndrawn to them like vultures to a dying animal.\r\n\r\n<span style=\"color:red\">(5)</span> Researchers with the u.s. Department of Agriculture's Forest\r\nService fastened sensors to the bark of parched trees and\r\nclearly heard distress calls. According to one of the scientists,\r\nmost drought-stricken trees transmit their plight in the 50- to 500-\r\nkilohertz range. (The unaided human ear can detect no more than\r\n<span style=\"color:red\">(10)</span> 20 kilohertz.) Red oak, maple, white pine, and birch all make\r\nslightly different sounds in the form of vibrations at the surface\r\nof the wood.\r\n\r\nThe scientists think that the vibrations are created when the\r\nwater columns inside tubes that run the length of the tree break,\r\n<span style=\"color:red\">(15)</span> a result of too little water flowing through them. These fractured\r\ncolumns send out distinctive vibration patterns. Because some\r\ninsects communicate at ultrasonic frequencies, they may pick up the\r\ntrees' vibrations and attack the weakened trees. Researchers are\r\nnow running tests with potted trees that have been deprived of\r\n<span style=\"color:red\">(20)</span> water to see if the sound is what attracts the insects. \"Water-\r\nstressed trees also smell differently from other trees, and they\r\nexperience thermal changes, so insects could be responding to\r\nsomething other than sound,\" one scientist said.",
    "ans_a": "serve as a form of communication with other trees",
    "ans_b": "are the same no matter what type of tree produces them",
    "ans_c": "cannot be heard by the unaided human ear",
    "ans_d": "fall into the 1-20 kilohertz range",
    "answer": "C",
    "SUMBER": "BR1 (24-33)"
  },
  {
    "1": "96",
    "2": "6",
    "number": "96",
    "type": "reading",
    "question": "The word \"fractured\" in line 15 is closest in meaning to",
    "text": "<b>Questions 90-100</b>\r\n\r\nIt's a sound you will probably never hear, a sickened tree\r\nsending out a distress signal. But a group of scientists has heard\r\nthe cries, and they think some insects also hear the trees and are\r\ndrawn to them like vultures to a dying animal.\r\n\r\n<span style=\"color:red\">(5)</span> Researchers with the u.s. Department of Agriculture's Forest\r\nService fastened sensors to the bark of parched trees and\r\nclearly heard distress calls. According to one of the scientists,\r\nmost drought-stricken trees transmit their plight in the 50- to 500-\r\nkilohertz range. (The unaided human ear can detect no more than\r\n<span style=\"color:red\">(10)</span> 20 kilohertz.) Red oak, maple, white pine, and birch all make\r\nslightly different sounds in the form of vibrations at the surface\r\nof the wood.\r\n\r\nThe scientists think that the vibrations are created when the\r\nwater columns inside tubes that run the length of the tree break,\r\n<span style=\"color:red\">(15)</span> a result of too little water flowing through them. These fractured\r\ncolumns send out distinctive vibration patterns. Because some\r\ninsects communicate at ultrasonic frequencies, they may pick up the\r\ntrees' vibrations and attack the weakened trees. Researchers are\r\nnow running tests with potted trees that have been deprived of\r\n<span style=\"color:red\">(20)</span> water to see if the sound is what attracts the insects. \"Water-\r\nstressed trees also smell differently from other trees, and they\r\nexperience thermal changes, so insects could be responding to\r\nsomething other than sound,\" one scientist said.",
    "ans_a": "long",
    "ans_b": "blocked",
    "ans_c": "hollow",
    "ans_d": "broken",
    "answer": "D",
    "SUMBER": "BR1 (24-33)"
  },
  {
    "1": "97",
    "2": "7",
    "number": "97",
    "type": "reading",
    "question": "Which of the following could be considered a cause of the trees' distress signals?",
    "text": "<b>Questions 90-100</b>\r\n\r\nIt's a sound you will probably never hear, a sickened tree\r\nsending out a distress signal. But a group of scientists has heard\r\nthe cries, and they think some insects also hear the trees and are\r\ndrawn to them like vultures to a dying animal.\r\n\r\n<span style=\"color:red\">(5)</span> Researchers with the u.s. Department of Agriculture's Forest\r\nService fastened sensors to the bark of parched trees and\r\nclearly heard distress calls. According to one of the scientists,\r\nmost drought-stricken trees transmit their plight in the 50- to 500-\r\nkilohertz range. (The unaided human ear can detect no more than\r\n<span style=\"color:red\">(10)</span> 20 kilohertz.) Red oak, maple, white pine, and birch all make\r\nslightly different sounds in the form of vibrations at the surface\r\nof the wood.\r\n\r\nThe scientists think that the vibrations are created when the\r\nwater columns inside tubes that run the length of the tree break,\r\n<span style=\"color:red\">(15)</span> a result of too little water flowing through them. These fractured\r\ncolumns send out distinctive vibration patterns. Because some\r\ninsects communicate at ultrasonic frequencies, they may pick up the\r\ntrees' vibrations and attack the weakened trees. Researchers are\r\nnow running tests with potted trees that have been deprived of\r\n<span style=\"color:red\">(20)</span> water to see if the sound is what attracts the insects. \"Water-\r\nstressed trees also smell differently from other trees, and they\r\nexperience thermal changes, so insects could be responding to\r\nsomething other than sound,\" one scientist said.",
    "ans_a": "Torn roots",
    "ans_b": "Attacks by insects",
    "ans_c": "Experiments by scientists",
    "ans_d": "Lack of water",
    "answer": "D",
    "SUMBER": "BR1 (24-33)"
  },
  {
    "1": "98",
    "2": "8",
    "number": "98",
    "type": "reading",
    "question": "In line 17, the phrase \"pick up\" could best be replaced by which of the following?",
    "text": "<b>Questions 90-100</b>\r\n\r\nIt's a sound you will probably never hear, a sickened tree\r\nsending out a distress signal. But a group of scientists has heard\r\nthe cries, and they think some insects also hear the trees and are\r\ndrawn to them like vultures to a dying animal.\r\n\r\n<span style=\"color:red\">(5)</span> Researchers with the u.s. Department of Agriculture's Forest\r\nService fastened sensors to the bark of parched trees and\r\nclearly heard distress calls. According to one of the scientists,\r\nmost drought-stricken trees transmit their plight in the 50- to 500-\r\nkilohertz range. (The unaided human ear can detect no more than\r\n<span style=\"color:red\">(10)</span> 20 kilohertz.) Red oak, maple, white pine, and birch all make\r\nslightly different sounds in the form of vibrations at the surface\r\nof the wood.\r\n\r\nThe scientists think that the vibrations are created when the\r\nwater columns inside tubes that run the length of the tree break,\r\n<span style=\"color:red\">(15)</span> a result of too little water flowing through them. These fractured\r\ncolumns send out distinctive vibration patterns. Because some\r\ninsects communicate at ultrasonic frequencies, they may pick up the\r\ntrees' vibrations and attack the weakened trees. Researchers are\r\nnow running tests with potted trees that have been deprived of\r\n<span style=\"color:red\">(20)</span> water to see if the sound is what attracts the insects. \"Water-\r\nstressed trees also smell differently from other trees, and they\r\nexperience thermal changes, so insects could be responding to\r\nsomething other than sound,\" one scientist said.",
    "ans_a": "Perceive",
    "ans_b": "Lift",
    "ans_c": "Transmit",
    "ans_d": "Attack",
    "answer": "A",
    "SUMBER": "BR1 (24-33)"
  },
  {
    "1": "99",
    "2": "9",
    "number": "99",
    "type": "reading",
    "question": "All of the following are mentioned as possible factors in drawing insects to weakened trees EXCEPT",
    "text": "<b>Questions 90-100</b>\r\n\r\nIt's a sound you will probably never hear, a sickened tree\r\nsending out a distress signal. But a group of scientists has heard\r\nthe cries, and they think some insects also hear the trees and are\r\ndrawn to them like vultures to a dying animal.\r\n\r\n<span style=\"color:red\">(5)</span> Researchers with the u.s. Department of Agriculture's Forest\r\nService fastened sensors to the bark of parched trees and\r\nclearly heard distress calls. According to one of the scientists,\r\nmost drought-stricken trees transmit their plight in the 50- to 500-\r\nkilohertz range. (The unaided human ear can detect no more than\r\n<span style=\"color:red\">(10)</span> 20 kilohertz.) Red oak, maple, white pine, and birch all make\r\nslightly different sounds in the form of vibrations at the surface\r\nof the wood.\r\n\r\nThe scientists think that the vibrations are created when the\r\nwater columns inside tubes that run the length of the tree break,\r\n<span style=\"color:red\">(15)</span> a result of too little water flowing through them. These fractured\r\ncolumns send out distinctive vibration patterns. Because some\r\ninsects communicate at ultrasonic frequencies, they may pick up the\r\ntrees' vibrations and attack the weakened trees. Researchers are\r\nnow running tests with potted trees that have been deprived of\r\n<span style=\"color:red\">(20)</span> water to see if the sound is what attracts the insects. \"Water-\r\nstressed trees also smell differently from other trees, and they\r\nexperience thermal changes, so insects could be responding to\r\nsomething other than sound,\" one scientist said.",
    "ans_a": "thermal changes",
    "ans_b": "smells",
    "ans_c": "sounds",
    "ans_d": "changes in color",
    "answer": "D",
    "SUMBER": "BR1 (24-33)"
  },
  {
    "1": "100",
    "2": "10",
    "number": "100",
    "type": "reading",
    "question": "It can be inferred that, at the time the passage was written, research concerning the distress signals of trees",
    "text": "<b>Questions 90-100</b>\r\n\r\nIt's a sound you will probably never hear, a sickened tree\r\nsending out a distress signal. But a group of scientists has heard\r\nthe cries, and they think some insects also hear the trees and are\r\ndrawn to them like vultures to a dying animal.\r\n\r\n<span style=\"color:red\">(5)</span> Researchers with the u.s. Department of Agriculture's Forest\r\nService fastened sensors to the bark of parched trees and\r\nclearly heard distress calls. According to one of the scientists,\r\nmost drought-stricken trees transmit their plight in the 50- to 500-\r\nkilohertz range. (The unaided human ear can detect no more than\r\n<span style=\"color:red\">(10)</span> 20 kilohertz.) Red oak, maple, white pine, and birch all make\r\nslightly different sounds in the form of vibrations at the surface\r\nof the wood.\r\n\r\nThe scientists think that the vibrations are created when the\r\nwater columns inside tubes that run the length of the tree break,\r\n<span style=\"color:red\">(15)</span> a result of too little water flowing through them. These fractured\r\ncolumns send out distinctive vibration patterns. Because some\r\ninsects communicate at ultrasonic frequencies, they may pick up the\r\ntrees' vibrations and attack the weakened trees. Researchers are\r\nnow running tests with potted trees that have been deprived of\r\n<span style=\"color:red\">(20)</span> water to see if the sound is what attracts the insects. \"Water-\r\nstressed trees also smell differently from other trees, and they\r\nexperience thermal changes, so insects could be responding to\r\nsomething other than sound,\" one scientist said.",
    "ans_a": "had been conducted many years earlier",
    "ans_b": "had been unproductive up to then",
    "ans_c": "was continuing",
    "ans_d": "was no longer sponsored by the government",
    "answer": "C",
    "SUMBER": "BR1 (24-33)"
  },
  {
    "1": "101",
    "2": "11",
    "number": "101",
    "type": "reading",
    "question": "Which of the following best summarizes this passage?",
    "text": "<b>Questions 101-110</b>\r\n\r\nEver since humans have inhabited the earth, they have \r\nmade use of various forms of communication. Generally, \r\nthis expression of thoughts and feelings has been in the form \r\nof oral speech. When there is a language barrier, communication \r\n<span style=\"color:red\">(5)</span> is accomplished through sign language in which \r\nmotions stand for letters, words, and ideas. Tourists, the \r\ndeaf, and the mute have had to resort to this form of \r\nexpression. Many of these symbols of whole words are very \r\npicturesque and exact and can be used internationally; \r\n<span style=\"color:red\">(10)</span> spelling, however, cannot.\r\n\r\nBody language transmits ideas or thoughts by certain \r\nactions, either intentionally or unintentionally. A wink can \r\nbe a way of flirting or indicating that the party is only joking. \r\nA nod signifies approval, while shaking the head indicates \r\n<span style=\"color:red\">(15)</span> negative reaction.\r\n\r\nOther forms of non-linguistic language can be found in \r\nBraille (a system of raised dots read with the fingertips) \r\nsignal flags, Morse code, and smoke signals. Road maps and \r\npicture signs also guide, warn, and instruct people.\r\n\r\n<span style=\"color:red\">(20)</span> While verbalization is the most common form of \r\nlanguage, other systems and techniques also express human \r\nthoughts and feelings.",
    "ans_a": "When language is a barrier, people will find other forms of communication.",
    "ans_b": "Everybody uses only one form of communication.",
    "ans_c": "Non-linguistic language is invaluable to foreigners.",
    "ans_d": "Although other forms of communication exist, verbalization is the fastest. ",
    "answer": "A",
    "SUMBER": "PT5 (41-50)"
  },
  {
    "1": "102",
    "2": "12",
    "number": "102",
    "type": "reading",
    "question": "The word \"these\" in line 8 refers to",
    "text": "<b>Questions 101-110</b>\r\n\r\nEver since humans have inhabited the earth, they have \r\nmade use of various forms of communication. Generally, \r\nthis expression of thoughts and feelings has been in the form \r\nof oral speech. When there is a language barrier, communication \r\n<span style=\"color:red\">(5)</span> is accomplished through sign language in which \r\nmotions stand for letters, words, and ideas. Tourists, the \r\ndeaf, and the mute have had to resort to this form of \r\nexpression. Many of these symbols of whole words are very \r\npicturesque and exact and can be used internationally; \r\n<span style=\"color:red\">(10)</span> spelling, however, cannot.\r\n\r\nBody language transmits ideas or thoughts by certain \r\nactions, either intentionally or unintentionally. A wink can \r\nbe a way of flirting or indicating that the party is only joking. \r\nA nod signifies approval, while shaking the head indicates \r\n<span style=\"color:red\">(15)</span> negative reaction.\r\n\r\nOther forms of non-linguistic language can be found in \r\nBraille (a system of raised dots read with the fingertips) \r\nsignal flags, Morse code, and smoke signals. Road maps and \r\npicture signs also guide, warn, and instruct people.\r\n\r\n<span style=\"color:red\">(20)</span> While verbalization is the most common form of \r\nlanguage, other systems and techniques also express human \r\nthoughts and feelings.",
    "ans_a": "tourists",
    "ans_b": "the deaf and the mute",
    "ans_c": "thoughts and feelings",
    "ans_d": "sign language motions",
    "answer": "D",
    "SUMBER": "PT5 (41-50)"
  },
  {
    "1": "103",
    "2": "13",
    "number": "103",
    "type": "reading",
    "question": "All of the following statements are true EXCEPT",
    "text": "<b>Questions 101-110</b>\r\n\r\nEver since humans have inhabited the earth, they have \r\nmade use of various forms of communication. Generally, \r\nthis expression of thoughts and feelings has been in the form \r\nof oral speech. When there is a language barrier, communication \r\n<span style=\"color:red\">(5)</span> is accomplished through sign language in which \r\nmotions stand for letters, words, and ideas. Tourists, the \r\ndeaf, and the mute have had to resort to this form of \r\nexpression. Many of these symbols of whole words are very \r\npicturesque and exact and can be used internationally; \r\n<span style=\"color:red\">(10)</span> spelling, however, cannot.\r\n\r\nBody language transmits ideas or thoughts by certain \r\nactions, either intentionally or unintentionally. A wink can \r\nbe a way of flirting or indicating that the party is only joking. \r\nA nod signifies approval, while shaking the head indicates \r\n<span style=\"color:red\">(15)</span> negative reaction.\r\n\r\nOther forms of non-linguistic language can be found in \r\nBraille (a system of raised dots read with the fingertips) \r\nsignal flags, Morse code, and smoke signals. Road maps and \r\npicture signs also guide, warn, and instruct people.\r\n\r\n<span style=\"color:red\">(20)</span> While verbalization is the most common form of \r\nlanguage, other systems and techniques also express human \r\nthoughts and feelings.",
    "ans_a": "there are many forms of communication in existence today",
    "ans_b": "verbalization is the most common form of communication ",
    "ans_c": "the deaf and mute use an oral form of communication",
    "ans_d": "ideas and thoughts can be transmitted by body language",
    "answer": "C",
    "SUMBER": "PT5 (41-50)"
  },
  {
    "1": "104",
    "2": "14",
    "number": "104",
    "type": "reading",
    "question": "Which form other than oral speech would be most commonly used among blind people?",
    "text": "<b>Questions 101-110</b>\r\n\r\nEver since humans have inhabited the earth, they have \r\nmade use of various forms of communication. Generally, \r\nthis expression of thoughts and feelings has been in the form \r\nof oral speech. When there is a language barrier, communication \r\n<span style=\"color:red\">(5)</span> is accomplished through sign language in which \r\nmotions stand for letters, words, and ideas. Tourists, the \r\ndeaf, and the mute have had to resort to this form of \r\nexpression. Many of these symbols of whole words are very \r\npicturesque and exact and can be used internationally; \r\n<span style=\"color:red\">(10)</span> spelling, however, cannot.\r\n\r\nBody language transmits ideas or thoughts by certain \r\nactions, either intentionally or unintentionally. A wink can \r\nbe a way of flirting or indicating that the party is only joking. \r\nA nod signifies approval, while shaking the head indicates \r\n<span style=\"color:red\">(15)</span> negative reaction.\r\n\r\nOther forms of non-linguistic language can be found in \r\nBraille (a system of raised dots read with the fingertips) \r\nsignal flags, Morse code, and smoke signals. Road maps and \r\npicture signs also guide, warn, and instruct people.\r\n\r\n<span style=\"color:red\">(20)</span> While verbalization is the most common form of \r\nlanguage, other systems and techniques also express human \r\nthoughts and feelings.",
    "ans_a": "Picture signs",
    "ans_b": "Braille",
    "ans_c": "Body language",
    "ans_d": "Signal flags",
    "answer": "B",
    "SUMBER": "PT5 (41-50)"
  },
  {
    "1": "105",
    "2": "15",
    "number": "105",
    "type": "reading",
    "question": "How many different forms of communication are mentioned here?",
    "text": "<b>Questions 101-110</b>\r\n\r\nEver since humans have inhabited the earth, they have \r\nmade use of various forms of communication. Generally, \r\nthis expression of thoughts and feelings has been in the form \r\nof oral speech. When there is a language barrier, communication \r\n<span style=\"color:red\">(5)</span> is accomplished through sign language in which \r\nmotions stand for letters, words, and ideas. Tourists, the \r\ndeaf, and the mute have had to resort to this form of \r\nexpression. Many of these symbols of whole words are very \r\npicturesque and exact and can be used internationally; \r\n<span style=\"color:red\">(10)</span> spelling, however, cannot.\r\n\r\nBody language transmits ideas or thoughts by certain \r\nactions, either intentionally or unintentionally. A wink can \r\nbe a way of flirting or indicating that the party is only joking. \r\nA nod signifies approval, while shaking the head indicates \r\n<span style=\"color:red\">(15)</span> negative reaction.\r\n\r\nOther forms of non-linguistic language can be found in \r\nBraille (a system of raised dots read with the fingertips) \r\nsignal flags, Morse code, and smoke signals. Road maps and \r\npicture signs also guide, warn, and instruct people.\r\n\r\n<span style=\"color:red\">(20)</span> While verbalization is the most common form of \r\nlanguage, other systems and techniques also express human \r\nthoughts and feelings.",
    "ans_a": "5",
    "ans_b": "7",
    "ans_c": "9",
    "ans_d": "11",
    "answer": "C",
    "SUMBER": "PT5 (41-50)"
  },
  {
    "1": "106",
    "2": "16",
    "number": "106",
    "type": "reading",
    "question": "The word \"wink\" in line 12 means most nearly the same as",
    "text": "<b>Questions 101-110</b>\r\n\r\nEver since humans have inhabited the earth, they have \r\nmade use of various forms of communication. Generally, \r\nthis expression of thoughts and feelings has been in the form \r\nof oral speech. When there is a language barrier, communication \r\n<span style=\"color:red\">(5)</span> is accomplished through sign language in which \r\nmotions stand for letters, words, and ideas. Tourists, the \r\ndeaf, and the mute have had to resort to this form of \r\nexpression. Many of these symbols of whole words are very \r\npicturesque and exact and can be used internationally; \r\n<span style=\"color:red\">(10)</span> spelling, however, cannot.\r\n\r\nBody language transmits ideas or thoughts by certain \r\nactions, either intentionally or unintentionally. A wink can \r\nbe a way of flirting or indicating that the party is only joking. \r\nA nod signifies approval, while shaking the head indicates \r\n<span style=\"color:red\">(15)</span> negative reaction.\r\n\r\nOther forms of non-linguistic language can be found in \r\nBraille (a system of raised dots read with the fingertips) \r\nsignal flags, Morse code, and smoke signals. Road maps and \r\npicture signs also guide, warn, and instruct people.\r\n\r\n<span style=\"color:red\">(20)</span> While verbalization is the most common form of \r\nlanguage, other systems and techniques also express human \r\nthoughts and feelings.",
    "ans_a": "close one eye briefly",
    "ans_b": "close two eyes briefly",
    "ans_c": "bob the head up and down",
    "ans_d": "shake the head from side to side",
    "answer": "A",
    "SUMBER": "PT5 (41-50)"
  },
  {
    "1": "107",
    "2": "17",
    "number": "107",
    "type": "reading",
    "question": "Sign language is said to be very picturesque and exact and can be used internationally EXCEPT for",
    "text": "<b>Questions 101-110</b>\r\n\r\nEver since humans have inhabited the earth, they have \r\nmade use of various forms of communication. Generally, \r\nthis expression of thoughts and feelings has been in the form \r\nof oral speech. When there is a language barrier, communication \r\n<span style=\"color:red\">(5)</span> is accomplished through sign language in which \r\nmotions stand for letters, words, and ideas. Tourists, the \r\ndeaf, and the mute have had to resort to this form of \r\nexpression. Many of these symbols of whole words are very \r\npicturesque and exact and can be used internationally; \r\n<span style=\"color:red\">(10)</span> spelling, however, cannot.\r\n\r\nBody language transmits ideas or thoughts by certain \r\nactions, either intentionally or unintentionally. A wink can \r\nbe a way of flirting or indicating that the party is only joking. \r\nA nod signifies approval, while shaking the head indicates \r\n<span style=\"color:red\">(15)</span> negative reaction.\r\n\r\nOther forms of non-linguistic language can be found in \r\nBraille (a system of raised dots read with the fingertips) \r\nsignal flags, Morse code, and smoke signals. Road maps and \r\npicture signs also guide, warn, and instruct people.\r\n\r\n<span style=\"color:red\">(20)</span> While verbalization is the most common form of \r\nlanguage, other systems and techniques also express human \r\nthoughts and feelings.",
    "ans_a": "spelling",
    "ans_b": "ideas",
    "ans_c": "whole words",
    "ans_d": "expressions",
    "answer": "A",
    "SUMBER": "PT5 (41-50)"
  },
  {
    "1": "108",
    "2": "18",
    "number": "108",
    "type": "reading",
    "question": "People need to communicate in order to",
    "text": "<b>Questions 101-110</b>\r\n\r\nEver since humans have inhabited the earth, they have \r\nmade use of various forms of communication. Generally, \r\nthis expression of thoughts and feelings has been in the form \r\nof oral speech. When there is a language barrier, communication \r\n<span style=\"color:red\">(5)</span> is accomplished through sign language in which \r\nmotions stand for letters, words, and ideas. Tourists, the \r\ndeaf, and the mute have had to resort to this form of \r\nexpression. Many of these symbols of whole words are very \r\npicturesque and exact and can be used internationally; \r\n<span style=\"color:red\">(10)</span> spelling, however, cannot.\r\n\r\nBody language transmits ideas or thoughts by certain \r\nactions, either intentionally or unintentionally. A wink can \r\nbe a way of flirting or indicating that the party is only joking. \r\nA nod signifies approval, while shaking the head indicates \r\n<span style=\"color:red\">(15)</span> negative reaction.\r\n\r\nOther forms of non-linguistic language can be found in \r\nBraille (a system of raised dots read with the fingertips) \r\nsignal flags, Morse code, and smoke signals. Road maps and \r\npicture signs also guide, warn, and instruct people.\r\n\r\n<span style=\"color:red\">(20)</span> While verbalization is the most common form of \r\nlanguage, other systems and techniques also express human \r\nthoughts and feelings.",
    "ans_a": "create language barriers",
    "ans_b": "keep from reading with their fingertips",
    "ans_c": "be picturesque and exact",
    "ans_d": "express thoughts and feelings",
    "answer": "D",
    "SUMBER": "PT5 (41-50)"
  },
  {
    "1": "109",
    "2": "19",
    "number": "109",
    "type": "reading",
    "question": "What is the best title for the passage?",
    "text": "<b>Questions 101-110</b>\r\n\r\nEver since humans have inhabited the earth, they have \r\nmade use of various forms of communication. Generally, \r\nthis expression of thoughts and feelings has been in the form \r\nof oral speech. When there is a language barrier, communication \r\n<span style=\"color:red\">(5)</span> is accomplished through sign language in which \r\nmotions stand for letters, words, and ideas. Tourists, the \r\ndeaf, and the mute have had to resort to this form of \r\nexpression. Many of these symbols of whole words are very \r\npicturesque and exact and can be used internationally; \r\n<span style=\"color:red\">(10)</span> spelling, however, cannot.\r\n\r\nBody language transmits ideas or thoughts by certain \r\nactions, either intentionally or unintentionally. A wink can \r\nbe a way of flirting or indicating that the party is only joking. \r\nA nod signifies approval, while shaking the head indicates \r\n<span style=\"color:red\">(15)</span> negative reaction.\r\n\r\nOther forms of non-linguistic language can be found in \r\nBraille (a system of raised dots read with the fingertips) \r\nsignal flags, Morse code, and smoke signals. Road maps and \r\npicture signs also guide, warn, and instruct people.\r\n\r\n<span style=\"color:red\">(20)</span> While verbalization is the most common form of \r\nlanguage, other systems and techniques also express human \r\nthoughts and feelings.",
    "ans_a": "The Importance of Sign Language",
    "ans_b": "The Many Forms of Communication",
    "ans_c": "Ways of Expressing Feelings",
    "ans_d": "Picturesque Symbols of Communication",
    "answer": "B",
    "SUMBER": "PT5 (41-50)"
  },
  {
    "1": "110",
    "2": "20",
    "number": "110",
    "type": "reading",
    "question": "Who would be MOST likely to use Morse code?",
    "text": "<b>Questions 101-110</b>\r\n\r\nEver since humans have inhabited the earth, they have \r\nmade use of various forms of communication. Generally, \r\nthis expression of thoughts and feelings has been in the form \r\nof oral speech. When there is a language barrier, communication \r\n<span style=\"color:red\">(5)</span> is accomplished through sign language in which \r\nmotions stand for letters, words, and ideas. Tourists, the \r\ndeaf, and the mute have had to resort to this form of \r\nexpression. Many of these symbols of whole words are very \r\npicturesque and exact and can be used internationally; \r\n<span style=\"color:red\">(10)</span> spelling, however, cannot.\r\n\r\nBody language transmits ideas or thoughts by certain \r\nactions, either intentionally or unintentionally. A wink can \r\nbe a way of flirting or indicating that the party is only joking. \r\nA nod signifies approval, while shaking the head indicates \r\n<span style=\"color:red\">(15)</span> negative reaction.\r\n\r\nOther forms of non-linguistic language can be found in \r\nBraille (a system of raised dots read with the fingertips) \r\nsignal flags, Morse code, and smoke signals. Road maps and \r\npicture signs also guide, warn, and instruct people.\r\n\r\n<span style=\"color:red\">(20)</span> While verbalization is the most common form of \r\nlanguage, other systems and techniques also express human \r\nthoughts and feelings.",
    "ans_a": "A scientist",
    "ans_b": "A spy",
    "ans_c": "An airline pilot ",
    "ans_d": "A telegrapher",
    "answer": "D",
    "SUMBER": "PT5 (41-50)"
  },
  {
    "1": "111",
    "2": "21",
    "number": "111",
    "type": "reading",
    "question": "The subject of the preceding paragraph was most likely",
    "text": "<b>Questions 111-120</b>\r\nThese stories of killer bees in the news in recent years have attracted a lot of attention as the \r\nbees have made their way from South America to North America. Killer bees are reputed to be \r\nextremely aggressive in nature, although experts say that their aggression may have been somewhat \r\ninflated.\r\n\r\n<span style=\"color:red\">(5)</span> The killer bee is a hybrid-or combination-of the very mild European strain of honeybee and \r\nthe considerably more aggressive African bee, which was created when the African strain was \r\nimported into Brazil in 1955. The African bees were brought into Brazil because their aggression was \r\nconsidered an advantage: they were far more productive than their European counterparts in that \r\nthey spent a higher percentage of their time working and continued working longer in inclement \r\n<span style=\"color:red\">(10)</span> weather than did the European bees.\r\n\r\nThese killer bees have been known to attack humans and animals, and some fatalities have \r\noccurred. Experts point out, however, that the mixed breed known as the killer bee is actually not at \r\nall as aggressive as the pure African bee. They also point out that the attacks have a chemical cause. A \r\nkiller bee stings only when it has been disturbed; it is not aggressive by nature. However, after a \r\n<span style=\"color:red\">(15)</span> disturbed bee stings and flies away, it leaves its stinger embedded in the victim. In the vicera attached \r\nto the embedded stinger is the chemical isoamyl acetate, which has an odor that attracts other bees. \r\nAs other bees approach the victim of the original sting, the victim tends to panic, thus disturbing \r\nother bees and causing them to sting. The new stings create more of the chemical isoamyl acetate, \r\nwhich attracts more bees and increases the panic level of the victim. Killer bees tend to travel in large \r\n<span style=\"color:red\">(20)</span> clusters or swarms and thus respond in large numbers to the production of isoamyl acetate.",
    "ans_a": "ways of producing honey",
    "ans_b": "stories in the media about killer bees ",
    "ans_c": "the chemical nature of killer bee attacks",
    "ans_d": "the creation of the killer bee",
    "answer": "B",
    "SUMBER": "CT1 (10-19)"
  },
  {
    "1": "112",
    "2": "22",
    "number": "112",
    "type": "reading",
    "question": "The main idea of this passage is that killer bees",
    "text": "<b>Questions 111-120</b>\r\nThese stories of killer bees in the news in recent years have attracted a lot of attention as the \r\nbees have made their way from South America to North America. Killer bees are reputed to be \r\nextremely aggressive in nature, although experts say that their aggression may have been somewhat \r\ninflated.\r\n\r\n<span style=\"color:red\">(5)</span> The killer bee is a hybrid-or combination-of the very mild European strain of honeybee and \r\nthe considerably more aggressive African bee, which was created when the African strain was \r\nimported into Brazil in 1955. The African bees were brought into Brazil because their aggression was \r\nconsidered an advantage: they were far more productive than their European counterparts in that \r\nthey spent a higher percentage of their time working and continued working longer in inclement \r\n<span style=\"color:red\">(10)</span> weather than did the European bees.\r\n\r\nThese killer bees have been known to attack humans and animals, and some fatalities have \r\noccurred. Experts point out, however, that the mixed breed known as the killer bee is actually not at \r\nall as aggressive as the pure African bee. They also point out that the attacks have a chemical cause. A \r\nkiller bee stings only when it has been disturbed; it is not aggressive by nature. However, after a \r\n<span style=\"color:red\">(15)</span> disturbed bee stings and flies away, it leaves its stinger embedded in the victim. In the vicera attached \r\nto the embedded stinger is the chemical isoamyl acetate, which has an odor that attracts other bees. \r\nAs other bees approach the victim of the original sting, the victim tends to panic, thus disturbing \r\nother bees and causing them to sting. The new stings create more of the chemical isoamyl acetate, \r\nwhich attracts more bees and increases the panic level of the victim. Killer bees tend to travel in large \r\n<span style=\"color:red\">(20)</span> clusters or swarms and thus respond in large numbers to the production of isoamyl acetate.",
    "ans_a": "have been in the news a lot recently",
    "ans_b": "have been moving unexpectedly rapidly through the Americas",
    "ans_c": "are not as aggressive as their reputation suggests",
    "ans_d": "are a hybrid rather than a pure breed",
    "answer": "C",
    "SUMBER": "CT1 (10-19)"
  },
  {
    "1": "113",
    "2": "23",
    "number": "113",
    "type": "reading",
    "question": "The word \"inflated\" in line 4 could best be replaced by",
    "text": "<b>Questions 111-120</b>\r\nThese stories of killer bees in the news in recent years have attracted a lot of attention as the \r\nbees have made their way from South America to North America. Killer bees are reputed to be \r\nextremely aggressive in nature, although experts say that their aggression may have been somewhat \r\ninflated.\r\n\r\n<span style=\"color:red\">(5)</span> The killer bee is a hybrid-or combination-of the very mild European strain of honeybee and \r\nthe considerably more aggressive African bee, which was created when the African strain was \r\nimported into Brazil in 1955. The African bees were brought into Brazil because their aggression was \r\nconsidered an advantage: they were far more productive than their European counterparts in that \r\nthey spent a higher percentage of their time working and continued working longer in inclement \r\n<span style=\"color:red\">(10)</span> weather than did the European bees.\r\n\r\nThese killer bees have been known to attack humans and animals, and some fatalities have \r\noccurred. Experts point out, however, that the mixed breed known as the killer bee is actually not at \r\nall as aggressive as the pure African bee. They also point out that the attacks have a chemical cause. A \r\nkiller bee stings only when it has been disturbed; it is not aggressive by nature. However, after a \r\n<span style=\"color:red\">(15)</span> disturbed bee stings and flies away, it leaves its stinger embedded in the victim. In the vicera attached \r\nto the embedded stinger is the chemical isoamyl acetate, which has an odor that attracts other bees. \r\nAs other bees approach the victim of the original sting, the victim tends to panic, thus disturbing \r\nother bees and causing them to sting. The new stings create more of the chemical isoamyl acetate, \r\nwhich attracts more bees and increases the panic level of the victim. Killer bees tend to travel in large \r\n<span style=\"color:red\">(20)</span> clusters or swarms and thus respond in large numbers to the production of isoamyl acetate.",
    "ans_a": "exaggerated",
    "ans_b": "blown",
    "ans_c": "aired",
    "ans_d": "burst",
    "answer": "A",
    "SUMBER": "CT1 (10-19)"
  },
  {
    "1": "114",
    "2": "24",
    "number": "114",
    "type": "reading",
    "question": "It can be inferred from the passage that the killer bee",
    "text": "<b>Questions 111-120</b>\r\nThese stories of killer bees in the news in recent years have attracted a lot of attention as the \r\nbees have made their way from South America to North America. Killer bees are reputed to be \r\nextremely aggressive in nature, although experts say that their aggression may have been somewhat \r\ninflated.\r\n\r\n<span style=\"color:red\">(5)</span> The killer bee is a hybrid-or combination-of the very mild European strain of honeybee and \r\nthe considerably more aggressive African bee, which was created when the African strain was \r\nimported into Brazil in 1955. The African bees were brought into Brazil because their aggression was \r\nconsidered an advantage: they were far more productive than their European counterparts in that \r\nthey spent a higher percentage of their time working and continued working longer in inclement \r\n<span style=\"color:red\">(10)</span> weather than did the European bees.\r\n\r\nThese killer bees have been known to attack humans and animals, and some fatalities have \r\noccurred. Experts point out, however, that the mixed breed known as the killer bee is actually not at \r\nall as aggressive as the pure African bee. They also point out that the attacks have a chemical cause. A \r\nkiller bee stings only when it has been disturbed; it is not aggressive by nature. However, after a \r\n<span style=\"color:red\">(15)</span> disturbed bee stings and flies away, it leaves its stinger embedded in the victim. In the vicera attached \r\nto the embedded stinger is the chemical isoamyl acetate, which has an odor that attracts other bees. \r\nAs other bees approach the victim of the original sting, the victim tends to panic, thus disturbing \r\nother bees and causing them to sting. The new stings create more of the chemical isoamyl acetate, \r\nwhich attracts more bees and increases the panic level of the victim. Killer bees tend to travel in large \r\n<span style=\"color:red\">(20)</span> clusters or swarms and thus respond in large numbers to the production of isoamyl acetate.",
    "ans_a": "traveled from Brazil to Africa in 1955 ",
    "ans_b": "was a predecessor of the African bee ",
    "ans_c": "was carried from Africa to Brazil in 1955 ",
    "ans_d": "did not exist early in the twentieth century",
    "answer": "D",
    "SUMBER": "CT1 (10-19)"
  },
  {
    "1": "115",
    "2": "25",
    "number": "115",
    "type": "reading",
    "question": "Why were African bees considered beneficial?",
    "text": "<b>Questions 111-120</b>\r\nThese stories of killer bees in the news in recent years have attracted a lot of attention as the \r\nbees have made their way from South America to North America. Killer bees are reputed to be \r\nextremely aggressive in nature, although experts say that their aggression may have been somewhat \r\ninflated.\r\n\r\n<span style=\"color:red\">(5)</span> The killer bee is a hybrid-or combination-of the very mild European strain of honeybee and \r\nthe considerably more aggressive African bee, which was created when the African strain was \r\nimported into Brazil in 1955. The African bees were brought into Brazil because their aggression was \r\nconsidered an advantage: they were far more productive than their European counterparts in that \r\nthey spent a higher percentage of their time working and continued working longer in inclement \r\n<span style=\"color:red\">(10)</span> weather than did the European bees.\r\n\r\nThese killer bees have been known to attack humans and animals, and some fatalities have \r\noccurred. Experts point out, however, that the mixed breed known as the killer bee is actually not at \r\nall as aggressive as the pure African bee. They also point out that the attacks have a chemical cause. A \r\nkiller bee stings only when it has been disturbed; it is not aggressive by nature. However, after a \r\n<span style=\"color:red\">(15)</span> disturbed bee stings and flies away, it leaves its stinger embedded in the victim. In the vicera attached \r\nto the embedded stinger is the chemical isoamyl acetate, which has an odor that attracts other bees. \r\nAs other bees approach the victim of the original sting, the victim tends to panic, thus disturbing \r\nother bees and causing them to sting. The new stings create more of the chemical isoamyl acetate, \r\nwhich attracts more bees and increases the panic level of the victim. Killer bees tend to travel in large \r\n<span style=\"color:red\">(20)</span> clusters or swarms and thus respond in large numbers to the production of isoamyl acetate.",
    "ans_a": "They produced an unusual type of honey.",
    "ans_b": "They spent their time traveling.",
    "ans_c": "They were very aggressive. ",
    "ans_d": "They hid from inclement weather.",
    "answer": "C",
    "SUMBER": "CT1 (10-19)"
  },
  {
    "1": "116",
    "2": "26",
    "number": "116",
    "type": "reading",
    "question": "A \"hybrid\" in line 5 is",
    "text": "<b>Questions 111-120</b>\r\nThese stories of killer bees in the news in recent years have attracted a lot of attention as the \r\nbees have made their way from South America to North America. Killer bees are reputed to be \r\nextremely aggressive in nature, although experts say that their aggression may have been somewhat \r\ninflated.\r\n\r\n<span style=\"color:red\">(5)</span> The killer bee is a hybrid-or combination-of the very mild European strain of honeybee and \r\nthe considerably more aggressive African bee, which was created when the African strain was \r\nimported into Brazil in 1955. The African bees were brought into Brazil because their aggression was \r\nconsidered an advantage: they were far more productive than their European counterparts in that \r\nthey spent a higher percentage of their time working and continued working longer in inclement \r\n<span style=\"color:red\">(10)</span> weather than did the European bees.\r\n\r\nThese killer bees have been known to attack humans and animals, and some fatalities have \r\noccurred. Experts point out, however, that the mixed breed known as the killer bee is actually not at \r\nall as aggressive as the pure African bee. They also point out that the attacks have a chemical cause. A \r\nkiller bee stings only when it has been disturbed; it is not aggressive by nature. However, after a \r\n<span style=\"color:red\">(15)</span> disturbed bee stings and flies away, it leaves its stinger embedded in the victim. In the vicera attached \r\nto the embedded stinger is the chemical isoamyl acetate, which has an odor that attracts other bees. \r\nAs other bees approach the victim of the original sting, the victim tends to panic, thus disturbing \r\nother bees and causing them to sting. The new stings create more of the chemical isoamyl acetate, \r\nwhich attracts more bees and increases the panic level of the victim. Killer bees tend to travel in large \r\n<span style=\"color:red\">(20)</span> clusters or swarms and thus respond in large numbers to the production of isoamyl acetate.",
    "ans_a": "a mixture",
    "ans_b": "a relative",
    "ans_c": "a predecessor",
    "ans_d": "an enemy",
    "answer": "A",
    "SUMBER": "CT1 (10-19)"
  },
  {
    "1": "117",
    "2": "27",
    "number": "117",
    "type": "reading",
    "question": "It is stated in the passage that killer bees",
    "text": "<b>Questions 111-120</b>\r\nThese stories of killer bees in the news in recent years have attracted a lot of attention as the \r\nbees have made their way from South America to North America. Killer bees are reputed to be \r\nextremely aggressive in nature, although experts say that their aggression may have been somewhat \r\ninflated.\r\n\r\n<span style=\"color:red\">(5)</span> The killer bee is a hybrid-or combination-of the very mild European strain of honeybee and \r\nthe considerably more aggressive African bee, which was created when the African strain was \r\nimported into Brazil in 1955. The African bees were brought into Brazil because their aggression was \r\nconsidered an advantage: they were far more productive than their European counterparts in that \r\nthey spent a higher percentage of their time working and continued working longer in inclement \r\n<span style=\"color:red\">(10)</span> weather than did the European bees.\r\n\r\nThese killer bees have been known to attack humans and animals, and some fatalities have \r\noccurred. Experts point out, however, that the mixed breed known as the killer bee is actually not at \r\nall as aggressive as the pure African bee. They also point out that the attacks have a chemical cause. A \r\nkiller bee stings only when it has been disturbed; it is not aggressive by nature. However, after a \r\n<span style=\"color:red\">(15)</span> disturbed bee stings and flies away, it leaves its stinger embedded in the victim. In the vicera attached \r\nto the embedded stinger is the chemical isoamyl acetate, which has an odor that attracts other bees. \r\nAs other bees approach the victim of the original sting, the victim tends to panic, thus disturbing \r\nother bees and causing them to sting. The new stings create more of the chemical isoamyl acetate, \r\nwhich attracts more bees and increases the panic level of the victim. Killer bees tend to travel in large \r\n<span style=\"color:red\">(20)</span> clusters or swarms and thus respond in large numbers to the production of isoamyl acetate.",
    "ans_a": "are more deadly than African bees ",
    "ans_b": "are less aggressive than African bees",
    "ans_c": "never attack animals",
    "ans_d": "always attack African bees",
    "answer": "B",
    "SUMBER": "CT1 (10-19)"
  },
  {
    "1": "118",
    "2": "28",
    "number": "118",
    "type": "reading",
    "question": "The pronoun \"They\" in line 13 refers to",
    "text": "<b>Questions 111-120</b>\r\nThese stories of killer bees in the news in recent years have attracted a lot of attention as the \r\nbees have made their way from South America to North America. Killer bees are reputed to be \r\nextremely aggressive in nature, although experts say that their aggression may have been somewhat \r\ninflated.\r\n\r\n<span style=\"color:red\">(5)</span> The killer bee is a hybrid-or combination-of the very mild European strain of honeybee and \r\nthe considerably more aggressive African bee, which was created when the African strain was \r\nimported into Brazil in 1955. The African bees were brought into Brazil because their aggression was \r\nconsidered an advantage: they were far more productive than their European counterparts in that \r\nthey spent a higher percentage of their time working and continued working longer in inclement \r\n<span style=\"color:red\">(10)</span> weather than did the European bees.\r\n\r\nThese killer bees have been known to attack humans and animals, and some fatalities have \r\noccurred. Experts point out, however, that the mixed breed known as the killer bee is actually not at \r\nall as aggressive as the pure African bee. They also point out that the attacks have a chemical cause. A \r\nkiller bee stings only when it has been disturbed; it is not aggressive by nature. However, after a \r\n<span style=\"color:red\">(15)</span> disturbed bee stings and flies away, it leaves its stinger embedded in the victim. In the vicera attached \r\nto the embedded stinger is the chemical isoamyl acetate, which has an odor that attracts other bees. \r\nAs other bees approach the victim of the original sting, the victim tends to panic, thus disturbing \r\nother bees and causing them to sting. The new stings create more of the chemical isoamyl acetate, \r\nwhich attracts more bees and increases the panic level of the victim. Killer bees tend to travel in large \r\n<span style=\"color:red\">(20)</span> clusters or swarms and thus respond in large numbers to the production of isoamyl acetate.",
    "ans_a": "killer bees",
    "ans_b": "humans and animals",
    "ans_c": "fatalities",
    "ans_d": "experts",
    "answer": "D",
    "SUMBER": "CT1 (10-19)"
  },
  {
    "1": "119",
    "2": "29",
    "number": "119",
    "type": "reading",
    "question": "What is NOT mentioned in the passage as a contributing factor in an attack by killer bees?",
    "text": "<b>Questions 111-120</b>\r\nThese stories of killer bees in the news in recent years have attracted a lot of attention as the \r\nbees have made their way from South America to North America. Killer bees are reputed to be \r\nextremely aggressive in nature, although experts say that their aggression may have been somewhat \r\ninflated.\r\n\r\n<span style=\"color:red\">(5)</span> The killer bee is a hybrid-or combination-of the very mild European strain of honeybee and \r\nthe considerably more aggressive African bee, which was created when the African strain was \r\nimported into Brazil in 1955. The African bees were brought into Brazil because their aggression was \r\nconsidered an advantage: they were far more productive than their European counterparts in that \r\nthey spent a higher percentage of their time working and continued working longer in inclement \r\n<span style=\"color:red\">(10)</span> weather than did the European bees.\r\n\r\nThese killer bees have been known to attack humans and animals, and some fatalities have \r\noccurred. Experts point out, however, that the mixed breed known as the killer bee is actually not at \r\nall as aggressive as the pure African bee. They also point out that the attacks have a chemical cause. A \r\nkiller bee stings only when it has been disturbed; it is not aggressive by nature. However, after a \r\n<span style=\"color:red\">(15)</span> disturbed bee stings and flies away, it leaves its stinger embedded in the victim. In the vicera attached \r\nto the embedded stinger is the chemical isoamyl acetate, which has an odor that attracts other bees. \r\nAs other bees approach the victim of the original sting, the victim tends to panic, thus disturbing \r\nother bees and causing them to sting. The new stings create more of the chemical isoamyl acetate, \r\nwhich attracts more bees and increases the panic level of the victim. Killer bees tend to travel in large \r\n<span style=\"color:red\">(20)</span> clusters or swarms and thus respond in large numbers to the production of isoamyl acetate.",
    "ans_a": "Panic by the victim",
    "ans_b": "An odorous chemical ",
    "ans_c": "Disturbance of the bees",
    "ans_d": "Inclement weather",
    "answer": "D",
    "SUMBER": "CT1 (10-19)"
  },
  {
    "1": "120",
    "2": "30",
    "number": "120",
    "type": "reading",
    "question": "Where in the passage does the author describe the size of the groups in which killer bees move?",
    "text": "<b>Questions 111-120</b>\r\nThese stories of killer bees in the news in recent years have attracted a lot of attention as the \r\nbees have made their way from South America to North America. Killer bees are reputed to be \r\nextremely aggressive in nature, although experts say that their aggression may have been somewhat \r\ninflated.\r\n\r\n<span style=\"color:red\">(5)</span> The killer bee is a hybrid-or combination-of the very mild European strain of honeybee and \r\nthe considerably more aggressive African bee, which was created when the African strain was \r\nimported into Brazil in 1955. The African bees were brought into Brazil because their aggression was \r\nconsidered an advantage: they were far more productive than their European counterparts in that \r\nthey spent a higher percentage of their time working and continued working longer in inclement \r\n<span style=\"color:red\">(10)</span> weather than did the European bees.\r\n\r\nThese killer bees have been known to attack humans and animals, and some fatalities have \r\noccurred. Experts point out, however, that the mixed breed known as the killer bee is actually not at \r\nall as aggressive as the pure African bee. They also point out that the attacks have a chemical cause. A \r\nkiller bee stings only when it has been disturbed; it is not aggressive by nature. However, after a \r\n<span style=\"color:red\">(15)</span> disturbed bee stings and flies away, it leaves its stinger embedded in the victim. In the vicera attached \r\nto the embedded stinger is the chemical isoamyl acetate, which has an odor that attracts other bees. \r\nAs other bees approach the victim of the original sting, the victim tends to panic, thus disturbing \r\nother bees and causing them to sting. The new stings create more of the chemical isoamyl acetate, \r\nwhich attracts more bees and increases the panic level of the victim. Killer bees tend to travel in large \r\n<span style=\"color:red\">(20)</span> clusters or swarms and thus respond in large numbers to the production of isoamyl acetate.",
    "ans_a": "Lines 2-4",
    "ans_b": "Lines 5-7",
    "ans_c": "Lines 11-12",
    "ans_d": "Lines 19-20",
    "answer": "D",
    "SUMBER": "CT1 (10-19)"
  },
  {
    "1": "121",
    "2": "31",
    "number": "121",
    "type": "reading",
    "question": "John Peter Zenger was a ",
    "text": "<b>Questions 121-130</b>\r\n\r\nThe First Amendment to the American Constitution\r\ndeclares freedom of the press to all people. Although this \r\nright was not officially adopted until 1791, the famous \r\nZenger trial of 1735 laid the groundwork for insuring this \r\n<span style=\"color:red\">(5)</span> precious freedom. \r\n\r\nJohn Peter Zenger emigrated as a teenager from Germany. \r\nIn 1733, he began publishing the <i>New York Week \r\nJournal</i>. The following year, he was arrested for writing a \r\nstory about the crown-appointed governor of New York \r\n<span style=\"color:red\">(10)</span> While Zenger was imprisoned for nine months, his wife \r\ndutifully published the newspaper every day, bravely telling \r\nthe truth about the corrupt government officials sent by \r\nking to govern the colonies. \r\n\r\nFinally Zenger's long-awaited trial took place. The her hosile\r\n<span style=\"color:red\">(15)</span> judge dismissed Zenger's local lawyers, making it \r\nnecessary for his wife to seek out Andrew Hamilton \r\nprominent Philadelphia lawyer. Persuaded by Hamilton. \r\nthe jury bravely returned a not-guilty verdict, defying the \r\njudge's orders for a conviction. \r\n\r\n<span style=\"color:red\">(20)</span> As a result of determination and bravery on the part of \r\nthe colonists, a lasting victory for freedom of the press was \r\ngained by a young immigrant.",
    "ans_a": "corrupt governor of New York",
    "ans_b": "famous lawyer",
    "ans_c": "brave newspaper publisher",
    "ans_d": "hostile judge",
    "answer": "C",
    "SUMBER": "PT6 (1-10)"
  },
  {
    "1": "122",
    "2": "32",
    "number": "122",
    "type": "reading",
    "question": "What political problem existed in the colonies at that time?",
    "text": "<b>Questions 121-130</b>\r\n\r\nThe First Amendment to the American Constitution\r\ndeclares freedom of the press to all people. Although this \r\nright was not officially adopted until 1791, the famous \r\nZenger trial of 1735 laid the groundwork for insuring this \r\n<span style=\"color:red\">(5)</span> precious freedom. \r\n\r\nJohn Peter Zenger emigrated as a teenager from Germany. \r\nIn 1733, he began publishing the <i>New York Week \r\nJournal</i>. The following year, he was arrested for writing a \r\nstory about the crown-appointed governor of New York \r\n<span style=\"color:red\">(10)</span> While Zenger was imprisoned for nine months, his wife \r\ndutifully published the newspaper every day, bravely telling \r\nthe truth about the corrupt government officials sent by \r\nking to govern the colonies. \r\n\r\nFinally Zenger's long-awaited trial took place. The her hosile\r\n<span style=\"color:red\">(15)</span> judge dismissed Zenger's local lawyers, making it \r\nnecessary for his wife to seek out Andrew Hamilton \r\nprominent Philadelphia lawyer. Persuaded by Hamilton. \r\nthe jury bravely returned a not-guilty verdict, defying the \r\njudge's orders for a conviction. \r\n\r\n<span style=\"color:red\">(20)</span> As a result of determination and bravery on the part of \r\nthe colonists, a lasting victory for freedom of the press was \r\ngained by a young immigrant.",
    "ans_a": "Government officials were corrupt.",
    "ans_b": "Newspapers exaggerated the truth about the political officials.",
    "ans_c": "Lawyers were hostile to witnesses.",
    "ans_d": "All newspaper publishers were imprisoned.",
    "answer": "A",
    "SUMBER": "PT6 (1-10)"
  },
  {
    "1": "123",
    "2": "33",
    "number": "123",
    "type": "reading",
    "question": "How long did it take after the Zenger trial before the concept of freedom of the press was officially adopted?",
    "text": "<b>Questions 121-130</b>\r\n\r\nThe First Amendment to the American Constitution\r\ndeclares freedom of the press to all people. Although this \r\nright was not officially adopted until 1791, the famous \r\nZenger trial of 1735 laid the groundwork for insuring this \r\n<span style=\"color:red\">(5)</span> precious freedom. \r\n\r\nJohn Peter Zenger emigrated as a teenager from Germany. \r\nIn 1733, he began publishing the <i>New York Week \r\nJournal</i>. The following year, he was arrested for writing a \r\nstory about the crown-appointed governor of New York \r\n<span style=\"color:red\">(10)</span> While Zenger was imprisoned for nine months, his wife \r\ndutifully published the newspaper every day, bravely telling \r\nthe truth about the corrupt government officials sent by \r\nking to govern the colonies. \r\n\r\nFinally Zenger's long-awaited trial took place. The her hosile\r\n<span style=\"color:red\">(15)</span> judge dismissed Zenger's local lawyers, making it \r\nnecessary for his wife to seek out Andrew Hamilton \r\nprominent Philadelphia lawyer. Persuaded by Hamilton. \r\nthe jury bravely returned a not-guilty verdict, defying the \r\njudge's orders for a conviction. \r\n\r\n<span style=\"color:red\">(20)</span> As a result of determination and bravery on the part of \r\nthe colonists, a lasting victory for freedom of the press was \r\ngained by a young immigrant.",
    "ans_a": "9 months",
    "ans_b": "1 year",
    "ans_c": "56 years",
    "ans_d": "58 years",
    "answer": "C",
    "SUMBER": "PT6 (1-10)"
  },
  {
    "1": "124",
    "2": "34",
    "number": "124",
    "type": "reading",
    "question": "All of the following are true EXCEPT",
    "text": "<b>Questions 121-130</b>\r\n\r\nThe First Amendment to the American Constitution\r\ndeclares freedom of the press to all people. Although this \r\nright was not officially adopted until 1791, the famous \r\nZenger trial of 1735 laid the groundwork for insuring this \r\n<span style=\"color:red\">(5)</span> precious freedom. \r\n\r\nJohn Peter Zenger emigrated as a teenager from Germany. \r\nIn 1733, he began publishing the <i>New York Week \r\nJournal</i>. The following year, he was arrested for writing a \r\nstory about the crown-appointed governor of New York \r\n<span style=\"color:red\">(10)</span> While Zenger was imprisoned for nine months, his wife \r\ndutifully published the newspaper every day, bravely telling \r\nthe truth about the corrupt government officials sent by \r\nking to govern the colonies. \r\n\r\nFinally Zenger's long-awaited trial took place. The her hosile\r\n<span style=\"color:red\">(15)</span> judge dismissed Zenger's local lawyers, making it \r\nnecessary for his wife to seek out Andrew Hamilton \r\nprominent Philadelphia lawyer. Persuaded by Hamilton. \r\nthe jury bravely returned a not-guilty verdict, defying the \r\njudge's orders for a conviction. \r\n\r\n<span style=\"color:red\">(20)</span> As a result of determination and bravery on the part of \r\nthe colonists, a lasting victory for freedom of the press was \r\ngained by a young immigrant.",
    "ans_a": "despite Zenger's imprisonment, his newspaper continued to be published",
    "ans_b": "Andrew Hamilton encouraged the jury to fight for freedom",
    "ans_c": "the jury obeyed the judge's orders and convicted Zenger",
    "ans_d": "the king controlled the colonies through his own appointed rulers",
    "answer": "C",
    "SUMBER": "PT6 (1-10)"
  },
  {
    "1": "125",
    "2": "35",
    "number": "125",
    "type": "reading",
    "question": "Why was Peter Zenger arrested?",
    "text": "<b>Questions 121-130</b>\r\n\r\nThe First Amendment to the American Constitution\r\ndeclares freedom of the press to all people. Although this \r\nright was not officially adopted until 1791, the famous \r\nZenger trial of 1735 laid the groundwork for insuring this \r\n<span style=\"color:red\">(5)</span> precious freedom. \r\n\r\nJohn Peter Zenger emigrated as a teenager from Germany. \r\nIn 1733, he began publishing the <i>New York Week \r\nJournal</i>. The following year, he was arrested for writing a \r\nstory about the crown-appointed governor of New York \r\n<span style=\"color:red\">(10)</span> While Zenger was imprisoned for nine months, his wife \r\ndutifully published the newspaper every day, bravely telling \r\nthe truth about the corrupt government officials sent by \r\nking to govern the colonies. \r\n\r\nFinally Zenger's long-awaited trial took place. The her hosile\r\n<span style=\"color:red\">(15)</span> judge dismissed Zenger's local lawyers, making it \r\nnecessary for his wife to seek out Andrew Hamilton \r\nprominent Philadelphia lawyer. Persuaded by Hamilton. \r\nthe jury bravely returned a not-guilty verdict, defying the \r\njudge's orders for a conviction. \r\n\r\n<span style=\"color:red\">(20)</span> As a result of determination and bravery on the part of \r\nthe colonists, a lasting victory for freedom of the press was \r\ngained by a young immigrant.",
    "ans_a": "He emigrated from Germany.",
    "ans_b": "His wife published his newspaper for him.",
    "ans_c": "He wrote a story about the governor of New York.",
    "ans_d": "He persuaded a jury to defy the judge's orders.",
    "answer": "C",
    "SUMBER": "PT6 (1-10)"
  },
  {
    "1": "126",
    "2": "36",
    "number": "126",
    "type": "reading",
    "question": "It can be inferred that the judge was hostile toward Pete Zenger because the judge",
    "text": "<b>Questions 121-130</b>\r\n\r\nThe First Amendment to the American Constitution\r\ndeclares freedom of the press to all people. Although this \r\nright was not officially adopted until 1791, the famous \r\nZenger trial of 1735 laid the groundwork for insuring this \r\n<span style=\"color:red\">(5)</span> precious freedom. \r\n\r\nJohn Peter Zenger emigrated as a teenager from Germany. \r\nIn 1733, he began publishing the <i>New York Week \r\nJournal</i>. The following year, he was arrested for writing a \r\nstory about the crown-appointed governor of New York \r\n<span style=\"color:red\">(10)</span> While Zenger was imprisoned for nine months, his wife \r\ndutifully published the newspaper every day, bravely telling \r\nthe truth about the corrupt government officials sent by \r\nking to govern the colonies. \r\n\r\nFinally Zenger's long-awaited trial took place. The her hosile\r\n<span style=\"color:red\">(15)</span> judge dismissed Zenger's local lawyers, making it \r\nnecessary for his wife to seek out Andrew Hamilton \r\nprominent Philadelphia lawyer. Persuaded by Hamilton. \r\nthe jury bravely returned a not-guilty verdict, defying the \r\njudge's orders for a conviction. \r\n\r\n<span style=\"color:red\">(20)</span> As a result of determination and bravery on the part of \r\nthe colonists, a lasting victory for freedom of the press was \r\ngained by a young immigrant.",
    "ans_a": "represented the ideas of the king",
    "ans_b": "hated newspaper publishers",
    "ans_c": "didn't like interference with the Constitution",
    "ans_d": "had appointed the governor about whom Zenger wife",
    "answer": "A",
    "SUMBER": "PT6 (1-10)"
  },
  {
    "1": "127",
    "2": "37",
    "number": "127",
    "type": "reading",
    "question": "The word \"defying\" in line 18 is closest in meaning to",
    "text": "<b>Questions 121-130</b>\r\n\r\nThe First Amendment to the American Constitution\r\ndeclares freedom of the press to all people. Although this \r\nright was not officially adopted until 1791, the famous \r\nZenger trial of 1735 laid the groundwork for insuring this \r\n<span style=\"color:red\">(5)</span> precious freedom. \r\n\r\nJohn Peter Zenger emigrated as a teenager from Germany. \r\nIn 1733, he began publishing the <i>New York Week \r\nJournal</i>. The following year, he was arrested for writing a \r\nstory about the crown-appointed governor of New York \r\n<span style=\"color:red\">(10)</span> While Zenger was imprisoned for nine months, his wife \r\ndutifully published the newspaper every day, bravely telling \r\nthe truth about the corrupt government officials sent by \r\nking to govern the colonies. \r\n\r\nFinally Zenger's long-awaited trial took place. The her hosile\r\n<span style=\"color:red\">(15)</span> judge dismissed Zenger's local lawyers, making it \r\nnecessary for his wife to seek out Andrew Hamilton \r\nprominent Philadelphia lawyer. Persuaded by Hamilton. \r\nthe jury bravely returned a not-guilty verdict, defying the \r\njudge's orders for a conviction. \r\n\r\n<span style=\"color:red\">(20)</span> As a result of determination and bravery on the part of \r\nthe colonists, a lasting victory for freedom of the press was \r\ngained by a young immigrant.",
    "ans_a": "altering",
    "ans_b": "defecting",
    "ans_c": "disregarding",
    "ans_d": "defending",
    "answer": "C",
    "SUMBER": "PT6 (1-10)"
  },
  {
    "1": "128",
    "2": "38",
    "number": "128",
    "type": "reading",
    "question": "In line 11, the word \"dutifully\" is closest in meaning to",
    "text": "<b>Questions 121-130</b>\r\n\r\nThe First Amendment to the American Constitution\r\ndeclares freedom of the press to all people. Although this \r\nright was not officially adopted until 1791, the famous \r\nZenger trial of 1735 laid the groundwork for insuring this \r\n<span style=\"color:red\">(5)</span> precious freedom. \r\n\r\nJohn Peter Zenger emigrated as a teenager from Germany. \r\nIn 1733, he began publishing the <i>New York Week \r\nJournal</i>. The following year, he was arrested for writing a \r\nstory about the crown-appointed governor of New York \r\n<span style=\"color:red\">(10)</span> While Zenger was imprisoned for nine months, his wife \r\ndutifully published the newspaper every day, bravely telling \r\nthe truth about the corrupt government officials sent by \r\nking to govern the colonies. \r\n\r\nFinally Zenger's long-awaited trial took place. The her hosile\r\n<span style=\"color:red\">(15)</span> judge dismissed Zenger's local lawyers, making it \r\nnecessary for his wife to seek out Andrew Hamilton \r\nprominent Philadelphia lawyer. Persuaded by Hamilton. \r\nthe jury bravely returned a not-guilty verdict, defying the \r\njudge's orders for a conviction. \r\n\r\n<span style=\"color:red\">(20)</span> As a result of determination and bravery on the part of \r\nthe colonists, a lasting victory for freedom of the press was \r\ngained by a young immigrant.",
    "ans_a": "faithfully",
    "ans_b": "carelessly",
    "ans_c": "unfortunately",
    "ans_d": "vigorously",
    "answer": "A",
    "SUMBER": "PT6 (1-10)"
  },
  {
    "1": "129",
    "2": "39",
    "number": "129",
    "type": "reading",
    "question": "The main idea of this passage is",
    "text": "<b>Questions 121-130</b>\r\n\r\nThe First Amendment to the American Constitution\r\ndeclares freedom of the press to all people. Although this \r\nright was not officially adopted until 1791, the famous \r\nZenger trial of 1735 laid the groundwork for insuring this \r\n<span style=\"color:red\">(5)</span> precious freedom. \r\n\r\nJohn Peter Zenger emigrated as a teenager from Germany. \r\nIn 1733, he began publishing the <i>New York Week \r\nJournal</i>. The following year, he was arrested for writing a \r\nstory about the crown-appointed governor of New York \r\n<span style=\"color:red\">(10)</span> While Zenger was imprisoned for nine months, his wife \r\ndutifully published the newspaper every day, bravely telling \r\nthe truth about the corrupt government officials sent by \r\nking to govern the colonies. \r\n\r\nFinally Zenger's long-awaited trial took place. The her hosile\r\n<span style=\"color:red\">(15)</span> judge dismissed Zenger's local lawyers, making it \r\nnecessary for his wife to seek out Andrew Hamilton \r\nprominent Philadelphia lawyer. Persuaded by Hamilton. \r\nthe jury bravely returned a not-guilty verdict, defying the \r\njudge's orders for a conviction. \r\n\r\n<span style=\"color:red\">(20)</span> As a result of determination and bravery on the part of \r\nthe colonists, a lasting victory for freedom of the press was \r\ngained by a young immigrant.",
    "ans_a": "Andrew Hamilton gave Americans freedom of the press",
    "ans_b": "Peter Zenger's persistent fight paved the way for freedom of the press",
    "ans_c": "judges don't always get juries to agree with them",
    "ans_d": "Peter Zenger's trial prepared the way for jurors to def judges' orders",
    "answer": "B",
    "SUMBER": "PT6 (1-10)"
  },
  {
    "1": "130",
    "2": "40",
    "number": "130",
    "type": "reading",
    "question": "The passage indicates that the governor was appointed by the monarch of another country in lines",
    "text": "<b>Questions 121-130</b>\r\n\r\nThe First Amendment to the American Constitution\r\ndeclares freedom of the press to all people. Although this \r\nright was not officially adopted until 1791, the famous \r\nZenger trial of 1735 laid the groundwork for insuring this \r\n<span style=\"color:red\">(5)</span> precious freedom. \r\n\r\nJohn Peter Zenger emigrated as a teenager from Germany. \r\nIn 1733, he began publishing the <i>New York Week \r\nJournal</i>. The following year, he was arrested for writing a \r\nstory about the crown-appointed governor of New York \r\n<span style=\"color:red\">(10)</span> While Zenger was imprisoned for nine months, his wife \r\ndutifully published the newspaper every day, bravely telling \r\nthe truth about the corrupt government officials sent by \r\nking to govern the colonies. \r\n\r\nFinally Zenger's long-awaited trial took place. The her hosile\r\n<span style=\"color:red\">(15)</span> judge dismissed Zenger's local lawyers, making it \r\nnecessary for his wife to seek out Andrew Hamilton \r\nprominent Philadelphia lawyer. Persuaded by Hamilton. \r\nthe jury bravely returned a not-guilty verdict, defying the \r\njudge's orders for a conviction. \r\n\r\n<span style=\"color:red\">(20)</span> As a result of determination and bravery on the part of \r\nthe colonists, a lasting victory for freedom of the press was \r\ngained by a young immigrant.",
    "ans_a": "3-5",
    "ans_b": "6-8",
    "ans_c": "8-9",
    "ans_d": "14-16",
    "answer": "C",
    "SUMBER": "PT6 (1-10)"
  },
  {
    "1": "131",
    "2": "41",
    "number": "131",
    "type": "reading",
    "question": "How is the information in the passage organized?",
    "text": "<b>Questions 131-140</b>\r\n\r\nMutualism is a type of symbiosis that occurs when two unlike organisms live together in a state \r\nthat is mutually beneficial. It can exist between two animals, between two plants, or between a plant \r\nand an animal. Mutualism is unlike the symbiotic state of commensalism in that commensalism is a \r\none-sided state in which a host gives and a guest takes, while in mutualism both partners live on a \r\n<span style=\"color:red\">(5)</span> give-and-take basis.\r\n\r\nIn the African wilds, the zebra and the ostrich enjoy a symbiotic relationship that enhances the \r\nability of each of these large land animals to survive. Both serve as prey for the lion, and neither has \r\nthe capability alone to withstand an attack from this fierce hunter. However, when the zebra and the \r\nostrich collaborate in their defense by alerting each other to possible danger from an approaching \r\n<span style=\"color:red\">(10)</span> predator, the lion is rarely able to capture more than the oldest or feeblest of the herd. \r\n\r\nThe complementary physical strengths and weaknesses of the ostrich and the zebra allow them \r\nto work in coordination to avoid succumbing to the lion. The ostrich, the largest flightless bird in the \r\nworld, possesses great speed and keen eyesight, which enable it to spot large predatory animals long \r\nbefore they are able to position themselves to attack. The zebra, with a running speed equal to that of \r\n<span style=\"color:red\">(15)</span> the ostrich, has excellent hearing and a good sense of smell but lacks the sharp eyesight of the ostrich. \r\nWhen ostriches and zebras intermix for grazing, each animal benefits from the ability of the other to \r\ndetect approaching danger. If either animal senses danger, both animals are alerted and take off. \r\nWith the running speed that both of these animals possess, they are able to outrun any predator \r\nexcept the cheetah.",
    "ans_a": "A concept is explained through an extended example.",
    "ans_b": "A series of chronological events is presented.",
    "ans_c": "Two examples are compared and contrasted",
    "ans_d": "Two opposing theories are explained",
    "answer": "A",
    "SUMBER": "CT5 (31-40)"
  },
  {
    "1": "132",
    "2": "42",
    "number": "132",
    "type": "reading",
    "question": "The word \"unlike\" in line 1 is closest in meaning to",
    "text": "<b>Questions 131-140</b>\r\n\r\nMutualism is a type of symbiosis that occurs when two unlike organisms live together in a state \r\nthat is mutually beneficial. It can exist between two animals, between two plants, or between a plant \r\nand an animal. Mutualism is unlike the symbiotic state of commensalism in that commensalism is a \r\none-sided state in which a host gives and a guest takes, while in mutualism both partners live on a \r\n<span style=\"color:red\">(5)</span> give-and-take basis.\r\n\r\nIn the African wilds, the zebra and the ostrich enjoy a symbiotic relationship that enhances the \r\nability of each of these large land animals to survive. Both serve as prey for the lion, and neither has \r\nthe capability alone to withstand an attack from this fierce hunter. However, when the zebra and the \r\nostrich collaborate in their defense by alerting each other to possible danger from an approaching \r\n<span style=\"color:red\">(10)</span> predator, the lion is rarely able to capture more than the oldest or feeblest of the herd. \r\n\r\nThe complementary physical strengths and weaknesses of the ostrich and the zebra allow them \r\nto work in coordination to avoid succumbing to the lion. The ostrich, the largest flightless bird in the \r\nworld, possesses great speed and keen eyesight, which enable it to spot large predatory animals long \r\nbefore they are able to position themselves to attack. The zebra, with a running speed equal to that of \r\n<span style=\"color:red\">(15)</span> the ostrich, has excellent hearing and a good sense of smell but lacks the sharp eyesight of the ostrich. \r\nWhen ostriches and zebras intermix for grazing, each animal benefits from the ability of the other to \r\ndetect approaching danger. If either animal senses danger, both animals are alerted and take off. \r\nWith the running speed that both of these animals possess, they are able to outrun any predator \r\nexcept the cheetah.",
    "ans_a": "unfriendly",
    "ans_b": "dissimilar ",
    "ans_c": "potential",
    "ans_d": "hated",
    "answer": "B",
    "SUMBER": "CT5 (31-40)"
  },
  {
    "1": "133",
    "2": "43",
    "number": "133",
    "type": "reading",
    "question": "The word \"beneficial\" in line 2 is closest in meaning to",
    "text": "<b>Questions 131-140</b>\r\n\r\nMutualism is a type of symbiosis that occurs when two unlike organisms live together in a state \r\nthat is mutually beneficial. It can exist between two animals, between two plants, or between a plant \r\nand an animal. Mutualism is unlike the symbiotic state of commensalism in that commensalism is a \r\none-sided state in which a host gives and a guest takes, while in mutualism both partners live on a \r\n<span style=\"color:red\">(5)</span> give-and-take basis.\r\n\r\nIn the African wilds, the zebra and the ostrich enjoy a symbiotic relationship that enhances the \r\nability of each of these large land animals to survive. Both serve as prey for the lion, and neither has \r\nthe capability alone to withstand an attack from this fierce hunter. However, when the zebra and the \r\nostrich collaborate in their defense by alerting each other to possible danger from an approaching \r\n<span style=\"color:red\">(10)</span> predator, the lion is rarely able to capture more than the oldest or feeblest of the herd. \r\n\r\nThe complementary physical strengths and weaknesses of the ostrich and the zebra allow them \r\nto work in coordination to avoid succumbing to the lion. The ostrich, the largest flightless bird in the \r\nworld, possesses great speed and keen eyesight, which enable it to spot large predatory animals long \r\nbefore they are able to position themselves to attack. The zebra, with a running speed equal to that of \r\n<span style=\"color:red\">(15)</span> the ostrich, has excellent hearing and a good sense of smell but lacks the sharp eyesight of the ostrich. \r\nWhen ostriches and zebras intermix for grazing, each animal benefits from the ability of the other to \r\ndetect approaching danger. If either animal senses danger, both animals are alerted and take off. \r\nWith the running speed that both of these animals possess, they are able to outrun any predator \r\nexcept the cheetah.",
    "ans_a": "distinctive",
    "ans_b": "meaningful",
    "ans_c": "helpful",
    "ans_d": "understood",
    "answer": "C",
    "SUMBER": "CT5 (31-40)"
  },
  {
    "1": "134",
    "2": "44",
    "number": "134",
    "type": "reading",
    "question": "What is \"commensalism\" in line 3?",
    "text": "<b>Questions 131-140</b>\r\n\r\nMutualism is a type of symbiosis that occurs when two unlike organisms live together in a state \r\nthat is mutually beneficial. It can exist between two animals, between two plants, or between a plant \r\nand an animal. Mutualism is unlike the symbiotic state of commensalism in that commensalism is a \r\none-sided state in which a host gives and a guest takes, while in mutualism both partners live on a \r\n<span style=\"color:red\">(5)</span> give-and-take basis.\r\n\r\nIn the African wilds, the zebra and the ostrich enjoy a symbiotic relationship that enhances the \r\nability of each of these large land animals to survive. Both serve as prey for the lion, and neither has \r\nthe capability alone to withstand an attack from this fierce hunter. However, when the zebra and the \r\nostrich collaborate in their defense by alerting each other to possible danger from an approaching \r\n<span style=\"color:red\">(10)</span> predator, the lion is rarely able to capture more than the oldest or feeblest of the herd. \r\n\r\nThe complementary physical strengths and weaknesses of the ostrich and the zebra allow them \r\nto work in coordination to avoid succumbing to the lion. The ostrich, the largest flightless bird in the \r\nworld, possesses great speed and keen eyesight, which enable it to spot large predatory animals long \r\nbefore they are able to position themselves to attack. The zebra, with a running speed equal to that of \r\n<span style=\"color:red\">(15)</span> the ostrich, has excellent hearing and a good sense of smell but lacks the sharp eyesight of the ostrich. \r\nWhen ostriches and zebras intermix for grazing, each animal benefits from the ability of the other to \r\ndetect approaching danger. If either animal senses danger, both animals are alerted and take off. \r\nWith the running speed that both of these animals possess, they are able to outrun any predator \r\nexcept the cheetah.",
    "ans_a": "A specific kind of mutualistic relationship",
    "ans_b": "A relationship that is beneficial to both partners",
    "ans_c": "A relationship in which both partners are hurt",
    "ans_d": "A relationship that is beneficial to only one partner",
    "answer": "D",
    "SUMBER": "CT5 (31-40)"
  },
  {
    "1": "135",
    "2": "45",
    "number": "135",
    "type": "reading",
    "question": "What is implied in the passage about the zebra and the ostrich?",
    "text": "<b>Questions 131-140</b>\r\n\r\nMutualism is a type of symbiosis that occurs when two unlike organisms live together in a state \r\nthat is mutually beneficial. It can exist between two animals, between two plants, or between a plant \r\nand an animal. Mutualism is unlike the symbiotic state of commensalism in that commensalism is a \r\none-sided state in which a host gives and a guest takes, while in mutualism both partners live on a \r\n<span style=\"color:red\">(5)</span> give-and-take basis.\r\n\r\nIn the African wilds, the zebra and the ostrich enjoy a symbiotic relationship that enhances the \r\nability of each of these large land animals to survive. Both serve as prey for the lion, and neither has \r\nthe capability alone to withstand an attack from this fierce hunter. However, when the zebra and the \r\nostrich collaborate in their defense by alerting each other to possible danger from an approaching \r\n<span style=\"color:red\">(10)</span> predator, the lion is rarely able to capture more than the oldest or feeblest of the herd. \r\n\r\nThe complementary physical strengths and weaknesses of the ostrich and the zebra allow them \r\nto work in coordination to avoid succumbing to the lion. The ostrich, the largest flightless bird in the \r\nworld, possesses great speed and keen eyesight, which enable it to spot large predatory animals long \r\nbefore they are able to position themselves to attack. The zebra, with a running speed equal to that of \r\n<span style=\"color:red\">(15)</span> the ostrich, has excellent hearing and a good sense of smell but lacks the sharp eyesight of the ostrich. \r\nWhen ostriches and zebras intermix for grazing, each animal benefits from the ability of the other to \r\ndetect approaching danger. If either animal senses danger, both animals are alerted and take off. \r\nWith the running speed that both of these animals possess, they are able to outrun any predator \r\nexcept the cheetah.",
    "ans_a": "They have a commensalist relationship.",
    "ans_b": "The lion is prey for both of them. ",
    "ans_c": "They share a mutualistic relationship. ",
    "ans_d": "Their relationship is not symbiotic.",
    "answer": "C",
    "SUMBER": "CT5 (31-40)"
  },
  {
    "1": "136",
    "2": "46",
    "number": "136",
    "type": "reading",
    "question": "What is stated in the passage about the lion?",
    "text": "<b>Questions 131-140</b>\r\n\r\nMutualism is a type of symbiosis that occurs when two unlike organisms live together in a state \r\nthat is mutually beneficial. It can exist between two animals, between two plants, or between a plant \r\nand an animal. Mutualism is unlike the symbiotic state of commensalism in that commensalism is a \r\none-sided state in which a host gives and a guest takes, while in mutualism both partners live on a \r\n<span style=\"color:red\">(5)</span> give-and-take basis.\r\n\r\nIn the African wilds, the zebra and the ostrich enjoy a symbiotic relationship that enhances the \r\nability of each of these large land animals to survive. Both serve as prey for the lion, and neither has \r\nthe capability alone to withstand an attack from this fierce hunter. However, when the zebra and the \r\nostrich collaborate in their defense by alerting each other to possible danger from an approaching \r\n<span style=\"color:red\">(10)</span> predator, the lion is rarely able to capture more than the oldest or feeblest of the herd. \r\n\r\nThe complementary physical strengths and weaknesses of the ostrich and the zebra allow them \r\nto work in coordination to avoid succumbing to the lion. The ostrich, the largest flightless bird in the \r\nworld, possesses great speed and keen eyesight, which enable it to spot large predatory animals long \r\nbefore they are able to position themselves to attack. The zebra, with a running speed equal to that of \r\n<span style=\"color:red\">(15)</span> the ostrich, has excellent hearing and a good sense of smell but lacks the sharp eyesight of the ostrich. \r\nWhen ostriches and zebras intermix for grazing, each animal benefits from the ability of the other to \r\ndetect approaching danger. If either animal senses danger, both animals are alerted and take off. \r\nWith the running speed that both of these animals possess, they are able to outrun any predator \r\nexcept the cheetah.",
    "ans_a": "It is easily able to capture zebras and ostriches.",
    "ans_b": "It is usually able to catch only weaker zebras and ostriches. ",
    "ans_c": "It never hunts zebras and ostriches",
    "ans_d": "It does not hurt old or feeble zebras and ostriches.",
    "answer": "B",
    "SUMBER": "CT5 (31-40)"
  },
  {
    "1": "137",
    "2": "47",
    "number": "137",
    "type": "reading",
    "question": "The word \"collaborate\" in line 9 is closest in meaning to",
    "text": "<b>Questions 131-140</b>\r\n\r\nMutualism is a type of symbiosis that occurs when two unlike organisms live together in a state \r\nthat is mutually beneficial. It can exist between two animals, between two plants, or between a plant \r\nand an animal. Mutualism is unlike the symbiotic state of commensalism in that commensalism is a \r\none-sided state in which a host gives and a guest takes, while in mutualism both partners live on a \r\n<span style=\"color:red\">(5)</span> give-and-take basis.\r\n\r\nIn the African wilds, the zebra and the ostrich enjoy a symbiotic relationship that enhances the \r\nability of each of these large land animals to survive. Both serve as prey for the lion, and neither has \r\nthe capability alone to withstand an attack from this fierce hunter. However, when the zebra and the \r\nostrich collaborate in their defense by alerting each other to possible danger from an approaching \r\n<span style=\"color:red\">(10)</span> predator, the lion is rarely able to capture more than the oldest or feeblest of the herd. \r\n\r\nThe complementary physical strengths and weaknesses of the ostrich and the zebra allow them \r\nto work in coordination to avoid succumbing to the lion. The ostrich, the largest flightless bird in the \r\nworld, possesses great speed and keen eyesight, which enable it to spot large predatory animals long \r\nbefore they are able to position themselves to attack. The zebra, with a running speed equal to that of \r\n<span style=\"color:red\">(15)</span> the ostrich, has excellent hearing and a good sense of smell but lacks the sharp eyesight of the ostrich. \r\nWhen ostriches and zebras intermix for grazing, each animal benefits from the ability of the other to \r\ndetect approaching danger. If either animal senses danger, both animals are alerted and take off. \r\nWith the running speed that both of these animals possess, they are able to outrun any predator \r\nexcept the cheetah.",
    "ans_a": "work together",
    "ans_b": "make observations",
    "ans_c": "make a stand",
    "ans_d": "run and hide",
    "answer": "A",
    "SUMBER": "CT5 (31-40)"
  },
  {
    "1": "138",
    "2": "48",
    "number": "138",
    "type": "reading",
    "question": "The pronoun \"it\" in line 13 refers to",
    "text": "<b>Questions 131-140</b>\r\n\r\nMutualism is a type of symbiosis that occurs when two unlike organisms live together in a state \r\nthat is mutually beneficial. It can exist between two animals, between two plants, or between a plant \r\nand an animal. Mutualism is unlike the symbiotic state of commensalism in that commensalism is a \r\none-sided state in which a host gives and a guest takes, while in mutualism both partners live on a \r\n<span style=\"color:red\">(5)</span> give-and-take basis.\r\n\r\nIn the African wilds, the zebra and the ostrich enjoy a symbiotic relationship that enhances the \r\nability of each of these large land animals to survive. Both serve as prey for the lion, and neither has \r\nthe capability alone to withstand an attack from this fierce hunter. However, when the zebra and the \r\nostrich collaborate in their defense by alerting each other to possible danger from an approaching \r\n<span style=\"color:red\">(10)</span> predator, the lion is rarely able to capture more than the oldest or feeblest of the herd. \r\n\r\nThe complementary physical strengths and weaknesses of the ostrich and the zebra allow them \r\nto work in coordination to avoid succumbing to the lion. The ostrich, the largest flightless bird in the \r\nworld, possesses great speed and keen eyesight, which enable it to spot large predatory animals long \r\nbefore they are able to position themselves to attack. The zebra, with a running speed equal to that of \r\n<span style=\"color:red\">(15)</span> the ostrich, has excellent hearing and a good sense of smell but lacks the sharp eyesight of the ostrich. \r\nWhen ostriches and zebras intermix for grazing, each animal benefits from the ability of the other to \r\ndetect approaching danger. If either animal senses danger, both animals are alerted and take off. \r\nWith the running speed that both of these animals possess, they are able to outrun any predator \r\nexcept the cheetah.",
    "ans_a": "ostrich",
    "ans_b": "world",
    "ans_c": "speed",
    "ans_d": "eyesight",
    "answer": "A",
    "SUMBER": "CT5 (31-40)"
  },
  {
    "1": "139",
    "2": "49",
    "number": "139",
    "type": "reading",
    "question": "Which of the following is NOT stated in the passage?",
    "text": "<b>Questions 131-140</b>\r\n\r\nMutualism is a type of symbiosis that occurs when two unlike organisms live together in a state \r\nthat is mutually beneficial. It can exist between two animals, between two plants, or between a plant \r\nand an animal. Mutualism is unlike the symbiotic state of commensalism in that commensalism is a \r\none-sided state in which a host gives and a guest takes, while in mutualism both partners live on a \r\n<span style=\"color:red\">(5)</span> give-and-take basis.\r\n\r\nIn the African wilds, the zebra and the ostrich enjoy a symbiotic relationship that enhances the \r\nability of each of these large land animals to survive. Both serve as prey for the lion, and neither has \r\nthe capability alone to withstand an attack from this fierce hunter. However, when the zebra and the \r\nostrich collaborate in their defense by alerting each other to possible danger from an approaching \r\n<span style=\"color:red\">(10)</span> predator, the lion is rarely able to capture more than the oldest or feeblest of the herd. \r\n\r\nThe complementary physical strengths and weaknesses of the ostrich and the zebra allow them \r\nto work in coordination to avoid succumbing to the lion. The ostrich, the largest flightless bird in the \r\nworld, possesses great speed and keen eyesight, which enable it to spot large predatory animals long \r\nbefore they are able to position themselves to attack. The zebra, with a running speed equal to that of \r\n<span style=\"color:red\">(15)</span> the ostrich, has excellent hearing and a good sense of smell but lacks the sharp eyesight of the ostrich. \r\nWhen ostriches and zebras intermix for grazing, each animal benefits from the ability of the other to \r\ndetect approaching danger. If either animal senses danger, both animals are alerted and take off. \r\nWith the running speed that both of these animals possess, they are able to outrun any predator \r\nexcept the cheetah.",
    "ans_a": "The ostrich is unable to fly. ",
    "ans_b": "The ostrich is able to see better than the zebra.",
    "ans_c": "The zebra hears and smells well. ",
    "ans_d": "The zebra is able to run faster than the ostrich.",
    "answer": "D",
    "SUMBER": "CT5 (31-40)"
  },
  {
    "1": "140",
    "2": "50",
    "number": "140",
    "type": "reading",
    "question": "Where in the passage does the author mention the one animal that is faster than both the ostrich and the zebra?",
    "text": "<b>Questions 131-140</b>\r\n\r\nMutualism is a type of symbiosis that occurs when two unlike organisms live together in a state \r\nthat is mutually beneficial. It can exist between two animals, between two plants, or between a plant \r\nand an animal. Mutualism is unlike the symbiotic state of commensalism in that commensalism is a \r\none-sided state in which a host gives and a guest takes, while in mutualism both partners live on a \r\n<span style=\"color:red\">(5)</span> give-and-take basis.\r\n\r\nIn the African wilds, the zebra and the ostrich enjoy a symbiotic relationship that enhances the \r\nability of each of these large land animals to survive. Both serve as prey for the lion, and neither has \r\nthe capability alone to withstand an attack from this fierce hunter. However, when the zebra and the \r\nostrich collaborate in their defense by alerting each other to possible danger from an approaching \r\n<span style=\"color:red\">(10)</span> predator, the lion is rarely able to capture more than the oldest or feeblest of the herd. \r\n\r\nThe complementary physical strengths and weaknesses of the ostrich and the zebra allow them \r\nto work in coordination to avoid succumbing to the lion. The ostrich, the largest flightless bird in the \r\nworld, possesses great speed and keen eyesight, which enable it to spot large predatory animals long \r\nbefore they are able to position themselves to attack. The zebra, with a running speed equal to that of \r\n<span style=\"color:red\">(15)</span> the ostrich, has excellent hearing and a good sense of smell but lacks the sharp eyesight of the ostrich. \r\nWhen ostriches and zebras intermix for grazing, each animal benefits from the ability of the other to \r\ndetect approaching danger. If either animal senses danger, both animals are alerted and take off. \r\nWith the running speed that both of these animals possess, they are able to outrun any predator \r\nexcept the cheetah.",
    "ans_a": "Lines 8-10",
    "ans_b": "Lines 12-14",
    "ans_c": "Lines 14-15",
    "ans_d": "Lines 18-19",
    "answer": "D",
    "SUMBER": "CT5 (31-40)"
  }
]