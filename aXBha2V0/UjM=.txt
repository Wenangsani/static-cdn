 [
  {
    "number": "91",
    "type": "reading",
    "direction": "<b>SECTION 3</b>\r\n<b>READING COMPREHENSION</b>\r\n\r\nThis section is designed to measure your ability to read and understand short passages similar in\r\ntopic and style to those that students are likely to encounter in North American universities and\r\ncolleges. This section contains reading passages and questions about the passages.\r\n\r\n<b><u>Directions</u></b>: In this section you will read several passages. Each one is followed by a number of\r\nquestions about it. You are to choose the one best answer, (A), (B), (C), or (D), to each question. Then,\r\non your answer sheet, find the number of the question and fill in the space that corresponds to the\r\nletter of the answer you have chosen.\r\n\r\nAnswer all questions about the information in a passage on the basis of what is stated or implied\r\nin that passage.\r\n\r\nRead the following passage:\r\n\r\nJohn Quincy Adams, who served as the sixth president of the United States from 1825\r\nto 1829, is today recognized for his masterful statesmanship and diplomacy. He dedicated his\r\nlife to public service, both in the presidency and in the various other political offices that he\r\n\r\nheld. Throughout his political career he demonstrated his unswerving belief in freedom of\r\nLine (5) speech, the antislavery cause, and the right of Americans to be free from European and Asian\r\ndomination.\r\n\r\n<b>Example I</b>\r\n\r\nTo what did John Quincy Adams devote his life?\r\n(A) Improving his personal life\r\n(B) Serving the public\r\n(C) Increasing his fortune\r\n(D) Working on his private business\r\n\r\nAccording to the passage, John Quincy Adams “dedicated his life to public service.” Therefore, you\r\nshould choose answer (B).\r\n\r\n<b>Example II</b>\r\nIn line 4, the word “unswerving” is closest in meaning to\r\n\r\n(A) moveable\r\n(B) insignificant\r\n(C) unchanging\r\n(D) diplomatic\r\n\r\nThe passage states that John Quincy Adams demonstrated his unswerving belief “throughout his\r\ncareer.” This implies that the belief did not change. Therefore, you should choose answer (C).\r\n\r\n",
    "question": "The purpose of the passage is to",
    "text": "Questions 91-100\r\n          A rather surprising geographical feature of Antarctica is that a huge freshwater lake, one of the\r\nworld’s largest and deepest, lies hidden there under four kilometers of ice. How known as Lake\r\nVostok, this huge body of water is located under the ice block that comprises Antarctica. The lake is\r\nable in exist in its unfrozen state beneath this block of ice because its waters are warmed by\r\n<i>(5)</i> ( geothermal heat from the earth’s core. The thick glacier above Lake Vostok actually insulated it\r\nfrom the frigid temperatures (the lowest ever recorded on Earth) on the surface.\r\n          The late was first discovered in the 1970s while a research team was conducting an aerial\r\nsurvey of the area. Radio waves from the survey equipment penetrated the ice and revealed a body of\r\nwater of indeterminate size. It was not until much more recently that data collected by satellite made\r\n<i>(10)</i> scientists aware of the tremendous size of the lake; the satellite-borne radar detected an extremely flat\r\nregion where the ice remains level because it is floating on the water of the lake.\r\n          The discovery of such a huge freshwater lake trapped under Antarctica is of interest to the\r\nscientific community because of the potential that the lake contains ancient microbes that have\r\nsurvived for thousands upon thousands of years, unaffected by factors such as nuclear fallout and\r\n<i>(15)</i> elevated ultraviolet light that have affected organisms in more exposed areas. The downside of the\r\ndiscovery, however, lies in the difficulty of conducting research on the lake in such a harsh climate\r\nand in the problems associated with obtaining uncontaminated samples from the lake without\r\nactually exposing the lake to contamination. Scientists are looking for possible ways to accomplish\r\nthis.\r\n",
    "ans_a": "explain how Lake Vostok was discovered",
    "ans_b": "provide satellite data concerning Antarctica",
    "ans_c": "discuss future plans for Lake Vostok",
    "ans_d": "present an unexpected aspect of Antarctica’s geography",
    "answer": "D"
  },
  {
    "number": "92",
    "type": "reading",
    "question": "The word \"lies\" in line 2 could best be replaced by",
    "text": "Questions 91-100\r\n          A rather surprising geographical feature of Antarctica is that a huge freshwater lake, one of the\r\nworld’s largest and deepest, lies hidden there under four kilometers of ice. How known as Lake\r\nVostok, this huge body of water is located under the ice block that comprises Antarctica. The lake is\r\nable in exist in its unfrozen state beneath this block of ice because its waters are warmed by\r\n<i>(5)</i> ( geothermal heat from the earth’s core. The thick glacier above Lake Vostok actually insulated it\r\nfrom the frigid temperatures (the lowest ever recorded on Earth) on the surface.\r\n          The late was first discovered in the 1970s while a research team was conducting an aerial\r\nsurvey of the area. Radio waves from the survey equipment penetrated the ice and revealed a body of\r\nwater of indeterminate size. It was not until much more recently that data collected by satellite made\r\n<i>(10)</i> scientists aware of the tremendous size of the lake; the satellite-borne radar detected an extremely flat\r\nregion where the ice remains level because it is floating on the water of the lake.\r\n          The discovery of such a huge freshwater lake trapped under Antarctica is of interest to the\r\nscientific community because of the potential that the lake contains ancient microbes that have\r\nsurvived for thousands upon thousands of years, unaffected by factors such as nuclear fallout and\r\n<i>(15)</i> elevated ultraviolet light that have affected organisms in more exposed areas. The downside of the\r\ndiscovery, however, lies in the difficulty of conducting research on the lake in such a harsh climate\r\nand in the problems associated with obtaining uncontaminated samples from the lake without\r\nactually exposing the lake to contamination. Scientists are looking for possible ways to accomplish\r\nthis.\r\n",
    "ans_a": "sleeps",
    "ans_b": "sits",
    "ans_c": "tells falsehoods",
    "ans_d": "inclines",
    "answer": "B"
  },
  {
    "number": "93",
    "type": "reading",
    "question": "What is true of Lake Vostok?",
    "text": "Questions 91-100\r\n          A rather surprising geographical feature of Antarctica is that a huge freshwater lake, one of the\r\nworld’s largest and deepest, lies hidden there under four kilometers of ice. How known as Lake\r\nVostok, this huge body of water is located under the ice block that comprises Antarctica. The lake is\r\nable in exist in its unfrozen state beneath this block of ice because its waters are warmed by\r\n<i>(5)</i> ( geothermal heat from the earth’s core. The thick glacier above Lake Vostok actually insulated it\r\nfrom the frigid temperatures (the lowest ever recorded on Earth) on the surface.\r\n          The late was first discovered in the 1970s while a research team was conducting an aerial\r\nsurvey of the area. Radio waves from the survey equipment penetrated the ice and revealed a body of\r\nwater of indeterminate size. It was not until much more recently that data collected by satellite made\r\n<i>(10)</i> scientists aware of the tremendous size of the lake; the satellite-borne radar detected an extremely flat\r\nregion where the ice remains level because it is floating on the water of the lake.\r\n          The discovery of such a huge freshwater lake trapped under Antarctica is of interest to the\r\nscientific community because of the potential that the lake contains ancient microbes that have\r\nsurvived for thousands upon thousands of years, unaffected by factors such as nuclear fallout and\r\n<i>(15)</i> elevated ultraviolet light that have affected organisms in more exposed areas. The downside of the\r\ndiscovery, however, lies in the difficulty of conducting research on the lake in such a harsh climate\r\nand in the problems associated with obtaining uncontaminated samples from the lake without\r\nactually exposing the lake to contamination. Scientists are looking for possible ways to accomplish\r\nthis.\r\n",
    "ans_a": "It is completely frozen.",
    "ans_b": "It is not a saltwater lake.",
    "ans_c": "It is beneath a thick slab of ice.",
    "ans_d": "It is heated by the sun.",
    "answer": "C"
  },
  {
    "number": "94",
    "type": "reading",
    "question": "Which of the following is closest in meaning to “frigid” in line 6?",
    "text": "Questions 91-100\r\n          A rather surprising geographical feature of Antarctica is that a huge freshwater lake, one of the\r\nworld’s largest and deepest, lies hidden there under four kilometers of ice. How known as Lake\r\nVostok, this huge body of water is located under the ice block that comprises Antarctica. The lake is\r\nable in exist in its unfrozen state beneath this block of ice because its waters are warmed by\r\n<i>(5)</i> ( geothermal heat from the earth’s core. The thick glacier above Lake Vostok actually insulated it\r\nfrom the frigid temperatures (the lowest ever recorded on Earth) on the surface.\r\n          The late was first discovered in the 1970s while a research team was conducting an aerial\r\nsurvey of the area. Radio waves from the survey equipment penetrated the ice and revealed a body of\r\nwater of indeterminate size. It was not until much more recently that data collected by satellite made\r\n<i>(10)</i> scientists aware of the tremendous size of the lake; the satellite-borne radar detected an extremely flat\r\nregion where the ice remains level because it is floating on the water of the lake.\r\n          The discovery of such a huge freshwater lake trapped under Antarctica is of interest to the\r\nscientific community because of the potential that the lake contains ancient microbes that have\r\nsurvived for thousands upon thousands of years, unaffected by factors such as nuclear fallout and\r\n<i>(15)</i> elevated ultraviolet light that have affected organisms in more exposed areas. The downside of the\r\ndiscovery, however, lies in the difficulty of conducting research on the lake in such a harsh climate\r\nand in the problems associated with obtaining uncontaminated samples from the lake without\r\nactually exposing the lake to contamination. Scientists are looking for possible ways to accomplish\r\nthis.\r\n",
    "ans_a": "Extremely cold",
    "ans_b": "Never changing",
    "ans_c": "Quite harsh",
    "ans_d": "Rarely recorded",
    "answer": "A"
  },
  {
    "number": "95",
    "type": "reading",
    "question": "All of the following are true about the 1970 survey of Antarctica EXCEPT that it",
    "text": "Questions 91-100\r\n          A rather surprising geographical feature of Antarctica is that a huge freshwater lake, one of the\r\nworld’s largest and deepest, lies hidden there under four kilometers of ice. How known as Lake\r\nVostok, this huge body of water is located under the ice block that comprises Antarctica. The lake is\r\nable in exist in its unfrozen state beneath this block of ice because its waters are warmed by\r\n<i>(5)</i> ( geothermal heat from the earth’s core. The thick glacier above Lake Vostok actually insulated it\r\nfrom the frigid temperatures (the lowest ever recorded on Earth) on the surface.\r\n          The late was first discovered in the 1970s while a research team was conducting an aerial\r\nsurvey of the area. Radio waves from the survey equipment penetrated the ice and revealed a body of\r\nwater of indeterminate size. It was not until much more recently that data collected by satellite made\r\n<i>(10)</i> scientists aware of the tremendous size of the lake; the satellite-borne radar detected an extremely flat\r\nregion where the ice remains level because it is floating on the water of the lake.\r\n          The discovery of such a huge freshwater lake trapped under Antarctica is of interest to the\r\nscientific community because of the potential that the lake contains ancient microbes that have\r\nsurvived for thousands upon thousands of years, unaffected by factors such as nuclear fallout and\r\n<i>(15)</i> elevated ultraviolet light that have affected organisms in more exposed areas. The downside of the\r\ndiscovery, however, lies in the difficulty of conducting research on the lake in such a harsh climate\r\nand in the problems associated with obtaining uncontaminated samples from the lake without\r\nactually exposing the lake to contamination. Scientists are looking for possible ways to accomplish\r\nthis.\r\n",
    "ans_a": "was conducted by air",
    "ans_b": "made use of radio waves",
    "ans_c": "did not measure the exact size of the lake",
    "ans_d": "was controlled by a satellite",
    "answer": "D"
  },
  {
    "number": "96",
    "type": "reading",
    "question": "It can be inferred from the passage that the ice would not be flat if",
    "text": "Questions 91-100\r\n          A rather surprising geographical feature of Antarctica is that a huge freshwater lake, one of the\r\nworld’s largest and deepest, lies hidden there under four kilometers of ice. How known as Lake\r\nVostok, this huge body of water is located under the ice block that comprises Antarctica. The lake is\r\nable in exist in its unfrozen state beneath this block of ice because its waters are warmed by\r\n<i>(5)</i> ( geothermal heat from the earth’s core. The thick glacier above Lake Vostok actually insulated it\r\nfrom the frigid temperatures (the lowest ever recorded on Earth) on the surface.\r\n          The late was first discovered in the 1970s while a research team was conducting an aerial\r\nsurvey of the area. Radio waves from the survey equipment penetrated the ice and revealed a body of\r\nwater of indeterminate size. It was not until much more recently that data collected by satellite made\r\n<i>(10)</i> scientists aware of the tremendous size of the lake; the satellite-borne radar detected an extremely flat\r\nregion where the ice remains level because it is floating on the water of the lake.\r\n          The discovery of such a huge freshwater lake trapped under Antarctica is of interest to the\r\nscientific community because of the potential that the lake contains ancient microbes that have\r\nsurvived for thousands upon thousands of years, unaffected by factors such as nuclear fallout and\r\n<i>(15)</i> elevated ultraviolet light that have affected organisms in more exposed areas. The downside of the\r\ndiscovery, however, lies in the difficulty of conducting research on the lake in such a harsh climate\r\nand in the problems associated with obtaining uncontaminated samples from the lake without\r\nactually exposing the lake to contamination. Scientists are looking for possible ways to accomplish\r\nthis.\r\n",
    "ans_a": "there were no lake",
    "ans_b": "the lake were not so big",
    "ans_c": "Antarctica were not so cold",
    "ans_d": "radio waves were not used",
    "answer": "A"
  },
  {
    "number": "97",
    "type": "reading",
    "question": "The word “microbes” in line 13 could best be replaced by which of the following?",
    "text": "Questions 91-100\r\n          A rather surprising geographical feature of Antarctica is that a huge freshwater lake, one of the\r\nworld’s largest and deepest, lies hidden there under four kilometers of ice. How known as Lake\r\nVostok, this huge body of water is located under the ice block that comprises Antarctica. The lake is\r\nable in exist in its unfrozen state beneath this block of ice because its waters are warmed by\r\n<i>(5)</i> ( geothermal heat from the earth’s core. The thick glacier above Lake Vostok actually insulated it\r\nfrom the frigid temperatures (the lowest ever recorded on Earth) on the surface.\r\n          The late was first discovered in the 1970s while a research team was conducting an aerial\r\nsurvey of the area. Radio waves from the survey equipment penetrated the ice and revealed a body of\r\nwater of indeterminate size. It was not until much more recently that data collected by satellite made\r\n<i>(10)</i> scientists aware of the tremendous size of the lake; the satellite-borne radar detected an extremely flat\r\nregion where the ice remains level because it is floating on the water of the lake.\r\n          The discovery of such a huge freshwater lake trapped under Antarctica is of interest to the\r\nscientific community because of the potential that the lake contains ancient microbes that have\r\nsurvived for thousands upon thousands of years, unaffected by factors such as nuclear fallout and\r\n<i>(15)</i> elevated ultraviolet light that have affected organisms in more exposed areas. The downside of the\r\ndiscovery, however, lies in the difficulty of conducting research on the lake in such a harsh climate\r\nand in the problems associated with obtaining uncontaminated samples from the lake without\r\nactually exposing the lake to contamination. Scientists are looking for possible ways to accomplish\r\nthis.\r\n",
    "ans_a": "Piece of dust",
    "ans_b": "Trapped bubbles",
    "ans_c": "Tiny organism",
    "ans_d": "Rays of light",
    "answer": "C"
  },
  {
    "number": "98",
    "type": "reading",
    "question": "The passage mentions which of the following as a reason for the importance of Loke Vostok to scientists?",
    "text": "Questions 91-100\r\n          A rather surprising geographical feature of Antarctica is that a huge freshwater lake, one of the\r\nworld’s largest and deepest, lies hidden there under four kilometers of ice. How known as Lake\r\nVostok, this huge body of water is located under the ice block that comprises Antarctica. The lake is\r\nable in exist in its unfrozen state beneath this block of ice because its waters are warmed by\r\n<i>(5)</i> ( geothermal heat from the earth’s core. The thick glacier above Lake Vostok actually insulated it\r\nfrom the frigid temperatures (the lowest ever recorded on Earth) on the surface.\r\n          The late was first discovered in the 1970s while a research team was conducting an aerial\r\nsurvey of the area. Radio waves from the survey equipment penetrated the ice and revealed a body of\r\nwater of indeterminate size. It was not until much more recently that data collected by satellite made\r\n<i>(10)</i> scientists aware of the tremendous size of the lake; the satellite-borne radar detected an extremely flat\r\nregion where the ice remains level because it is floating on the water of the lake.\r\n          The discovery of such a huge freshwater lake trapped under Antarctica is of interest to the\r\nscientific community because of the potential that the lake contains ancient microbes that have\r\nsurvived for thousands upon thousands of years, unaffected by factors such as nuclear fallout and\r\n<i>(15)</i> elevated ultraviolet light that have affected organisms in more exposed areas. The downside of the\r\ndiscovery, however, lies in the difficulty of conducting research on the lake in such a harsh climate\r\nand in the problems associated with obtaining uncontaminated samples from the lake without\r\nactually exposing the lake to contamination. Scientists are looking for possible ways to accomplish\r\nthis.\r\n",
    "ans_a": "It can be studied using radio waves.",
    "ans_b": "It may contain uncontaminated microbes.",
    "ans_c": "It may have elevated levels of ultraviolet light.",
    "ans_d": "It has already been contaminated.",
    "answer": "B"
  },
  {
    "number": "99",
    "type": "reading",
    "question": "The word “downside” in line 15 is closest in meaning to",
    "text": "Questions 91-100\r\n          A rather surprising geographical feature of Antarctica is that a huge freshwater lake, one of the\r\nworld’s largest and deepest, lies hidden there under four kilometers of ice. How known as Lake\r\nVostok, this huge body of water is located under the ice block that comprises Antarctica. The lake is\r\nable in exist in its unfrozen state beneath this block of ice because its waters are warmed by\r\n<i>(5)</i> ( geothermal heat from the earth’s core. The thick glacier above Lake Vostok actually insulated it\r\nfrom the frigid temperatures (the lowest ever recorded on Earth) on the surface.\r\n          The late was first discovered in the 1970s while a research team was conducting an aerial\r\nsurvey of the area. Radio waves from the survey equipment penetrated the ice and revealed a body of\r\nwater of indeterminate size. It was not until much more recently that data collected by satellite made\r\n<i>(10)</i> scientists aware of the tremendous size of the lake; the satellite-borne radar detected an extremely flat\r\nregion where the ice remains level because it is floating on the water of the lake.\r\n          The discovery of such a huge freshwater lake trapped under Antarctica is of interest to the\r\nscientific community because of the potential that the lake contains ancient microbes that have\r\nsurvived for thousands upon thousands of years, unaffected by factors such as nuclear fallout and\r\n<i>(15)</i> elevated ultraviolet light that have affected organisms in more exposed areas. The downside of the\r\ndiscovery, however, lies in the difficulty of conducting research on the lake in such a harsh climate\r\nand in the problems associated with obtaining uncontaminated samples from the lake without\r\nactually exposing the lake to contamination. Scientists are looking for possible ways to accomplish\r\nthis.\r\n",
    "ans_a": "bottom level",
    "ans_b": "negative aspect",
    "ans_c": "underside",
    "ans_d": "buried section",
    "answer": "B"
  },
  {
    "number": "100",
    "type": "reading",
    "question": "The paragraph following the passage most probably discusses",
    "text": "Questions 91-100\r\n          A rather surprising geographical feature of Antarctica is that a huge freshwater lake, one of the\r\nworld’s largest and deepest, lies hidden there under four kilometers of ice. How known as Lake\r\nVostok, this huge body of water is located under the ice block that comprises Antarctica. The lake is\r\nable in exist in its unfrozen state beneath this block of ice because its waters are warmed by\r\n<i>(5)</i> ( geothermal heat from the earth’s core. The thick glacier above Lake Vostok actually insulated it\r\nfrom the frigid temperatures (the lowest ever recorded on Earth) on the surface.\r\n          The late was first discovered in the 1970s while a research team was conducting an aerial\r\nsurvey of the area. Radio waves from the survey equipment penetrated the ice and revealed a body of\r\nwater of indeterminate size. It was not until much more recently that data collected by satellite made\r\n<i>(10)</i> scientists aware of the tremendous size of the lake; the satellite-borne radar detected an extremely flat\r\nregion where the ice remains level because it is floating on the water of the lake.\r\n          The discovery of such a huge freshwater lake trapped under Antarctica is of interest to the\r\nscientific community because of the potential that the lake contains ancient microbes that have\r\nsurvived for thousands upon thousands of years, unaffected by factors such as nuclear fallout and\r\n<i>(15)</i> elevated ultraviolet light that have affected organisms in more exposed areas. The downside of the\r\ndiscovery, however, lies in the difficulty of conducting research on the lake in such a harsh climate\r\nand in the problems associated with obtaining uncontaminated samples from the lake without\r\nactually exposing the lake to contamination. Scientists are looking for possible ways to accomplish\r\nthis.\r\n",
    "ans_a": "further discoveries on the surface of Antarctica",
    "ans_b": "problems with satellite-borne radar equipment",
    "ans_c": "ways to study Lake Vostok without contaminating it",
    "ans_d": "the harsh climate of Antarctica",
    "answer": "C"
  },
  {
    "number": "101",
    "type": "reading",
    "question": "The thyroid gland is called an endocrine gland because it",
    "text": "Questions 101-111\r\n          Glands manufacture and secrete necessary substances.\r\nExocrine glands secrete their products through ducts, but\r\nendocrine glands, or ductless glands, release their products\r\ndirectly into the bloodstream.\r\n<i>(5)</i>      One important endocrine gland is the thyroid gland. It is\r\nin the neck and has two lobes, one on each side of the\r\nwindpipe. The thyroid gland collects iodine from the blood\r\nand produces thyroxine, an important hormone, which it \r\nstores in an inactive form. When thyroxine is needed by the\r\n<i>(10)</i> body, the thyroid gland secretes it directly into the blood-\r\nstream. Thyroxine is combined in the body cells with other\r\nchemicals and affects many functions of the body.\r\n          The thyroid gland may be underactive or overactive,\r\nresulting in problems. An underactive thyroid causes hypo-\r\n<i>(15)</i> thyroidism, while an overactive one causes hyperthyroidism.\r\nThe former problem, called myxedema in adults and cretin-\r\nism in children, causes the growth process to slow down. A\r\ncretin’s body and mind do not grow to their full potential.\r\nHyperthyroidism, on the other hand, results in extreme\r\n<i>(20)</i> nervousness, an increase in heart action, and other prob-\r\nlems.\r\nEither hypothyroidism or hyperthyroidism may result in\r\ngoiter, or an enlarged thyroid gland. A goiter will appear\r\nwhen the body is not getting enough iodine. Goiter is less\r\n<i>(25)</i> common today, since most people use iodized salt.\r\n",
    "ans_a": "has ducts",
    "ans_b": "has lobes",
    "ans_c": "secretes directly into the bloodstream",
    "ans_d": "is located in the neck",
    "answer": "C"
  },
  {
    "number": "102",
    "type": "reading",
    "question": "The word “it” in tine 8 refers to",
    "text": "Questions 101-111\r\n          Glands manufacture and secrete necessary substances.\r\nExocrine glands secrete their products through ducts, but\r\nendocrine glands, or ductless glands, release their products\r\ndirectly into the bloodstream.\r\n<i>(5)</i>      One important endocrine gland is the thyroid gland. It is\r\nin the neck and has two lobes, one on each side of the\r\nwindpipe. The thyroid gland collects iodine from the blood\r\nand produces thyroxine, an important hormone, which it \r\nstores in an inactive form. When thyroxine is needed by the\r\n<i>(10)</i> body, the thyroid gland secretes it directly into the blood-\r\nstream. Thyroxine is combined in the body cells with other\r\nchemicals and affects many functions of the body.\r\n          The thyroid gland may be underactive or overactive,\r\nresulting in problems. An underactive thyroid causes hypo-\r\n<i>(15)</i> thyroidism, while an overactive one causes hyperthyroidism.\r\nThe former problem, called myxedema in adults and cretin-\r\nism in children, causes the growth process to slow down. A\r\ncretin’s body and mind do not grow to their full potential.\r\nHyperthyroidism, on the other hand, results in extreme\r\n<i>(20)</i> nervousness, an increase in heart action, and other prob-\r\nlems.\r\nEither hypothyroidism or hyperthyroidism may result in\r\ngoiter, or an enlarged thyroid gland. A goiter will appear\r\nwhen the body is not getting enough iodine. Goiter is less\r\n<i>(25)</i> common today, since most people use iodized salt.\r\n",
    "ans_a": "thyroxine",
    "ans_b": "blood",
    "ans_c": "iodine",
    "ans_d": "thyroid gland",
    "answer": "D"
  },
  {
    "number": "103",
    "type": "reading",
    "question": "A cretin is",
    "text": "Questions 101-111\r\n          Glands manufacture and secrete necessary substances.\r\nExocrine glands secrete their products through ducts, but\r\nendocrine glands, or ductless glands, release their products\r\ndirectly into the bloodstream.\r\n<i>(5)</i>      One important endocrine gland is the thyroid gland. It is\r\nin the neck and has two lobes, one on each side of the\r\nwindpipe. The thyroid gland collects iodine from the blood\r\nand produces thyroxine, an important hormone, which it \r\nstores in an inactive form. When thyroxine is needed by the\r\n<i>(10)</i> body, the thyroid gland secretes it directly into the blood-\r\nstream. Thyroxine is combined in the body cells with other\r\nchemicals and affects many functions of the body.\r\n          The thyroid gland may be underactive or overactive,\r\nresulting in problems. An underactive thyroid causes hypo-\r\n<i>(15)</i> thyroidism, while an overactive one causes hyperthyroidism.\r\nThe former problem, called myxedema in adults and cretin-\r\nism in children, causes the growth process to slow down. A\r\ncretin’s body and mind do not grow to their full potential.\r\nHyperthyroidism, on the other hand, results in extreme\r\n<i>(20)</i> nervousness, an increase in heart action, and other prob-\r\nlems.\r\nEither hypothyroidism or hyperthyroidism may result in\r\ngoiter, or an enlarged thyroid gland. A goiter will appear\r\nwhen the body is not getting enough iodine. Goiter is less\r\n<i>(25)</i> common today, since most people use iodized salt.\r\n",
    "ans_a": "a child with hyperthyroidism",
    "ans_b": "an adult with an underperforming thyroid gland",
    "ans_c": "a young person with hypothyroidism",
    "ans_d": "an extremely irritable child",
    "answer": "C"
  },
  {
    "number": "104",
    "type": "reading",
    "question": "Which of the following is a probable result of myxedema?",
    "text": "Questions 101-111\r\n          Glands manufacture and secrete necessary substances.\r\nExocrine glands secrete their products through ducts, but\r\nendocrine glands, or ductless glands, release their products\r\ndirectly into the bloodstream.\r\n<i>(5)</i>      One important endocrine gland is the thyroid gland. It is\r\nin the neck and has two lobes, one on each side of the\r\nwindpipe. The thyroid gland collects iodine from the blood\r\nand produces thyroxine, an important hormone, which it \r\nstores in an inactive form. When thyroxine is needed by the\r\n<i>(10)</i> body, the thyroid gland secretes it directly into the blood-\r\nstream. Thyroxine is combined in the body cells with other\r\nchemicals and affects many functions of the body.\r\n          The thyroid gland may be underactive or overactive,\r\nresulting in problems. An underactive thyroid causes hypo-\r\n<i>(15)</i> thyroidism, while an overactive one causes hyperthyroidism.\r\nThe former problem, called myxedema in adults and cretin-\r\nism in children, causes the growth process to slow down. A\r\ncretin’s body and mind do not grow to their full potential.\r\nHyperthyroidism, on the other hand, results in extreme\r\n<i>(20)</i> nervousness, an increase in heart action, and other prob-\r\nlems.\r\nEither hypothyroidism or hyperthyroidism may result in\r\ngoiter, or an enlarged thyroid gland. A goiter will appear\r\nwhen the body is not getting enough iodine. Goiter is less\r\n<i>(25)</i> common today, since most people use iodized salt.\r\n",
    "ans_a": "Sluggishness",
    "ans_b": "Hyperactivity",
    "ans_c": "Overproduction of thyroxine",
    "ans_d": "Perspiration",
    "answer": "A"
  },
  {
    "number": "105",
    "type": "reading",
    "question": "The word “former” in line 16 refers to",
    "text": "Questions 101-111\r\n          Glands manufacture and secrete necessary substances.\r\nExocrine glands secrete their products through ducts, but\r\nendocrine glands, or ductless glands, release their products\r\ndirectly into the bloodstream.\r\n<i>(5)</i>      One important endocrine gland is the thyroid gland. It is\r\nin the neck and has two lobes, one on each side of the\r\nwindpipe. The thyroid gland collects iodine from the blood\r\nand produces thyroxine, an important hormone, which it \r\nstores in an inactive form. When thyroxine is needed by the\r\n<i>(10)</i> body, the thyroid gland secretes it directly into the blood-\r\nstream. Thyroxine is combined in the body cells with other\r\nchemicals and affects many functions of the body.\r\n          The thyroid gland may be underactive or overactive,\r\nresulting in problems. An underactive thyroid causes hypo-\r\n<i>(15)</i> thyroidism, while an overactive one causes hyperthyroidism.\r\nThe former problem, called myxedema in adults and cretin-\r\nism in children, causes the growth process to slow down. A\r\ncretin’s body and mind do not grow to their full potential.\r\nHyperthyroidism, on the other hand, results in extreme\r\n<i>(20)</i> nervousness, an increase in heart action, and other prob-\r\nlems.\r\nEither hypothyroidism or hyperthyroidism may result in\r\ngoiter, or an enlarged thyroid gland. A goiter will appear\r\nwhen the body is not getting enough iodine. Goiter is less\r\n<i>(25)</i> common today, since most people use iodized salt.\r\n",
    "ans_a": "hypothyroidism",
    "ans_b": "overactive thyroid",
    "ans_c": "hyperthyroidism",
    "ans_d": "secretion",
    "answer": "A"
  },
  {
    "number": "106",
    "type": "reading",
    "question": "A goiter is",
    "text": "Questions 101-111\r\n          Glands manufacture and secrete necessary substances.\r\nExocrine glands secrete their products through ducts, but\r\nendocrine glands, or ductless glands, release their products\r\ndirectly into the bloodstream.\r\n<i>(5)</i>      One important endocrine gland is the thyroid gland. It is\r\nin the neck and has two lobes, one on each side of the\r\nwindpipe. The thyroid gland collects iodine from the blood\r\nand produces thyroxine, an important hormone, which it \r\nstores in an inactive form. When thyroxine is needed by the\r\n<i>(10)</i> body, the thyroid gland secretes it directly into the blood-\r\nstream. Thyroxine is combined in the body cells with other\r\nchemicals and affects many functions of the body.\r\n          The thyroid gland may be underactive or overactive,\r\nresulting in problems. An underactive thyroid causes hypo-\r\n<i>(15)</i> thyroidism, while an overactive one causes hyperthyroidism.\r\nThe former problem, called myxedema in adults and cretin-\r\nism in children, causes the growth process to slow down. A\r\ncretin’s body and mind do not grow to their full potential.\r\nHyperthyroidism, on the other hand, results in extreme\r\n<i>(20)</i> nervousness, an increase in heart action, and other prob-\r\nlems.\r\nEither hypothyroidism or hyperthyroidism may result in\r\ngoiter, or an enlarged thyroid gland. A goiter will appear\r\nwhen the body is not getting enough iodine. Goiter is less\r\n<i>(25)</i> common today, since most people use iodized salt.\r\n",
    "ans_a": "a person with myxedema",
    "ans_b": "a swollen thyroid gland",
    "ans_c": "an underactive thyroid grand",
    "ans_d": "a chemical",
    "answer": "B"
  },
  {
    "number": "107",
    "type": "reading",
    "question": "Exocrine and endocrine grands are distinguished from each other by whether they",
    "text": "Questions 101-111\r\n          Glands manufacture and secrete necessary substances.\r\nExocrine glands secrete their products through ducts, but\r\nendocrine glands, or ductless glands, release their products\r\ndirectly into the bloodstream.\r\n<i>(5)</i>      One important endocrine gland is the thyroid gland. It is\r\nin the neck and has two lobes, one on each side of the\r\nwindpipe. The thyroid gland collects iodine from the blood\r\nand produces thyroxine, an important hormone, which it \r\nstores in an inactive form. When thyroxine is needed by the\r\n<i>(10)</i> body, the thyroid gland secretes it directly into the blood-\r\nstream. Thyroxine is combined in the body cells with other\r\nchemicals and affects many functions of the body.\r\n          The thyroid gland may be underactive or overactive,\r\nresulting in problems. An underactive thyroid causes hypo-\r\n<i>(15)</i> thyroidism, while an overactive one causes hyperthyroidism.\r\nThe former problem, called myxedema in adults and cretin-\r\nism in children, causes the growth process to slow down. A\r\ncretin’s body and mind do not grow to their full potential.\r\nHyperthyroidism, on the other hand, results in extreme\r\n<i>(20)</i> nervousness, an increase in heart action, and other prob-\r\nlems.\r\nEither hypothyroidism or hyperthyroidism may result in\r\ngoiter, or an enlarged thyroid gland. A goiter will appear\r\nwhen the body is not getting enough iodine. Goiter is less\r\n<i>(25)</i> common today, since most people use iodized salt.\r\n",
    "ans_a": "secrete through ducts or without ducts",
    "ans_b": "cause hyperthyroidism or hypothyroidism",
    "ans_c": "cause myxedema or cretinism",
    "ans_d": "result in an enlarged or shrunken goiter",
    "answer": "A"
  },
  {
    "number": "108",
    "type": "reading",
    "question": "In line 1, the word “secrete” is closest in meaning to",
    "text": "Questions 101-111\r\n          Glands manufacture and secrete necessary substances.\r\nExocrine glands secrete their products through ducts, but\r\nendocrine glands, or ductless glands, release their products\r\ndirectly into the bloodstream.\r\n<i>(5)</i>      One important endocrine gland is the thyroid gland. It is\r\nin the neck and has two lobes, one on each side of the\r\nwindpipe. The thyroid gland collects iodine from the blood\r\nand produces thyroxine, an important hormone, which it \r\nstores in an inactive form. When thyroxine is needed by the\r\n<i>(10)</i> body, the thyroid gland secretes it directly into the blood-\r\nstream. Thyroxine is combined in the body cells with other\r\nchemicals and affects many functions of the body.\r\n          The thyroid gland may be underactive or overactive,\r\nresulting in problems. An underactive thyroid causes hypo-\r\n<i>(15)</i> thyroidism, while an overactive one causes hyperthyroidism.\r\nThe former problem, called myxedema in adults and cretin-\r\nism in children, causes the growth process to slow down. A\r\ncretin’s body and mind do not grow to their full potential.\r\nHyperthyroidism, on the other hand, results in extreme\r\n<i>(20)</i> nervousness, an increase in heart action, and other prob-\r\nlems.\r\nEither hypothyroidism or hyperthyroidism may result in\r\ngoiter, or an enlarged thyroid gland. A goiter will appear\r\nwhen the body is not getting enough iodine. Goiter is less\r\n<i>(25)</i> common today, since most people use iodized salt.\r\n",
    "ans_a": "indiscernible",
    "ans_b": "emit",
    "ans_c": "display",
    "ans_d": "absorb",
    "answer": "B"
  },
  {
    "number": "109",
    "type": "reading",
    "question": "If a thyroid is not working enough, the illness is known as",
    "text": "Questions 101-111\r\n          Glands manufacture and secrete necessary substances.\r\nExocrine glands secrete their products through ducts, but\r\nendocrine glands, or ductless glands, release their products\r\ndirectly into the bloodstream.\r\n<i>(5)</i>      One important endocrine gland is the thyroid gland. It is\r\nin the neck and has two lobes, one on each side of the\r\nwindpipe. The thyroid gland collects iodine from the blood\r\nand produces thyroxine, an important hormone, which it \r\nstores in an inactive form. When thyroxine is needed by the\r\n<i>(10)</i> body, the thyroid gland secretes it directly into the blood-\r\nstream. Thyroxine is combined in the body cells with other\r\nchemicals and affects many functions of the body.\r\n          The thyroid gland may be underactive or overactive,\r\nresulting in problems. An underactive thyroid causes hypo-\r\n<i>(15)</i> thyroidism, while an overactive one causes hyperthyroidism.\r\nThe former problem, called myxedema in adults and cretin-\r\nism in children, causes the growth process to slow down. A\r\ncretin’s body and mind do not grow to their full potential.\r\nHyperthyroidism, on the other hand, results in extreme\r\n<i>(20)</i> nervousness, an increase in heart action, and other prob-\r\nlems.\r\nEither hypothyroidism or hyperthyroidism may result in\r\ngoiter, or an enlarged thyroid gland. A goiter will appear\r\nwhen the body is not getting enough iodine. Goiter is less\r\n<i>(25)</i> common today, since most people use iodized salt.\r\n",
    "ans_a": "hyperthyroidism",
    "ans_b": "hyperactivity",
    "ans_c": "excretion",
    "ans_d": "hypothyroidism",
    "answer": "D"
  },
  {
    "number": "110",
    "type": "reading",
    "question": "The main idea of the passage is",
    "text": "Questions 101-111\r\n          Glands manufacture and secrete necessary substances.\r\nExocrine glands secrete their products through ducts, but\r\nendocrine glands, or ductless glands, release their products\r\ndirectly into the bloodstream.\r\n<i>(5)</i>      One important endocrine gland is the thyroid gland. It is\r\nin the neck and has two lobes, one on each side of the\r\nwindpipe. The thyroid gland collects iodine from the blood\r\nand produces thyroxine, an important hormone, which it \r\nstores in an inactive form. When thyroxine is needed by the\r\n<i>(10)</i> body, the thyroid gland secretes it directly into the blood-\r\nstream. Thyroxine is combined in the body cells with other\r\nchemicals and affects many functions of the body.\r\n          The thyroid gland may be underactive or overactive,\r\nresulting in problems. An underactive thyroid causes hypo-\r\n<i>(15)</i> thyroidism, while an overactive one causes hyperthyroidism.\r\nThe former problem, called myxedema in adults and cretin-\r\nism in children, causes the growth process to slow down. A\r\ncretin’s body and mind do not grow to their full potential.\r\nHyperthyroidism, on the other hand, results in extreme\r\n<i>(20)</i> nervousness, an increase in heart action, and other prob-\r\nlems.\r\nEither hypothyroidism or hyperthyroidism may result in\r\ngoiter, or an enlarged thyroid gland. A goiter will appear\r\nwhen the body is not getting enough iodine. Goiter is less\r\n<i>(25)</i> common today, since most people use iodized salt.\r\n",
    "ans_a": "how glands work",
    "ans_b": "the function and illnesses of the thyroid gland",
    "ans_c": "secretion with and without glands",
    "ans_d": "the illness of an overactive thyroid gland",
    "answer": "B"
  },
  {
    "number": "111",
    "type": "reading",
    "question": "The function of the thyroid gland is described in lines",
    "text": "Questions 101-111\r\n          Glands manufacture and secrete necessary substances.\r\nExocrine glands secrete their products through ducts, but\r\nendocrine glands, or ductless glands, release their products\r\ndirectly into the bloodstream.\r\n<i>(5)</i>      One important endocrine gland is the thyroid gland. It is\r\nin the neck and has two lobes, one on each side of the\r\nwindpipe. The thyroid gland collects iodine from the blood\r\nand produces thyroxine, an important hormone, which it \r\nstores in an inactive form. When thyroxine is needed by the\r\n<i>(10)</i> body, the thyroid gland secretes it directly into the blood-\r\nstream. Thyroxine is combined in the body cells with other\r\nchemicals and affects many functions of the body.\r\n          The thyroid gland may be underactive or overactive,\r\nresulting in problems. An underactive thyroid causes hypo-\r\n<i>(15)</i> thyroidism, while an overactive one causes hyperthyroidism.\r\nThe former problem, called myxedema in adults and cretin-\r\nism in children, causes the growth process to slow down. A\r\ncretin’s body and mind do not grow to their full potential.\r\nHyperthyroidism, on the other hand, results in extreme\r\n<i>(20)</i> nervousness, an increase in heart action, and other prob-\r\nlems.\r\nEither hypothyroidism or hyperthyroidism may result in\r\ngoiter, or an enlarged thyroid gland. A goiter will appear\r\nwhen the body is not getting enough iodine. Goiter is less\r\n<i>(25)</i> common today, since most people use iodized salt.\r\n",
    "ans_a": "2-4",
    "ans_b": "7-9",
    "ans_c": "13-15",
    "ans_d": "22-25",
    "answer": "B"
  },
  {
    "number": "112",
    "type": "reading",
    "question": "The purpose of this passage is ",
    "text": "Questions 112-120\r\n          Clara Barton is well known for her endeavors as a nurse on the battlefield during the Civil War\r\nand for her role in founding the American Red Cross. She is perhaps nut as well known, however, for\r\nher role in establishing a bureau for tracing missing soldiers following the Civil War.\r\n          At the close of the Civil War, the United States did not have in place any agency responsible for\r\n<i>(5)</i> accounting for what had happened to the innumerable men who had served in the military during the\r\nwar, and many families had no idea as to the fate of their loved ones. Families were forced to agonize\r\nendlessly over where their loved ones were, what kind of shape they were in, whether or not they\r\nwould return, and what had happened to them.\r\n          Clara Barton developed a system fur using print media to publish the names of soldiers known\r\n<i>(10)</i> to have been wounded or killed during various battles of the Civil War. She was prepared to publish\r\nnames that she herself had gathered on the battlefield as well as information gathered from others.\r\nShe made numerous unsuccessful attempts to interest various government officials in her plan.\r\nHowever, it was not until Henry Wilson, a senator from the state of Massachusetts, took up her cause\r\nand presented her plan to President Lincoln that her plan was implemented.\r\n<i>(15)</i>    With Lincoln's assistance, Clara Barton was set up in a small government office with funding for\r\na few clerks and the authority to examine military records. She and her clerks gathered and compiled\r\ninformation from military records and battlefield witnesses and published it in newspapers and\r\nmagazines. Clara Barton operated this missing persons bureau for four years, from the end of the war\r\nin 1865 until 1869. During this period, she and her staff put out more than 100,000 printed lists,\r\n<i>(20)</i> answered more than 60,000 letters, and accounted for more than 20,000 missing soldiers.\r\n",
    "ans_a": "to praise Clara Barton’s work as a battlefield nurse",
    "ans_b": "to outline Clara Barton’s role in establishing the American Red Cross",
    "ans_c": "to malign the role of the U.S. government at the end of the Civil War",
    "ans_d": "to present one of Clara Barton’s lesser-known accomplishments",
    "answer": "D"
  },
  {
    "number": "113",
    "type": "reading",
    "question": "Which of the following is NOT mentioned as one of Clara Barton’s accomplishments?",
    "text": "Questions 112-120\r\n          Clara Barton is well known for her endeavors as a nurse on the battlefield during the Civil War\r\nand for her role in founding the American Red Cross. She is perhaps nut as well known, however, for\r\nher role in establishing a bureau for tracing missing soldiers following the Civil War.\r\n          At the close of the Civil War, the United States did not have in place any agency responsible for\r\n<i>(5)</i> accounting for what had happened to the innumerable men who had served in the military during the\r\nwar, and many families had no idea as to the fate of their loved ones. Families were forced to agonize\r\nendlessly over where their loved ones were, what kind of shape they were in, whether or not they\r\nwould return, and what had happened to them.\r\n          Clara Barton developed a system fur using print media to publish the names of soldiers known\r\n<i>(10)</i> to have been wounded or killed during various battles of the Civil War. She was prepared to publish\r\nnames that she herself had gathered on the battlefield as well as information gathered from others.\r\nShe made numerous unsuccessful attempts to interest various government officials in her plan.\r\nHowever, it was not until Henry Wilson, a senator from the state of Massachusetts, took up her cause\r\nand presented her plan to President Lincoln that her plan was implemented.\r\n<i>(15)</i>    With Lincoln's assistance, Clara Barton was set up in a small government office with funding for\r\na few clerks and the authority to examine military records. She and her clerks gathered and compiled\r\ninformation from military records and battlefield witnesses and published it in newspapers and\r\nmagazines. Clara Barton operated this missing persons bureau for four years, from the end of the war\r\nin 1865 until 1869. During this period, she and her staff put out more than 100,000 printed lists,\r\n<i>(20)</i> answered more than 60,000 letters, and accounted for more than 20,000 missing soldiers.\r\n",
    "ans_a": "That she treated wounded Civil War soldiers",
    "ans_b": "That she was integral to the establishment of the American Red Cross",
    "ans_c": "That she served as an elected government official",
    "ans_d": "That she continued to work for the good of soldiers and their families after the Civil War",
    "answer": "C"
  },
  {
    "number": "114",
    "type": "reading",
    "question": "The word “close” in line 4 could best be replaced by",
    "text": "Questions 112-120\r\n          Clara Barton is well known for her endeavors as a nurse on the battlefield during the Civil War\r\nand for her role in founding the American Red Cross. She is perhaps nut as well known, however, for\r\nher role in establishing a bureau for tracing missing soldiers following the Civil War.\r\n          At the close of the Civil War, the United States did not have in place any agency responsible for\r\n<i>(5)</i> accounting for what had happened to the innumerable men who had served in the military during the\r\nwar, and many families had no idea as to the fate of their loved ones. Families were forced to agonize\r\nendlessly over where their loved ones were, what kind of shape they were in, whether or not they\r\nwould return, and what had happened to them.\r\n          Clara Barton developed a system fur using print media to publish the names of soldiers known\r\n<i>(10)</i> to have been wounded or killed during various battles of the Civil War. She was prepared to publish\r\nnames that she herself had gathered on the battlefield as well as information gathered from others.\r\nShe made numerous unsuccessful attempts to interest various government officials in her plan.\r\nHowever, it was not until Henry Wilson, a senator from the state of Massachusetts, took up her cause\r\nand presented her plan to President Lincoln that her plan was implemented.\r\n<i>(15)</i>    With Lincoln's assistance, Clara Barton was set up in a small government office with funding for\r\na few clerks and the authority to examine military records. She and her clerks gathered and compiled\r\ninformation from military records and battlefield witnesses and published it in newspapers and\r\nmagazines. Clara Barton operated this missing persons bureau for four years, from the end of the war\r\nin 1865 until 1869. During this period, she and her staff put out more than 100,000 printed lists,\r\n<i>(20)</i> answered more than 60,000 letters, and accounted for more than 20,000 missing soldiers.\r\n",
    "ans_a": "near",
    "ans_b": "battle",
    "ans_c": "end",
    "ans_d": "shut",
    "answer": "C"
  },
  {
    "number": "115",
    "type": "reading",
    "question": "What is stated in the passage about the issue of missing persons following the Civil?",
    "text": "Questions 112-120\r\n          Clara Barton is well known for her endeavors as a nurse on the battlefield during the Civil War\r\nand for her role in founding the American Red Cross. She is perhaps nut as well known, however, for\r\nher role in establishing a bureau for tracing missing soldiers following the Civil War.\r\n          At the close of the Civil War, the United States did not have in place any agency responsible for\r\n<i>(5)</i> accounting for what had happened to the innumerable men who had served in the military during the\r\nwar, and many families had no idea as to the fate of their loved ones. Families were forced to agonize\r\nendlessly over where their loved ones were, what kind of shape they were in, whether or not they\r\nwould return, and what had happened to them.\r\n          Clara Barton developed a system fur using print media to publish the names of soldiers known\r\n<i>(10)</i> to have been wounded or killed during various battles of the Civil War. She was prepared to publish\r\nnames that she herself had gathered on the battlefield as well as information gathered from others.\r\nShe made numerous unsuccessful attempts to interest various government officials in her plan.\r\nHowever, it was not until Henry Wilson, a senator from the state of Massachusetts, took up her cause\r\nand presented her plan to President Lincoln that her plan was implemented.\r\n<i>(15)</i>    With Lincoln's assistance, Clara Barton was set up in a small government office with funding for\r\na few clerks and the authority to examine military records. She and her clerks gathered and compiled\r\ninformation from military records and battlefield witnesses and published it in newspapers and\r\nmagazines. Clara Barton operated this missing persons bureau for four years, from the end of the war\r\nin 1865 until 1869. During this period, she and her staff put out more than 100,000 printed lists,\r\n<i>(20)</i> answered more than 60,000 letters, and accounted for more than 20,000 missing soldiers.\r\n",
    "ans_a": "The U.S. government was not officially prepared to deal with the issue.",
    "ans_b": "President Lincoln did not recognize that there was an issue.",
    "ans_c": "One U.S. government agency was responsible for the issue.",
    "ans_d": "U.S. citizens were unaware of the issue.",
    "answer": "A"
  },
  {
    "number": "116",
    "type": "reading",
    "question": "It can be inferred from the passage that the budget for Barton’s missing persons agency was",
    "text": "Questions 112-120\r\n          Clara Barton is well known for her endeavors as a nurse on the battlefield during the Civil War\r\nand for her role in founding the American Red Cross. She is perhaps nut as well known, however, for\r\nher role in establishing a bureau for tracing missing soldiers following the Civil War.\r\n          At the close of the Civil War, the United States did not have in place any agency responsible for\r\n<i>(5)</i> accounting for what had happened to the innumerable men who had served in the military during the\r\nwar, and many families had no idea as to the fate of their loved ones. Families were forced to agonize\r\nendlessly over where their loved ones were, what kind of shape they were in, whether or not they\r\nwould return, and what had happened to them.\r\n          Clara Barton developed a system fur using print media to publish the names of soldiers known\r\n<i>(10)</i> to have been wounded or killed during various battles of the Civil War. She was prepared to publish\r\nnames that she herself had gathered on the battlefield as well as information gathered from others.\r\nShe made numerous unsuccessful attempts to interest various government officials in her plan.\r\nHowever, it was not until Henry Wilson, a senator from the state of Massachusetts, took up her cause\r\nand presented her plan to President Lincoln that her plan was implemented.\r\n<i>(15)</i>    With Lincoln's assistance, Clara Barton was set up in a small government office with funding for\r\na few clerks and the authority to examine military records. She and her clerks gathered and compiled\r\ninformation from military records and battlefield witnesses and published it in newspapers and\r\nmagazines. Clara Barton operated this missing persons bureau for four years, from the end of the war\r\nin 1865 until 1869. During this period, she and her staff put out more than 100,000 printed lists,\r\n<i>(20)</i> answered more than 60,000 letters, and accounted for more than 20,000 missing soldiers.\r\n",
    "ans_a": "quite lavish",
    "ans_b": "open-ended",
    "ans_c": "limited in scope",
    "ans_d": "from private sources",
    "answer": "C"
  },
  {
    "number": "117",
    "type": "reading",
    "question": "The pronoun “it” in line 17 refers to",
    "text": "Questions 112-120\r\n          Clara Barton is well known for her endeavors as a nurse on the battlefield during the Civil War\r\nand for her role in founding the American Red Cross. She is perhaps nut as well known, however, for\r\nher role in establishing a bureau for tracing missing soldiers following the Civil War.\r\n          At the close of the Civil War, the United States did not have in place any agency responsible for\r\n<i>(5)</i> accounting for what had happened to the innumerable men who had served in the military during the\r\nwar, and many families had no idea as to the fate of their loved ones. Families were forced to agonize\r\nendlessly over where their loved ones were, what kind of shape they were in, whether or not they\r\nwould return, and what had happened to them.\r\n          Clara Barton developed a system fur using print media to publish the names of soldiers known\r\n<i>(10)</i> to have been wounded or killed during various battles of the Civil War. She was prepared to publish\r\nnames that she herself had gathered on the battlefield as well as information gathered from others.\r\nShe made numerous unsuccessful attempts to interest various government officials in her plan.\r\nHowever, it was not until Henry Wilson, a senator from the state of Massachusetts, took up her cause\r\nand presented her plan to President Lincoln that her plan was implemented.\r\n<i>(15)</i>    With Lincoln's assistance, Clara Barton was set up in a small government office with funding for\r\na few clerks and the authority to examine military records. She and her clerks gathered and compiled\r\ninformation from military records and battlefield witnesses and published it in newspapers and\r\nmagazines. Clara Barton operated this missing persons bureau for four years, from the end of the war\r\nin 1865 until 1869. During this period, she and her staff put out more than 100,000 printed lists,\r\n<i>(20)</i> answered more than 60,000 letters, and accounted for more than 20,000 missing soldiers.\r\n",
    "ans_a": "funding",
    "ans_b": "authority",
    "ans_c": "information",
    "ans_d": "bureau",
    "answer": "C"
  },
  {
    "number": "118",
    "type": "reading",
    "question": "Which of the following did Clara Barton and her staff accomplish, according to the passage?",
    "text": "Questions 112-120\r\n          Clara Barton is well known for her endeavors as a nurse on the battlefield during the Civil War\r\nand for her role in founding the American Red Cross. She is perhaps nut as well known, however, for\r\nher role in establishing a bureau for tracing missing soldiers following the Civil War.\r\n          At the close of the Civil War, the United States did not have in place any agency responsible for\r\n<i>(5)</i> accounting for what had happened to the innumerable men who had served in the military during the\r\nwar, and many families had no idea as to the fate of their loved ones. Families were forced to agonize\r\nendlessly over where their loved ones were, what kind of shape they were in, whether or not they\r\nwould return, and what had happened to them.\r\n          Clara Barton developed a system fur using print media to publish the names of soldiers known\r\n<i>(10)</i> to have been wounded or killed during various battles of the Civil War. She was prepared to publish\r\nnames that she herself had gathered on the battlefield as well as information gathered from others.\r\nShe made numerous unsuccessful attempts to interest various government officials in her plan.\r\nHowever, it was not until Henry Wilson, a senator from the state of Massachusetts, took up her cause\r\nand presented her plan to President Lincoln that her plan was implemented.\r\n<i>(15)</i>    With Lincoln's assistance, Clara Barton was set up in a small government office with funding for\r\na few clerks and the authority to examine military records. She and her clerks gathered and compiled\r\ninformation from military records and battlefield witnesses and published it in newspapers and\r\nmagazines. Clara Barton operated this missing persons bureau for four years, from the end of the war\r\nin 1865 until 1869. During this period, she and her staff put out more than 100,000 printed lists,\r\n<i>(20)</i> answered more than 60,000 letters, and accounted for more than 20,000 missing soldiers.\r\n",
    "ans_a": "They searched military records.",
    "ans_b": "They responded to 100,000 letters.",
    "ans_c": "They printed a list with 100,000 names.",
    "ans_d": "They talked with 20,000 missing soldiers.",
    "answer": "A"
  },
  {
    "number": "119",
    "type": "reading",
    "question": "Where in the passage does the author indicate the duration of the existence of Clara Barton’s missing persons agency?",
    "text": "Questions 112-120\r\n          Clara Barton is well known for her endeavors as a nurse on the battlefield during the Civil War\r\nand for her role in founding the American Red Cross. She is perhaps nut as well known, however, for\r\nher role in establishing a bureau for tracing missing soldiers following the Civil War.\r\n          At the close of the Civil War, the United States did not have in place any agency responsible for\r\n<i>(5)</i> accounting for what had happened to the innumerable men who had served in the military during the\r\nwar, and many families had no idea as to the fate of their loved ones. Families were forced to agonize\r\nendlessly over where their loved ones were, what kind of shape they were in, whether or not they\r\nwould return, and what had happened to them.\r\n          Clara Barton developed a system fur using print media to publish the names of soldiers known\r\n<i>(10)</i> to have been wounded or killed during various battles of the Civil War. She was prepared to publish\r\nnames that she herself had gathered on the battlefield as well as information gathered from others.\r\nShe made numerous unsuccessful attempts to interest various government officials in her plan.\r\nHowever, it was not until Henry Wilson, a senator from the state of Massachusetts, took up her cause\r\nand presented her plan to President Lincoln that her plan was implemented.\r\n<i>(15)</i>    With Lincoln's assistance, Clara Barton was set up in a small government office with funding for\r\na few clerks and the authority to examine military records. She and her clerks gathered and compiled\r\ninformation from military records and battlefield witnesses and published it in newspapers and\r\nmagazines. Clara Barton operated this missing persons bureau for four years, from the end of the war\r\nin 1865 until 1869. During this period, she and her staff put out more than 100,000 printed lists,\r\n<i>(20)</i> answered more than 60,000 letters, and accounted for more than 20,000 missing soldiers.\r\n",
    "ans_a": "Lines 4-6",
    "ans_b": "Lines 9-10",
    "ans_c": "Lines 15-16",
    "ans_d": "Lines 18-19",
    "answer": "D"
  },
  {
    "number": "120",
    "type": "reading",
    "question": "Which paragraph describes Clara Barron’s efforts to establish a missing persons bureau?",
    "text": "Questions 112-120\r\n          Clara Barton is well known for her endeavors as a nurse on the battlefield during the Civil War\r\nand for her role in founding the American Red Cross. She is perhaps nut as well known, however, for\r\nher role in establishing a bureau for tracing missing soldiers following the Civil War.\r\n          At the close of the Civil War, the United States did not have in place any agency responsible for\r\n<i>(5)</i> accounting for what had happened to the innumerable men who had served in the military during the\r\nwar, and many families had no idea as to the fate of their loved ones. Families were forced to agonize\r\nendlessly over where their loved ones were, what kind of shape they were in, whether or not they\r\nwould return, and what had happened to them.\r\n          Clara Barton developed a system fur using print media to publish the names of soldiers known\r\n<i>(10)</i> to have been wounded or killed during various battles of the Civil War. She was prepared to publish\r\nnames that she herself had gathered on the battlefield as well as information gathered from others.\r\nShe made numerous unsuccessful attempts to interest various government officials in her plan.\r\nHowever, it was not until Henry Wilson, a senator from the state of Massachusetts, took up her cause\r\nand presented her plan to President Lincoln that her plan was implemented.\r\n<i>(15)</i>    With Lincoln's assistance, Clara Barton was set up in a small government office with funding for\r\na few clerks and the authority to examine military records. She and her clerks gathered and compiled\r\ninformation from military records and battlefield witnesses and published it in newspapers and\r\nmagazines. Clara Barton operated this missing persons bureau for four years, from the end of the war\r\nin 1865 until 1869. During this period, she and her staff put out more than 100,000 printed lists,\r\n<i>(20)</i> answered more than 60,000 letters, and accounted for more than 20,000 missing soldiers.\r\n",
    "ans_a": "The first paragraph",
    "ans_b": "The second paragraph",
    "ans_c": "The third paragraph",
    "ans_d": "The last paragraph",
    "answer": "C"
  },
  {
    "number": "121",
    "type": "reading",
    "question": "With which of the following topics is the passage primarily concerned?",
    "text": "Questions 121-130\r\n \r\n          Fertilizer is any substance that can be added to the soil to provide chemical elements\r\nessential for plant nutrition. Natural substances such as animal droppings and straw have been\r\nused as fertilizers for thousands of years, and lime has been used since the Romans intro-\r\nduced it during the Empire. It was not until the nineteenth century, in fact, that chemical fer-\r\n<i>(5)</i> tilizers became popular. Today, both natural and synthetic fertilizers are available in a variety\r\nof forms.\r\n          A complete fertilizer is usually marked with a formula consisting of three numbers, such\r\nas 4-8-2 or 3-6-4, which designate the percentage content of nitrogen, phosphoric acid, and\r\npotash in the order stated.\r\n<i>(10)</i>     Synthetic fertilizers are available in either solid or liquid form. Solids, in the shape of\r\nchemical granules are popular because they are easy to store and apply. Recently, liquids have\r\nshown an increase in popularity, accounting for about 20 percent of the nitrogen fertilizer\r\nused throughout the world. Formerly, powders were also used, but these were found to be\r\nless convenient than either solids or liquids.\r\n<i>(15)</i>    Fertilizers have no harmful effects on the soil, the crop, or the consumer as long as they\r\nare used according to recommendations based on the results of local research. Occasionally,\r\nhowever, farmers may use more fertilizer than necessary, damaging not only the crop but also\r\nthe animals or humans that eat it. Accumulations of fertilizer in the water supply accelerate the\r\ngrowth of algae and, consequently, may disturb the natural cycle of life, contributing to the\r\n<i>(20)</i> death of fish. Too much fertilizer on grass can cause digestive disorders in cattle and in infants\r\nwho drink cow’s milk.\r\n",
    "ans_a": "Local research and harmful effects of fertilizer",
    "ans_b": "Advantages and disadvantages of liquid fertilizer",
    "ans_c": "A formula for the production of fertilizer",
    "ans_d": "Content, form, and effects of fertilizer",
    "answer": "D"
  },
  {
    "number": "122",
    "type": "reading",
    "question": "The word “essential” in line 2 could best be replaced by which of the following?",
    "text": "Questions 121-130\r\n \r\n          Fertilizer is any substance that can be added to the soil to provide chemical elements\r\nessential for plant nutrition. Natural substances such as animal droppings and straw have been\r\nused as fertilizers for thousands of years, and lime has been used since the Romans intro-\r\nduced it during the Empire. It was not until the nineteenth century, in fact, that chemical fer-\r\n<i>(5)</i> tilizers became popular. Today, both natural and synthetic fertilizers are available in a variety\r\nof forms.\r\n          A complete fertilizer is usually marked with a formula consisting of three numbers, such\r\nas 4-8-2 or 3-6-4, which designate the percentage content of nitrogen, phosphoric acid, and\r\npotash in the order stated.\r\n<i>(10)</i>     Synthetic fertilizers are available in either solid or liquid form. Solids, in the shape of\r\nchemical granules are popular because they are easy to store and apply. Recently, liquids have\r\nshown an increase in popularity, accounting for about 20 percent of the nitrogen fertilizer\r\nused throughout the world. Formerly, powders were also used, but these were found to be\r\nless convenient than either solids or liquids.\r\n<i>(15)</i>    Fertilizers have no harmful effects on the soil, the crop, or the consumer as long as they\r\nare used according to recommendations based on the results of local research. Occasionally,\r\nhowever, farmers may use more fertilizer than necessary, damaging not only the crop but also\r\nthe animals or humans that eat it. Accumulations of fertilizer in the water supply accelerate the\r\ngrowth of algae and, consequently, may disturb the natural cycle of life, contributing to the\r\n<i>(20)</i> death of fish. Too much fertilizer on grass can cause digestive disorders in cattle and in infants\r\nwho drink cow’s milk.\r\n",
    "ans_a": "limited",
    "ans_b": "preferred",
    "ans_c": "anticipated",
    "ans_d": "required",
    "answer": "D"
  },
  {
    "number": "123",
    "type": "reading",
    "question": "In the formula 3-6-4",
    "text": "Questions 121-130\r\n \r\n          Fertilizer is any substance that can be added to the soil to provide chemical elements\r\nessential for plant nutrition. Natural substances such as animal droppings and straw have been\r\nused as fertilizers for thousands of years, and lime has been used since the Romans intro-\r\nduced it during the Empire. It was not until the nineteenth century, in fact, that chemical fer-\r\n<i>(5)</i> tilizers became popular. Today, both natural and synthetic fertilizers are available in a variety\r\nof forms.\r\n          A complete fertilizer is usually marked with a formula consisting of three numbers, such\r\nas 4-8-2 or 3-6-4, which designate the percentage content of nitrogen, phosphoric acid, and\r\npotash in the order stated.\r\n<i>(10)</i>     Synthetic fertilizers are available in either solid or liquid form. Solids, in the shape of\r\nchemical granules are popular because they are easy to store and apply. Recently, liquids have\r\nshown an increase in popularity, accounting for about 20 percent of the nitrogen fertilizer\r\nused throughout the world. Formerly, powders were also used, but these were found to be\r\nless convenient than either solids or liquids.\r\n<i>(15)</i>    Fertilizers have no harmful effects on the soil, the crop, or the consumer as long as they\r\nare used according to recommendations based on the results of local research. Occasionally,\r\nhowever, farmers may use more fertilizer than necessary, damaging not only the crop but also\r\nthe animals or humans that eat it. Accumulations of fertilizer in the water supply accelerate the\r\ngrowth of algae and, consequently, may disturb the natural cycle of life, contributing to the\r\n<i>(20)</i> death of fish. Too much fertilizer on grass can cause digestive disorders in cattle and in infants\r\nwho drink cow’s milk.\r\n",
    "ans_a": "the content of nitrogen is greater than that of potash",
    "ans_b": "the content of potash is greater than that of phosphoric acid",
    "ans_c": "the content of phosphoric acid is less than that of nitrogen",
    "ans_d": "the content of nitrogen is less than that of phosphoric acid",
    "answer": "D"
  },
  {
    "number": "124",
    "type": "reading",
    "question": "Which of the following has the smallest percentage content in the formula 4-8-2?",
    "text": "Questions 121-130\r\n \r\n          Fertilizer is any substance that can be added to the soil to provide chemical elements\r\nessential for plant nutrition. Natural substances such as animal droppings and straw have been\r\nused as fertilizers for thousands of years, and lime has been used since the Romans intro-\r\nduced it during the Empire. It was not until the nineteenth century, in fact, that chemical fer-\r\n<i>(5)</i> tilizers became popular. Today, both natural and synthetic fertilizers are available in a variety\r\nof forms.\r\n          A complete fertilizer is usually marked with a formula consisting of three numbers, such\r\nas 4-8-2 or 3-6-4, which designate the percentage content of nitrogen, phosphoric acid, and\r\npotash in the order stated.\r\n<i>(10)</i>     Synthetic fertilizers are available in either solid or liquid form. Solids, in the shape of\r\nchemical granules are popular because they are easy to store and apply. Recently, liquids have\r\nshown an increase in popularity, accounting for about 20 percent of the nitrogen fertilizer\r\nused throughout the world. Formerly, powders were also used, but these were found to be\r\nless convenient than either solids or liquids.\r\n<i>(15)</i>    Fertilizers have no harmful effects on the soil, the crop, or the consumer as long as they\r\nare used according to recommendations based on the results of local research. Occasionally,\r\nhowever, farmers may use more fertilizer than necessary, damaging not only the crop but also\r\nthe animals or humans that eat it. Accumulations of fertilizer in the water supply accelerate the\r\ngrowth of algae and, consequently, may disturb the natural cycle of life, contributing to the\r\n<i>(20)</i> death of fish. Too much fertilizer on grass can cause digestive disorders in cattle and in infants\r\nwho drink cow’s milk.\r\n",
    "ans_a": "Nitrogen",
    "ans_b": "Phosphorus",
    "ans_c": "Acid",
    "ans_d": "Potash",
    "answer": "D"
  },
  {
    "number": "125",
    "type": "reading",
    "question": "What is the percentage of nitrogen in a 5-8-7 formula fertilizer?",
    "text": "Questions 121-130\r\n \r\n          Fertilizer is any substance that can be added to the soil to provide chemical elements\r\nessential for plant nutrition. Natural substances such as animal droppings and straw have been\r\nused as fertilizers for thousands of years, and lime has been used since the Romans intro-\r\nduced it during the Empire. It was not until the nineteenth century, in fact, that chemical fer-\r\n<i>(5)</i> tilizers became popular. Today, both natural and synthetic fertilizers are available in a variety\r\nof forms.\r\n          A complete fertilizer is usually marked with a formula consisting of three numbers, such\r\nas 4-8-2 or 3-6-4, which designate the percentage content of nitrogen, phosphoric acid, and\r\npotash in the order stated.\r\n<i>(10)</i>     Synthetic fertilizers are available in either solid or liquid form. Solids, in the shape of\r\nchemical granules are popular because they are easy to store and apply. Recently, liquids have\r\nshown an increase in popularity, accounting for about 20 percent of the nitrogen fertilizer\r\nused throughout the world. Formerly, powders were also used, but these were found to be\r\nless convenient than either solids or liquids.\r\n<i>(15)</i>    Fertilizers have no harmful effects on the soil, the crop, or the consumer as long as they\r\nare used according to recommendations based on the results of local research. Occasionally,\r\nhowever, farmers may use more fertilizer than necessary, damaging not only the crop but also\r\nthe animals or humans that eat it. Accumulations of fertilizer in the water supply accelerate the\r\ngrowth of algae and, consequently, may disturb the natural cycle of life, contributing to the\r\n<i>(20)</i> death of fish. Too much fertilizer on grass can cause digestive disorders in cattle and in infants\r\nwho drink cow’s milk.\r\n",
    "ans_a": "3 percent",
    "ans_b": "5 percent",
    "ans_c": "7 percent",
    "ans_d": "8 percent",
    "answer": "B"
  },
  {
    "number": "126",
    "type": "reading",
    "question": "The word “designate” in line 8 could be replaced by",
    "text": "Questions 121-130\r\n \r\n          Fertilizer is any substance that can be added to the soil to provide chemical elements\r\nessential for plant nutrition. Natural substances such as animal droppings and straw have been\r\nused as fertilizers for thousands of years, and lime has been used since the Romans intro-\r\nduced it during the Empire. It was not until the nineteenth century, in fact, that chemical fer-\r\n<i>(5)</i> tilizers became popular. Today, both natural and synthetic fertilizers are available in a variety\r\nof forms.\r\n          A complete fertilizer is usually marked with a formula consisting of three numbers, such\r\nas 4-8-2 or 3-6-4, which designate the percentage content of nitrogen, phosphoric acid, and\r\npotash in the order stated.\r\n<i>(10)</i>     Synthetic fertilizers are available in either solid or liquid form. Solids, in the shape of\r\nchemical granules are popular because they are easy to store and apply. Recently, liquids have\r\nshown an increase in popularity, accounting for about 20 percent of the nitrogen fertilizer\r\nused throughout the world. Formerly, powders were also used, but these were found to be\r\nless convenient than either solids or liquids.\r\n<i>(15)</i>    Fertilizers have no harmful effects on the soil, the crop, or the consumer as long as they\r\nare used according to recommendations based on the results of local research. Occasionally,\r\nhowever, farmers may use more fertilizer than necessary, damaging not only the crop but also\r\nthe animals or humans that eat it. Accumulations of fertilizer in the water supply accelerate the\r\ngrowth of algae and, consequently, may disturb the natural cycle of life, contributing to the\r\n<i>(20)</i> death of fish. Too much fertilizer on grass can cause digestive disorders in cattle and in infants\r\nwho drink cow’s milk.\r\n",
    "ans_a": "modify",
    "ans_b": "specify",
    "ans_c": "limit",
    "ans_d": "increase",
    "answer": "B"
  },
  {
    "number": "127",
    "type": "reading",
    "question": "Which of the following statements about fertilizer is true?",
    "text": "Questions 121-130\r\n \r\n          Fertilizer is any substance that can be added to the soil to provide chemical elements\r\nessential for plant nutrition. Natural substances such as animal droppings and straw have been\r\nused as fertilizers for thousands of years, and lime has been used since the Romans intro-\r\nduced it during the Empire. It was not until the nineteenth century, in fact, that chemical fer-\r\n<i>(5)</i> tilizers became popular. Today, both natural and synthetic fertilizers are available in a variety\r\nof forms.\r\n          A complete fertilizer is usually marked with a formula consisting of three numbers, such\r\nas 4-8-2 or 3-6-4, which designate the percentage content of nitrogen, phosphoric acid, and\r\npotash in the order stated.\r\n<i>(10)</i>     Synthetic fertilizers are available in either solid or liquid form. Solids, in the shape of\r\nchemical granules are popular because they are easy to store and apply. Recently, liquids have\r\nshown an increase in popularity, accounting for about 20 percent of the nitrogen fertilizer\r\nused throughout the world. Formerly, powders were also used, but these were found to be\r\nless convenient than either solids or liquids.\r\n<i>(15)</i>    Fertilizers have no harmful effects on the soil, the crop, or the consumer as long as they\r\nare used according to recommendations based on the results of local research. Occasionally,\r\nhowever, farmers may use more fertilizer than necessary, damaging not only the crop but also\r\nthe animals or humans that eat it. Accumulations of fertilizer in the water supply accelerate the\r\ngrowth of algae and, consequently, may disturb the natural cycle of life, contributing to the\r\n<i>(20)</i> death of fish. Too much fertilizer on grass can cause digestive disorders in cattle and in infants\r\nwho drink cow’s milk.\r\n",
    "ans_a": "Powders are more popular than ever.",
    "ans_b": "Solids are difficult to store.",
    "ans_c": "Liquids are increasing in popularity.",
    "ans_d": "Chemical granules are difficult to apply.",
    "answer": "C"
  },
  {
    "number": "128",
    "type": "reading",
    "question": "The word “these” in line 13 refers to",
    "text": "Questions 121-130\r\n \r\n          Fertilizer is any substance that can be added to the soil to provide chemical elements\r\nessential for plant nutrition. Natural substances such as animal droppings and straw have been\r\nused as fertilizers for thousands of years, and lime has been used since the Romans intro-\r\nduced it during the Empire. It was not until the nineteenth century, in fact, that chemical fer-\r\n<i>(5)</i> tilizers became popular. Today, both natural and synthetic fertilizers are available in a variety\r\nof forms.\r\n          A complete fertilizer is usually marked with a formula consisting of three numbers, such\r\nas 4-8-2 or 3-6-4, which designate the percentage content of nitrogen, phosphoric acid, and\r\npotash in the order stated.\r\n<i>(10)</i>     Synthetic fertilizers are available in either solid or liquid form. Solids, in the shape of\r\nchemical granules are popular because they are easy to store and apply. Recently, liquids have\r\nshown an increase in popularity, accounting for about 20 percent of the nitrogen fertilizer\r\nused throughout the world. Formerly, powders were also used, but these were found to be\r\nless convenient than either solids or liquids.\r\n<i>(15)</i>    Fertilizers have no harmful effects on the soil, the crop, or the consumer as long as they\r\nare used according to recommendations based on the results of local research. Occasionally,\r\nhowever, farmers may use more fertilizer than necessary, damaging not only the crop but also\r\nthe animals or humans that eat it. Accumulations of fertilizer in the water supply accelerate the\r\ngrowth of algae and, consequently, may disturb the natural cycle of life, contributing to the\r\n<i>(20)</i> death of fish. Too much fertilizer on grass can cause digestive disorders in cattle and in infants\r\nwho drink cow’s milk.\r\n",
    "ans_a": "powders",
    "ans_b": "solids",
    "ans_c": "liquids",
    "ans_d": "fertilizer",
    "answer": "A"
  },
  {
    "number": "129",
    "type": "reading",
    "question": "The word “convenient” in line 14 is closest in meaning to",
    "text": "Questions 121-130\r\n \r\n          Fertilizer is any substance that can be added to the soil to provide chemical elements\r\nessential for plant nutrition. Natural substances such as animal droppings and straw have been\r\nused as fertilizers for thousands of years, and lime has been used since the Romans intro-\r\nduced it during the Empire. It was not until the nineteenth century, in fact, that chemical fer-\r\n<i>(5)</i> tilizers became popular. Today, both natural and synthetic fertilizers are available in a variety\r\nof forms.\r\n          A complete fertilizer is usually marked with a formula consisting of three numbers, such\r\nas 4-8-2 or 3-6-4, which designate the percentage content of nitrogen, phosphoric acid, and\r\npotash in the order stated.\r\n<i>(10)</i>     Synthetic fertilizers are available in either solid or liquid form. Solids, in the shape of\r\nchemical granules are popular because they are easy to store and apply. Recently, liquids have\r\nshown an increase in popularity, accounting for about 20 percent of the nitrogen fertilizer\r\nused throughout the world. Formerly, powders were also used, but these were found to be\r\nless convenient than either solids or liquids.\r\n<i>(15)</i>    Fertilizers have no harmful effects on the soil, the crop, or the consumer as long as they\r\nare used according to recommendations based on the results of local research. Occasionally,\r\nhowever, farmers may use more fertilizer than necessary, damaging not only the crop but also\r\nthe animals or humans that eat it. Accumulations of fertilizer in the water supply accelerate the\r\ngrowth of algae and, consequently, may disturb the natural cycle of life, contributing to the\r\n<i>(20)</i> death of fish. Too much fertilizer on grass can cause digestive disorders in cattle and in infants\r\nwho drink cow’s milk.\r\n",
    "ans_a": "effective",
    "ans_b": "plentiful",
    "ans_c": "easy to use",
    "ans_d": "cheap to produce",
    "answer": "C"
  },
  {
    "number": "130",
    "type": "reading",
    "question": "What happens when too much fertilizer is used?",
    "text": "Questions 121-130\r\n \r\n          Fertilizer is any substance that can be added to the soil to provide chemical elements\r\nessential for plant nutrition. Natural substances such as animal droppings and straw have been\r\nused as fertilizers for thousands of years, and lime has been used since the Romans intro-\r\nduced it during the Empire. It was not until the nineteenth century, in fact, that chemical fer-\r\n<i>(5)</i> tilizers became popular. Today, both natural and synthetic fertilizers are available in a variety\r\nof forms.\r\n          A complete fertilizer is usually marked with a formula consisting of three numbers, such\r\nas 4-8-2 or 3-6-4, which designate the percentage content of nitrogen, phosphoric acid, and\r\npotash in the order stated.\r\n<i>(10)</i>     Synthetic fertilizers are available in either solid or liquid form. Solids, in the shape of\r\nchemical granules are popular because they are easy to store and apply. Recently, liquids have\r\nshown an increase in popularity, accounting for about 20 percent of the nitrogen fertilizer\r\nused throughout the world. Formerly, powders were also used, but these were found to be\r\nless convenient than either solids or liquids.\r\n<i>(15)</i>    Fertilizers have no harmful effects on the soil, the crop, or the consumer as long as they\r\nare used according to recommendations based on the results of local research. Occasionally,\r\nhowever, farmers may use more fertilizer than necessary, damaging not only the crop but also\r\nthe animals or humans that eat it. Accumulations of fertilizer in the water supply accelerate the\r\ngrowth of algae and, consequently, may disturb the natural cycle of life, contributing to the\r\n<i>(20)</i> death of fish. Too much fertilizer on grass can cause digestive disorders in cattle and in infants\r\nwho drink cow’s milk.\r\n",
    "ans_a": "Local research teams provide recommendations.",
    "ans_b": "Algae in the water supplies begin to die.",
    "ans_c": "Animals and humans may become ill.",
    "ans_d": "Crops have no harmful effects.",
    "answer": "C"
  },
  {
    "number": "131",
    "type": "reading",
    "question": "The main idea of the passage is that",
    "text": "Questions 131-140\r\n          It is often the case with folktales that they develop from actual happenings but in their\r\ndevelopment lose much of their factual base; the story of Pocahontas quite possibly fits into this\r\ncategory of folktale. This princess of the Powhatan tribe was firmly established in the lore of early\r\nAmerica and has been meet even famous by the Disney file based on the folktale that arose from\r\n<i>(5)</i> Her life. She was a real-life person, but the actual story of her life most probably differed considerably\r\nfrom the folktale and the movie based on the folktale.\r\n          Powhatan, the chief of a confederacy of tribes in Virginia, had several daughters, none of whom\r\nwas actually named Pocahontas. The nickname means “playful one,” and several of Powhatan’s\r\ndaughters were called Pocahontas. The daughter of Powhatan who become the subject of the folktale\r\n<i>(10)</i> was named Matoaka. What has been verified about Matoaka, or Pocahontas as she has come to be\r\nknown, is that she did marry an Englishman and that she did spend time in England before she died\r\nthere at a young age. In the spring of 1613, a young Pocahontas was captured by the English and\r\ntaken to Jamestown. There she was treated with courtesy as the daughter of chief Powhatan. While\r\nPocahontas was at Jamestown, English gentleman John Rolfe fell in love with her and asked her to\r\n<i>(15)</i> marry. Both the governor of the Jamestown colony and Pocahontas’s father Powhatan approved the\r\nmarriage as a means of securing peace between Powhatan’s tribe and the English at Jamestown. In\r\n1616, Pocahontas accompanied her new husband to England, where she was royally received. Shortly\r\nbefore her planned return to Virginia in 1617, she contracted an illness and died rather suddenly.\r\n          A major part of the folktale of Pocahontas that is unverified concerns her love for English\r\n<i>(20)</i> Captain John Smith in the period of time before her capture by the British and her rescue of him\r\nfrom almost certain death. Captain John Smith was indeed at the colony of Jamestown and was\r\nacquainted with Powhatan and his daughters; he even described meeting them in a 1612 journal.\r\nHowever, the story of his rescue by the young maiden did not appear in his writings until 1624, well\r\nafter Pocahontas had aroused widespread interest in England by her marriage to an English\r\n<i>(25)</i> gentleman and her visit to England. It is this discrepancy in dates that has caused some historian to\r\ndoubt the veracity of the tale. However, other historians do argue quite persuasively that this incident\r\ndid truly take place.\r\n",
    "ans_a": "folktales are often not very factual",
    "ans_b": "Pocahontas did not really exist",
    "ans_c": "any one of Powhatan’s daughters could have been the Pocahontas of legend",
    "ans_d": "Pocahontas fell in love with John Smith and saved his life",
    "answer": "A"
  },
  {
    "number": "132",
    "type": "reading",
    "question": "The expression \"arose from” in line 4 is closest in meaning to",
    "text": "Questions 131-140\r\n          It is often the case with folktales that they develop from actual happenings but in their\r\ndevelopment lose much of their factual base; the story of Pocahontas quite possibly fits into this\r\ncategory of folktale. This princess of the Powhatan tribe was firmly established in the lore of early\r\nAmerica and has been meet even famous by the Disney file based on the folktale that arose from\r\n<i>(5)</i> Her life. She was a real-life person, but the actual story of her life most probably differed considerably\r\nfrom the folktale and the movie based on the folktale.\r\n          Powhatan, the chief of a confederacy of tribes in Virginia, had several daughters, none of whom\r\nwas actually named Pocahontas. The nickname means “playful one,” and several of Powhatan’s\r\ndaughters were called Pocahontas. The daughter of Powhatan who become the subject of the folktale\r\n<i>(10)</i> was named Matoaka. What has been verified about Matoaka, or Pocahontas as she has come to be\r\nknown, is that she did marry an Englishman and that she did spend time in England before she died\r\nthere at a young age. In the spring of 1613, a young Pocahontas was captured by the English and\r\ntaken to Jamestown. There she was treated with courtesy as the daughter of chief Powhatan. While\r\nPocahontas was at Jamestown, English gentleman John Rolfe fell in love with her and asked her to\r\n<i>(15)</i> marry. Both the governor of the Jamestown colony and Pocahontas’s father Powhatan approved the\r\nmarriage as a means of securing peace between Powhatan’s tribe and the English at Jamestown. In\r\n1616, Pocahontas accompanied her new husband to England, where she was royally received. Shortly\r\nbefore her planned return to Virginia in 1617, she contracted an illness and died rather suddenly.\r\n          A major part of the folktale of Pocahontas that is unverified concerns her love for English\r\n<i>(20)</i> Captain John Smith in the period of time before her capture by the British and her rescue of him\r\nfrom almost certain death. Captain John Smith was indeed at the colony of Jamestown and was\r\nacquainted with Powhatan and his daughters; he even described meeting them in a 1612 journal.\r\nHowever, the story of his rescue by the young maiden did not appear in his writings until 1624, well\r\nafter Pocahontas had aroused widespread interest in England by her marriage to an English\r\n<i>(25)</i> gentleman and her visit to England. It is this discrepancy in dates that has caused some historian to\r\ndoubt the veracity of the tale. However, other historians do argue quite persuasively that this incident\r\ndid truly take place.\r\n",
    "ans_a": "developed from",
    "ans_b": "went up with",
    "ans_c": "was told during",
    "ans_d": "climbed to",
    "answer": "A"
  },
  {
    "number": "133",
    "type": "reading",
    "question": "What is true about the name Pocohontas, according to the passage?",
    "text": "Questions 131-140\r\n          It is often the case with folktales that they develop from actual happenings but in their\r\ndevelopment lose much of their factual base; the story of Pocahontas quite possibly fits into this\r\ncategory of folktale. This princess of the Powhatan tribe was firmly established in the lore of early\r\nAmerica and has been meet even famous by the Disney file based on the folktale that arose from\r\n<i>(5)</i> Her life. She was a real-life person, but the actual story of her life most probably differed considerably\r\nfrom the folktale and the movie based on the folktale.\r\n          Powhatan, the chief of a confederacy of tribes in Virginia, had several daughters, none of whom\r\nwas actually named Pocahontas. The nickname means “playful one,” and several of Powhatan’s\r\ndaughters were called Pocahontas. The daughter of Powhatan who become the subject of the folktale\r\n<i>(10)</i> was named Matoaka. What has been verified about Matoaka, or Pocahontas as she has come to be\r\nknown, is that she did marry an Englishman and that she did spend time in England before she died\r\nthere at a young age. In the spring of 1613, a young Pocahontas was captured by the English and\r\ntaken to Jamestown. There she was treated with courtesy as the daughter of chief Powhatan. While\r\nPocahontas was at Jamestown, English gentleman John Rolfe fell in love with her and asked her to\r\n<i>(15)</i> marry. Both the governor of the Jamestown colony and Pocahontas’s father Powhatan approved the\r\nmarriage as a means of securing peace between Powhatan’s tribe and the English at Jamestown. In\r\n1616, Pocahontas accompanied her new husband to England, where she was royally received. Shortly\r\nbefore her planned return to Virginia in 1617, she contracted an illness and died rather suddenly.\r\n          A major part of the folktale of Pocahontas that is unverified concerns her love for English\r\n<i>(20)</i> Captain John Smith in the period of time before her capture by the British and her rescue of him\r\nfrom almost certain death. Captain John Smith was indeed at the colony of Jamestown and was\r\nacquainted with Powhatan and his daughters; he even described meeting them in a 1612 journal.\r\nHowever, the story of his rescue by the young maiden did not appear in his writings until 1624, well\r\nafter Pocahontas had aroused widespread interest in England by her marriage to an English\r\n<i>(25)</i> gentleman and her visit to England. It is this discrepancy in dates that has caused some historian to\r\ndoubt the veracity of the tale. However, other historians do argue quite persuasively that this incident\r\ndid truly take place.\r\n",
    "ans_a": "It was the real name of a girl named Matoaka.",
    "ans_b": "It meant that someone was playful.",
    "ans_c": "Only one girl was known to have used this name.",
    "ans_d": "Powhatan was one of several people to be given this nickname.",
    "answer": "B"
  },
  {
    "number": "134",
    "type": "reading",
    "question": "How was Pocahontas treated when she was held at Jamestown?",
    "text": "Questions 131-140\r\n          It is often the case with folktales that they develop from actual happenings but in their\r\ndevelopment lose much of their factual base; the story of Pocahontas quite possibly fits into this\r\ncategory of folktale. This princess of the Powhatan tribe was firmly established in the lore of early\r\nAmerica and has been meet even famous by the Disney file based on the folktale that arose from\r\n<i>(5)</i> Her life. She was a real-life person, but the actual story of her life most probably differed considerably\r\nfrom the folktale and the movie based on the folktale.\r\n          Powhatan, the chief of a confederacy of tribes in Virginia, had several daughters, none of whom\r\nwas actually named Pocahontas. The nickname means “playful one,” and several of Powhatan’s\r\ndaughters were called Pocahontas. The daughter of Powhatan who become the subject of the folktale\r\n<i>(10)</i> was named Matoaka. What has been verified about Matoaka, or Pocahontas as she has come to be\r\nknown, is that she did marry an Englishman and that she did spend time in England before she died\r\nthere at a young age. In the spring of 1613, a young Pocahontas was captured by the English and\r\ntaken to Jamestown. There she was treated with courtesy as the daughter of chief Powhatan. While\r\nPocahontas was at Jamestown, English gentleman John Rolfe fell in love with her and asked her to\r\n<i>(15)</i> marry. Both the governor of the Jamestown colony and Pocahontas’s father Powhatan approved the\r\nmarriage as a means of securing peace between Powhatan’s tribe and the English at Jamestown. In\r\n1616, Pocahontas accompanied her new husband to England, where she was royally received. Shortly\r\nbefore her planned return to Virginia in 1617, she contracted an illness and died rather suddenly.\r\n          A major part of the folktale of Pocahontas that is unverified concerns her love for English\r\n<i>(20)</i> Captain John Smith in the period of time before her capture by the British and her rescue of him\r\nfrom almost certain death. Captain John Smith was indeed at the colony of Jamestown and was\r\nacquainted with Powhatan and his daughters; he even described meeting them in a 1612 journal.\r\nHowever, the story of his rescue by the young maiden did not appear in his writings until 1624, well\r\nafter Pocahontas had aroused widespread interest in England by her marriage to an English\r\n<i>(25)</i> gentleman and her visit to England. It is this discrepancy in dates that has caused some historian to\r\ndoubt the veracity of the tale. However, other historians do argue quite persuasively that this incident\r\ndid truly take place.\r\n",
    "ans_a": "With respect",
    "ans_b": "With disdain",
    "ans_c": "With surprise",
    "ans_d": "With harshness",
    "answer": "A"
  },
  {
    "number": "135",
    "type": "reading",
    "question": "It can be inferred from the passage that Pocahontas",
    "text": "Questions 131-140\r\n          It is often the case with folktales that they develop from actual happenings but in their\r\ndevelopment lose much of their factual base; the story of Pocahontas quite possibly fits into this\r\ncategory of folktale. This princess of the Powhatan tribe was firmly established in the lore of early\r\nAmerica and has been meet even famous by the Disney file based on the folktale that arose from\r\n<i>(5)</i> Her life. She was a real-life person, but the actual story of her life most probably differed considerably\r\nfrom the folktale and the movie based on the folktale.\r\n          Powhatan, the chief of a confederacy of tribes in Virginia, had several daughters, none of whom\r\nwas actually named Pocahontas. The nickname means “playful one,” and several of Powhatan’s\r\ndaughters were called Pocahontas. The daughter of Powhatan who become the subject of the folktale\r\n<i>(10)</i> was named Matoaka. What has been verified about Matoaka, or Pocahontas as she has come to be\r\nknown, is that she did marry an Englishman and that she did spend time in England before she died\r\nthere at a young age. In the spring of 1613, a young Pocahontas was captured by the English and\r\ntaken to Jamestown. There she was treated with courtesy as the daughter of chief Powhatan. While\r\nPocahontas was at Jamestown, English gentleman John Rolfe fell in love with her and asked her to\r\n<i>(15)</i> marry. Both the governor of the Jamestown colony and Pocahontas’s father Powhatan approved the\r\nmarriage as a means of securing peace between Powhatan’s tribe and the English at Jamestown. In\r\n1616, Pocahontas accompanied her new husband to England, where she was royally received. Shortly\r\nbefore her planned return to Virginia in 1617, she contracted an illness and died rather suddenly.\r\n          A major part of the folktale of Pocahontas that is unverified concerns her love for English\r\n<i>(20)</i> Captain John Smith in the period of time before her capture by the British and her rescue of him\r\nfrom almost certain death. Captain John Smith was indeed at the colony of Jamestown and was\r\nacquainted with Powhatan and his daughters; he even described meeting them in a 1612 journal.\r\nHowever, the story of his rescue by the young maiden did not appear in his writings until 1624, well\r\nafter Pocahontas had aroused widespread interest in England by her marriage to an English\r\n<i>(25)</i> gentleman and her visit to England. It is this discrepancy in dates that has caused some historian to\r\ndoubt the veracity of the tale. However, other historians do argue quite persuasively that this incident\r\ndid truly take place.\r\n",
    "ans_a": "never intended to return to Virginia",
    "ans_b": "had a long marriage",
    "ans_c": "suffered from a long illness",
    "ans_d": "did not mean to remain in England",
    "answer": "D"
  },
  {
    "number": "136",
    "type": "reading",
    "question": "The word “indeed” in line 21 is closest in meaning to",
    "text": "Questions 131-140\r\n          It is often the case with folktales that they develop from actual happenings but in their\r\ndevelopment lose much of their factual base; the story of Pocahontas quite possibly fits into this\r\ncategory of folktale. This princess of the Powhatan tribe was firmly established in the lore of early\r\nAmerica and has been meet even famous by the Disney file based on the folktale that arose from\r\n<i>(5)</i> Her life. She was a real-life person, but the actual story of her life most probably differed considerably\r\nfrom the folktale and the movie based on the folktale.\r\n          Powhatan, the chief of a confederacy of tribes in Virginia, had several daughters, none of whom\r\nwas actually named Pocahontas. The nickname means “playful one,” and several of Powhatan’s\r\ndaughters were called Pocahontas. The daughter of Powhatan who become the subject of the folktale\r\n<i>(10)</i> was named Matoaka. What has been verified about Matoaka, or Pocahontas as she has come to be\r\nknown, is that she did marry an Englishman and that she did spend time in England before she died\r\nthere at a young age. In the spring of 1613, a young Pocahontas was captured by the English and\r\ntaken to Jamestown. There she was treated with courtesy as the daughter of chief Powhatan. While\r\nPocahontas was at Jamestown, English gentleman John Rolfe fell in love with her and asked her to\r\n<i>(15)</i> marry. Both the governor of the Jamestown colony and Pocahontas’s father Powhatan approved the\r\nmarriage as a means of securing peace between Powhatan’s tribe and the English at Jamestown. In\r\n1616, Pocahontas accompanied her new husband to England, where she was royally received. Shortly\r\nbefore her planned return to Virginia in 1617, she contracted an illness and died rather suddenly.\r\n          A major part of the folktale of Pocahontas that is unverified concerns her love for English\r\n<i>(20)</i> Captain John Smith in the period of time before her capture by the British and her rescue of him\r\nfrom almost certain death. Captain John Smith was indeed at the colony of Jamestown and was\r\nacquainted with Powhatan and his daughters; he even described meeting them in a 1612 journal.\r\nHowever, the story of his rescue by the young maiden did not appear in his writings until 1624, well\r\nafter Pocahontas had aroused widespread interest in England by her marriage to an English\r\n<i>(25)</i> gentleman and her visit to England. It is this discrepancy in dates that has caused some historian to\r\ndoubt the veracity of the tale. However, other historians do argue quite persuasively that this incident\r\ndid truly take place.\r\n",
    "ans_a": "therefore",
    "ans_b": "in fact",
    "ans_c": "unexpectedly",
    "ans_d": "in contrast",
    "answer": "B"
  },
  {
    "number": "137",
    "type": "reading",
    "question": "The pronoun “he” in line 22 refers to",
    "text": "Questions 131-140\r\n          It is often the case with folktales that they develop from actual happenings but in their\r\ndevelopment lose much of their factual base; the story of Pocahontas quite possibly fits into this\r\ncategory of folktale. This princess of the Powhatan tribe was firmly established in the lore of early\r\nAmerica and has been meet even famous by the Disney file based on the folktale that arose from\r\n<i>(5)</i> Her life. She was a real-life person, but the actual story of her life most probably differed considerably\r\nfrom the folktale and the movie based on the folktale.\r\n          Powhatan, the chief of a confederacy of tribes in Virginia, had several daughters, none of whom\r\nwas actually named Pocahontas. The nickname means “playful one,” and several of Powhatan’s\r\ndaughters were called Pocahontas. The daughter of Powhatan who become the subject of the folktale\r\n<i>(10)</i> was named Matoaka. What has been verified about Matoaka, or Pocahontas as she has come to be\r\nknown, is that she did marry an Englishman and that she did spend time in England before she died\r\nthere at a young age. In the spring of 1613, a young Pocahontas was captured by the English and\r\ntaken to Jamestown. There she was treated with courtesy as the daughter of chief Powhatan. While\r\nPocahontas was at Jamestown, English gentleman John Rolfe fell in love with her and asked her to\r\n<i>(15)</i> marry. Both the governor of the Jamestown colony and Pocahontas’s father Powhatan approved the\r\nmarriage as a means of securing peace between Powhatan’s tribe and the English at Jamestown. In\r\n1616, Pocahontas accompanied her new husband to England, where she was royally received. Shortly\r\nbefore her planned return to Virginia in 1617, she contracted an illness and died rather suddenly.\r\n          A major part of the folktale of Pocahontas that is unverified concerns her love for English\r\n<i>(20)</i> Captain John Smith in the period of time before her capture by the British and her rescue of him\r\nfrom almost certain death. Captain John Smith was indeed at the colony of Jamestown and was\r\nacquainted with Powhatan and his daughters; he even described meeting them in a 1612 journal.\r\nHowever, the story of his rescue by the young maiden did not appear in his writings until 1624, well\r\nafter Pocahontas had aroused widespread interest in England by her marriage to an English\r\n<i>(25)</i> gentleman and her visit to England. It is this discrepancy in dates that has caused some historian to\r\ndoubt the veracity of the tale. However, other historians do argue quite persuasively that this incident\r\ndid truly take place.\r\n",
    "ans_a": "the governor",
    "ans_b": "Pocahontas",
    "ans_c": "John Smith",
    "ans_d": "Powhatan",
    "answer": "C"
  },
  {
    "number": "138",
    "type": "reading",
    "question": "When did John Smith most likely meet Pocahontas?",
    "text": "Questions 131-140\r\n          It is often the case with folktales that they develop from actual happenings but in their\r\ndevelopment lose much of their factual base; the story of Pocahontas quite possibly fits into this\r\ncategory of folktale. This princess of the Powhatan tribe was firmly established in the lore of early\r\nAmerica and has been meet even famous by the Disney file based on the folktale that arose from\r\n<i>(5)</i> Her life. She was a real-life person, but the actual story of her life most probably differed considerably\r\nfrom the folktale and the movie based on the folktale.\r\n          Powhatan, the chief of a confederacy of tribes in Virginia, had several daughters, none of whom\r\nwas actually named Pocahontas. The nickname means “playful one,” and several of Powhatan’s\r\ndaughters were called Pocahontas. The daughter of Powhatan who become the subject of the folktale\r\n<i>(10)</i> was named Matoaka. What has been verified about Matoaka, or Pocahontas as she has come to be\r\nknown, is that she did marry an Englishman and that she did spend time in England before she died\r\nthere at a young age. In the spring of 1613, a young Pocahontas was captured by the English and\r\ntaken to Jamestown. There she was treated with courtesy as the daughter of chief Powhatan. While\r\nPocahontas was at Jamestown, English gentleman John Rolfe fell in love with her and asked her to\r\n<i>(15)</i> marry. Both the governor of the Jamestown colony and Pocahontas’s father Powhatan approved the\r\nmarriage as a means of securing peace between Powhatan’s tribe and the English at Jamestown. In\r\n1616, Pocahontas accompanied her new husband to England, where she was royally received. Shortly\r\nbefore her planned return to Virginia in 1617, she contracted an illness and died rather suddenly.\r\n          A major part of the folktale of Pocahontas that is unverified concerns her love for English\r\n<i>(20)</i> Captain John Smith in the period of time before her capture by the British and her rescue of him\r\nfrom almost certain death. Captain John Smith was indeed at the colony of Jamestown and was\r\nacquainted with Powhatan and his daughters; he even described meeting them in a 1612 journal.\r\nHowever, the story of his rescue by the young maiden did not appear in his writings until 1624, well\r\nafter Pocahontas had aroused widespread interest in England by her marriage to an English\r\n<i>(25)</i> gentleman and her visit to England. It is this discrepancy in dates that has caused some historian to\r\ndoubt the veracity of the tale. However, other historians do argue quite persuasively that this incident\r\ndid truly take place.\r\n",
    "ans_a": "In 1612",
    "ans_b": "In 1613",
    "ans_c": "In 1616",
    "ans_d": "In 1624",
    "answer": "A"
  },
  {
    "number": "139",
    "type": "reading",
    "question": "Why are some historians doubtful about the portion of the Pocahontas folktale dealing with John Smith?",
    "text": "Questions 131-140\r\n          It is often the case with folktales that they develop from actual happenings but in their\r\ndevelopment lose much of their factual base; the story of Pocahontas quite possibly fits into this\r\ncategory of folktale. This princess of the Powhatan tribe was firmly established in the lore of early\r\nAmerica and has been meet even famous by the Disney file based on the folktale that arose from\r\n<i>(5)</i> Her life. She was a real-life person, but the actual story of her life most probably differed considerably\r\nfrom the folktale and the movie based on the folktale.\r\n          Powhatan, the chief of a confederacy of tribes in Virginia, had several daughters, none of whom\r\nwas actually named Pocahontas. The nickname means “playful one,” and several of Powhatan’s\r\ndaughters were called Pocahontas. The daughter of Powhatan who become the subject of the folktale\r\n<i>(10)</i> was named Matoaka. What has been verified about Matoaka, or Pocahontas as she has come to be\r\nknown, is that she did marry an Englishman and that she did spend time in England before she died\r\nthere at a young age. In the spring of 1613, a young Pocahontas was captured by the English and\r\ntaken to Jamestown. There she was treated with courtesy as the daughter of chief Powhatan. While\r\nPocahontas was at Jamestown, English gentleman John Rolfe fell in love with her and asked her to\r\n<i>(15)</i> marry. Both the governor of the Jamestown colony and Pocahontas’s father Powhatan approved the\r\nmarriage as a means of securing peace between Powhatan’s tribe and the English at Jamestown. In\r\n1616, Pocahontas accompanied her new husband to England, where she was royally received. Shortly\r\nbefore her planned return to Virginia in 1617, she contracted an illness and died rather suddenly.\r\n          A major part of the folktale of Pocahontas that is unverified concerns her love for English\r\n<i>(20)</i> Captain John Smith in the period of time before her capture by the British and her rescue of him\r\nfrom almost certain death. Captain John Smith was indeed at the colony of Jamestown and was\r\nacquainted with Powhatan and his daughters; he even described meeting them in a 1612 journal.\r\nHowever, the story of his rescue by the young maiden did not appear in his writings until 1624, well\r\nafter Pocahontas had aroused widespread interest in England by her marriage to an English\r\n<i>(25)</i> gentleman and her visit to England. It is this discrepancy in dates that has caused some historian to\r\ndoubt the veracity of the tale. However, other historians do argue quite persuasively that this incident\r\ndid truly take place.\r\n",
    "ans_a": "Captain John Smith probably never knew Pocahontas.",
    "ans_b": "Captain John Smith was never actually in Jamestown.",
    "ans_c": "His rescue purportedly happened while Pocahontas was in England.",
    "ans_d": "His account of the rescue did not appear until well after the event supposedly happened.",
    "answer": "D"
  },
  {
    "number": "140",
    "type": "reading",
    "question": "The word “veracity” in line 26 is closest in meaning to",
    "text": "Questions 131-140\r\n          It is often the case with folktales that they develop from actual happenings but in their\r\ndevelopment lose much of their factual base; the story of Pocahontas quite possibly fits into this\r\ncategory of folktale. This princess of the Powhatan tribe was firmly established in the lore of early\r\nAmerica and has been meet even famous by the Disney file based on the folktale that arose from\r\n<i>(5)</i> Her life. She was a real-life person, but the actual story of her life most probably differed considerably\r\nfrom the folktale and the movie based on the folktale.\r\n          Powhatan, the chief of a confederacy of tribes in Virginia, had several daughters, none of whom\r\nwas actually named Pocahontas. The nickname means “playful one,” and several of Powhatan’s\r\ndaughters were called Pocahontas. The daughter of Powhatan who become the subject of the folktale\r\n<i>(10)</i> was named Matoaka. What has been verified about Matoaka, or Pocahontas as she has come to be\r\nknown, is that she did marry an Englishman and that she did spend time in England before she died\r\nthere at a young age. In the spring of 1613, a young Pocahontas was captured by the English and\r\ntaken to Jamestown. There she was treated with courtesy as the daughter of chief Powhatan. While\r\nPocahontas was at Jamestown, English gentleman John Rolfe fell in love with her and asked her to\r\n<i>(15)</i> marry. Both the governor of the Jamestown colony and Pocahontas’s father Powhatan approved the\r\nmarriage as a means of securing peace between Powhatan’s tribe and the English at Jamestown. In\r\n1616, Pocahontas accompanied her new husband to England, where she was royally received. Shortly\r\nbefore her planned return to Virginia in 1617, she contracted an illness and died rather suddenly.\r\n          A major part of the folktale of Pocahontas that is unverified concerns her love for English\r\n<i>(20)</i> Captain John Smith in the period of time before her capture by the British and her rescue of him\r\nfrom almost certain death. Captain John Smith was indeed at the colony of Jamestown and was\r\nacquainted with Powhatan and his daughters; he even described meeting them in a 1612 journal.\r\nHowever, the story of his rescue by the young maiden did not appear in his writings until 1624, well\r\nafter Pocahontas had aroused widespread interest in England by her marriage to an English\r\n<i>(25)</i> gentleman and her visit to England. It is this discrepancy in dates that has caused some historian to\r\ndoubt the veracity of the tale. However, other historians do argue quite persuasively that this incident\r\ndid truly take place.\r\n",
    "ans_a": "timing",
    "ans_b": "location",
    "ans_c": "understanding",
    "ans_d": "accuracy",
    "answer": "D"
  }
]