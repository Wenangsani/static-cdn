 [
  {
    "number": "51",
    "type": "structure",
    "direction": "<b>SECTION 2</b>\r\n<b>STRUCTURE AND WRITTEN EXPRESSION</b>\r\nThis section is designed to measure your ability to recognize language that is appropriate for standard written English. There are two types of questions in this section, with special directions for each type.\r\n\r\n<b>Structure</b>\r\n\r\n<b>Directions</b>: Questions 1-15 are incomplete sentences. Beneath each sentence you will see four words or phrases, marked (A), (B), (C), and (D). Choose the <b>one</b> word or phrase that best completes the sentence. Then, on your answer sheet, find the number of the question and fill in the space that corresponds to the letter of the answer you have chosen. Fill in the space s0 that the letter inside the oval cannot be seen.\r\nLook at the following examples.\r\n\r\n<b>Example 1</b>\r\nThe president _____ the election by a landslide.\r\nA. won \r\nB. he won\r\nC. yesterday\r\nD. fortunately\r\nThe sentence should read, “The president won the election by a landslide.” Therefore, you should choose (A).\r\n\r\n<b>Example II</b>\r\nWhen _____ the conference\r\nA. the doctor attended\r\nB. did the doctor attend\r\nC. the doctor will attend\r\nD. the doctor attendance\r\nThe sentence should read, “When did the doctor attend the conference?\" Therefore, you should choose (B).\r\nNow begin work on the questions.\r\n",
    "question": "_____ range in color from pale yellow to bright orange.",
    "ans_a": "Canaries which",
    "ans_b": "Canaries",
    "ans_c": "That canaries",
    "ans_d": "Canaries that are",
    "answer": "B"
  },
  {
    "number": "52",
    "type": "structure",
    "question": "_____ with the largest alphabet is Cambodian, with 74 letters.",
    "ans_a": "In the language",
    "ans_b": "The language is",
    "ans_c": "The language",
    "ans_d": "About the language",
    "answer": "C"
  },
  {
    "number": "53",
    "type": "structure",
    "question": "Static electricity _____ one cloud to another or between clouds and the ground creates lightning.",
    "ans_a": "flows from",
    "ans_b": "the flow from",
    "ans_c": "flowing from",
    "ans_d": "is flowing from",
    "answer": "C"
  },
  {
    "number": "54",
    "type": "structure",
    "question": "As soon as _____ with an acid, salt, and sometimes water, is formed.",
    "ans_a": "a base will react",
    "ans_b": "a base react",
    "ans_c": "a base is reacting",
    "ans_d": "the reaction of a base",
    "answer": "B"
  },
  {
    "number": "55",
    "type": "structure",
    "question": "The horn of the rhinoceros consists of a cone of tight bundles of keratin _____ from the epidermis.",
    "ans_a": "grow",
    "ans_b": "grows",
    "ans_c": "growing",
    "ans_d": "they grow",
    "answer": "C"
  },
  {
    "number": "56",
    "type": "structure",
    "question": "In 1858, the site _____ was to become the city of Denver was settled as a way station for outfitting gold prospectors.",
    "ans_a": "it",
    "ans_b": "of it",
    "ans_c": "what",
    "ans_d": "of what",
    "answer": "D"
  },
  {
    "number": "57",
    "type": "structure",
    "question": "_____ manipulate with their feet as well as with their hands, it is difficult for them to stand upright.",
    "ans_a": "Apes can, however,",
    "ans_b": "Apes are able to",
    "ans_c": "Despite the ability of apes",
    "ans_d": "Although apes can",
    "answer": "D"
  },
  {
    "number": "58",
    "type": "structure",
    "question": "Acidic lava flows readily and tends to cover much larger areas, while basic lava _____.",
    "ans_a": "viscous",
    "ans_b": "more viscous",
    "ans_c": "is more viscous",
    "ans_d": "it is more viscous",
    "answer": "C"
  },
  {
    "number": "59",
    "type": "structure",
    "question": "A telephone recording tells callers _____.",
    "ans_a": "what time the movie starts",
    "ans_b": "what time starts the movie",
    "ans_c": "what time does the movie start",
    "ans_d": "the movie starts what time",
    "answer": "A"
  },
  {
    "number": "60",
    "type": "structure",
    "question": "_____ in several early civilizations, a cubit was based on the length of the forearm from the tip of the middle finger to the elbow.",
    "ans_a": "It was used as a measurement",
    "ans_b": "A measurement was used",
    "ans_c": "The use of measurement",
    "ans_d": "Used as a measurement",
    "answer": "D"
  },
  {
    "number": "61",
    "type": "structure",
    "question": "The leaves of the white mulberry provide food for silkworms, _____ silk fabrics are woven.",
    "ans_a": "whose cocoons",
    "ans_b": "from cocoons",
    "ans_c": "whose cocoons are from",
    "ans_d": "from whose cocoons",
    "answer": "D"
  },
  {
    "number": "62",
    "type": "structure",
    "question": "The film Lawrence of Arabia is three hours and forty-one minutes long, one \r\nminute _____ Gone with the Wind.",
    "ans_a": "in length like",
    "ans_b": "long is",
    "ans_c": "is longer than",
    "ans_d": "longer than is",
    "answer": "D"
  },
  {
    "number": "63",
    "type": "structure",
    "question": "Not until Nellie Tayloe Ross was elected as governor of Wyoming in 1924 _____ governor of a U.S. state",
    "ans_a": "a woman served",
    "ans_b": "a woman serving",
    "ans_c": "to serve a woman",
    "ans_d": "did a woman serve",
    "answer": "D"
  },
  {
    "number": "64",
    "type": "structure",
    "question": "Huricanes move with the large-scale wind currents _____ are imbedded.",
    "ans_a": "that they",
    "ans_b": "which they",
    "ans_c": "in that they",
    "ans_d": "in which they",
    "answer": "D"
  },
  {
    "number": "65",
    "type": "structure",
    "question": "In general, the cells of large animals and plants are only slightly larger than _____ plants and animals.",
    "ans_a": "smaller",
    "ans_b": "are smaller",
    "ans_c": "those smaller",
    "ans_d": "are those of smaller",
    "answer": "D"
  },
  {
    "number": "66",
    "type": "structure",
    "direction": "<b>Written Expression</b>\r\n\r\n<b>Directions</b>: In these questions, each sentence has four underlined words or phrases. The four underlined parts of the sentence are marked (A), (B), (C), and (D). Identify the <b>one</b> underlined word or phrase that must be changed in order for the sentence to be correct. Then, on your answer sheet, fine the number of the question and fill in the space that corresponds to the letter of the answer you have chosen.\r\n\r\nLook at the following examples.\r\n\r\n<b>Example I</b>\r\n<u>The</u> four <u>string</u> on a violine <u>are</u> <u>turned</u> in fifths.\r\n     A The\r\n     B string\r\n     C are\r\n     D turned\r\nThe sentences should read, “The four strings on a violine are turned in fifths.” Therefore, you should choose answer (B).\r\n\r\n<b>Example II</b>\r\nThe <u>research</u> for <u>the book</u> Roots <u>taking</u> Alex Haley <u>twelve years</u>.\r\n     A research\r\n     B the book\r\n     C taking\r\n     D twelve years\r\nThe sentences should read, “The research for the book Roots took Alex Haley twelve years.” Therefore, you should choose answer (B).",
    "question": "Interest <u>in</u> automatic data processing has <u>grown</u> <u>rapid</u> <u>since</u> the first large calculators were introduced in 1950.",
    "ans_a": "in",
    "ans_b": "grown",
    "ans_c": "rapid",
    "ans_d": "since",
    "answer": "C"
  },
  {
    "number": "67",
    "type": "structure",
    "question": "Every human <u>typically</u> <u>have</u> twenty-three pairs of chromosomes in <u>most</u> <u>cells</u>.",
    "ans_a": "typically",
    "ans_b": "have",
    "ans_c": "most",
    "ans_d": "cells",
    "answer": "B"
  },
  {
    "number": "68",
    "type": "structure",
    "question": "Alexander Hamilton's <u>advocacy</u> of a <u>strong</u> national government brought <u>he</u> into bitter <u>conflict</u> with Thomas Jefferson.",
    "ans_a": "advocacy",
    "ans_b": "strong",
    "ans_c": "he",
    "ans_d": "conflict",
    "answer": "C"
  },
  {
    "number": "69",
    "type": "structure",
    "question": "The harpsichord is <u>the</u> <u>most complex</u> and <u>most large</u> of all the <u>plucked</u> keyboard instruments.",
    "ans_a": "the",
    "ans_b": "most complex",
    "ans_c": "most large",
    "ans_d": "plucked",
    "answer": "C"
  },
  {
    "number": "70",
    "type": "structure",
    "question": "<u>Passengers</u> <u>have ridden</u> the first Ferris <u>wheel</u> at the Columbian Exposition in Chicago <u>in 1893</u>.",
    "ans_a": "Passengers",
    "ans_b": "have ridden",
    "ans_c": "wheel",
    "ans_d": "in 1893",
    "answer": "B"
  },
  {
    "number": "71",
    "type": "structure",
    "question": "<u>Despite of</u> the increase in air fares, most people <u>still</u> <u>prefer</u> <u>to travel</u> by plane.",
    "ans_a": "Despite of",
    "ans_b": "still",
    "ans_c": "prefer",
    "ans_d": "to travel",
    "answer": "A"
  },
  {
    "number": "72",
    "type": "structure",
    "question": "<u>The</u> neocortex has <u>evolved</u> more recently <u>then</u> <u>other</u> layers of the brain. ",
    "ans_a": "The",
    "ans_b": "evolved",
    "ans_c": "then",
    "ans_d": "other",
    "answer": "C"
  },
  {
    "number": "73",
    "type": "structure",
    "question": "In space, with <u>no</u> gravity for muscles to work <u>againts</u>, <u>the body</u> becomes <u>weakly</u>.",
    "ans_a": "no",
    "ans_b": "against",
    "ans_c": "the body",
    "ans_d": "weakly",
    "answer": "D"
  },
  {
    "number": "74",
    "type": "structure",
    "question": "The Washington <u>quarter</u> was <u>first</u> <u>minting</u> by the U.S. government in 1932 on the 200th <u>anniversary</u> of George Washington's birth.",
    "ans_a": "quarter",
    "ans_b": "fisrt",
    "ans_c": "minting",
    "ans_d": "anniversary",
    "answer": "C"
  },
  {
    "number": "75",
    "type": "structure",
    "question": "Tropical cyclones, <u>alike</u> extratropical cyclones, <u>which</u> derive much of <u>their</u> energy from the jet stream, originate <u>far from</u> the polar front.",
    "ans_a": "alike",
    "ans_b": "which",
    "ans_c": "their",
    "ans_d": "far from",
    "answer": "A"
  },
  {
    "number": "76",
    "type": "structure",
    "question": "<u>An</u> hiccup is a <u>spasmodic</u> contraction of the diaphragm, <u>which</u> leads to a massive <u>intake</u> of air.",
    "ans_a": "An",
    "ans_b": "spasmodic",
    "ans_c": "which",
    "ans_d": "intake",
    "answer": "A"
  },
  {
    "number": "77",
    "type": "structure",
    "question": "Jaguarundis are sleek, <u>long-tailed</u> creature <u>colored</u> either <u>an</u> uniform reddish brown <u>or</u> dark grey.",
    "ans_a": "long-tailed",
    "ans_b": "colored",
    "ans_c": "an",
    "ans_d": "or",
    "answer": "C"
  },
  {
    "number": "78",
    "type": "structure",
    "question": "Economics have tired <u>to discourage</u> <u>the use</u> of the phrase \"underdeveloped nation\" and <u>encouraging</u> <u>the more</u> accurate phrase \"developing nation\" in order to suggest an ongoing process.",
    "ans_a": "to discourage",
    "ans_b": "the use",
    "ans_c": "encouraging",
    "ans_d": "the more",
    "answer": "C"
  },
  {
    "number": "79",
    "type": "structure",
    "question": "Never in the history of <u>humanity</u> <u>has</u> there been more people <u>living</u> on this <u>relatively</u> small planet.",
    "ans_a": "humanity",
    "ans_b": "has",
    "ans_c": "living",
    "ans_d": "relatively",
    "answer": "B"
  },
  {
    "number": "80",
    "type": "structure",
    "question": "It is <u>a common</u> observation that liquids <u>will soak</u> through some materials <u>but not</u> through <u>other</u>.",
    "ans_a": "a common",
    "ans_b": "will soak",
    "ans_c": "but not",
    "ans_d": "other",
    "answer": "D"
  },
  {
    "number": "81",
    "type": "structure",
    "question": "In <i>Roots</i>, Alex Haley uses <u>fictional</u> details to <u>embellish</u> a factual <u>histories</u> of seven generations of <u>his</u> family.",
    "ans_a": "fictional",
    "ans_b": "embellish",
    "ans_c": "histories",
    "ans_d": "his",
    "answer": "C"
  },
  {
    "number": "82",
    "type": "structure",
    "question": "<u>In</u> 1821, Emma Willard <u>opened officially</u> the doors of the first school in the United States <u>to offer</u> college-level courses <u>for</u> women. ",
    "ans_a": "In",
    "ans_b": "opened officially",
    "ans_c": "to offer",
    "ans_d": "for",
    "answer": "B"
  },
  {
    "number": "83",
    "type": "structure",
    "question": "<u>Viruses</u> are <u>extremely</u> tiny parasites that are <u>able</u> to reproduce only within the cells of <u>theirs</u> hosts.",
    "ans_a": "Viruses",
    "ans_b": "extremely",
    "ans_c": "able",
    "ans_d": "theirs",
    "answer": "D"
  },
  {
    "number": "84",
    "type": "structure",
    "question": "When they <u>have been</u> <u>frightened</u>, as, for example, <u>by</u> an electrical storm, dairy cows may refuse <u>giving</u> milk.",
    "ans_a": "have been",
    "ans_b": "frightened",
    "ans_c": "by",
    "ans_d": "giving",
    "answer": "D"
  },
  {
    "number": "85",
    "type": "structure",
    "question": "Human <u>develop normally</u> twenty <u>primary<//u>, <u>or<u> deciduous, teeth and thirty-two <u>permanent</u> ones.",
    "ans_a": "develop normally",
    "ans_b": "primary",
    "ans_c": "or",
    "ans_d": "permanent",
    "answer": "A"
  },
  {
    "number": "86",
    "type": "structure",
    "question": "Paul Revere was the son of a French <u>immigratio</u>n named Apollos Rivoire, <u>who</u> later began calling <u>himself</u> Revere to make his name <u>easier</u> for Americans to pronounce.",
    "ans_a": "immigration",
    "ans_b": "who",
    "ans_c": "himself",
    "ans_d": "easier",
    "answer": "A"
  },
  {
    "number": "87",
    "type": "structure",
    "question": "The more <u>directly</u> overhead the Moon is, the <u>great</u> <u>is</u> the <u>effect</u> that it exhibits on the Earth.",
    "ans_a": "directly",
    "ans_b": "great",
    "ans_c": "is",
    "ans_d": "effect",
    "answer": "B"
  },
  {
    "number": "88",
    "type": "structure",
    "question": "A <u>bimetallic</u> thermometer <u>relies</u> the different <u>rates</u> of expansion of two types of metal, <u>usually</u> brass and copper.",
    "ans_a": "bimetallic",
    "ans_b": "relies",
    "ans_c": "rates",
    "ans_d": "usually",
    "answer": "B"
  },
  {
    "number": "89",
    "type": "structure",
    "question": "Animism is the <u>belief</u> that objects and natural <u>phenomena</u> such as rivers, rocks, and wind are <u>live</u> and have <u>feelings</u>.",
    "ans_a": "belief",
    "ans_b": "phenomena",
    "ans_c": "live",
    "ans_d": "feelings",
    "answer": "C"
  },
  {
    "number": "90",
    "type": "structure",
    "question": "The regulation requires that everyone <u>who</u> <u>holds</u> a monimmigrant visa <u>reports</u> <u>an</u> address to the federal government in January of each year.",
    "ans_a": "who",
    "ans_b": "holds",
    "ans_c": "reports",
    "ans_d": "an",
    "answer": "C"
  }
]